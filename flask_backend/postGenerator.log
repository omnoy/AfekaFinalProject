INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'test'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320348, 'jti': '8290ddef-f9ba-471f-a1da-33d5d2703380', 'type': 'access', 'sub': '666b7cdc8edac0a7ed75dcd9', 'nbf': 1718320348, 'csrf': '6df35959-31be-40e4-b05a-d0cfac3d04cf', 'exp': 1718321248}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7cdc8edac0a7ed75dcd9') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$cwifU6R6zy7Jk5jw$d462a54c581bfec055720d788d8c4dc29decb6f35ad364bcd5d2b81173c36e0f4f3270f1c6b9654b88b15e664375fef4aa51cfeb1b1106fab827fcde8e9af426' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320348, 'jti': '5e56d93b-d408-49b1-b9f4-643abb2036eb', 'type': 'access', 'sub': '666b7cdc8edac0a7ed75dcde', 'nbf': 1718320348, 'csrf': '7301d29a-ba82-43db-84c3-d654743abb62', 'exp': 1718321248}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7cdc8edac0a7ed75dcde') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$15SvdosgHsKhGimM$20f5480c323510eb18899e3404d3ae621f6bfb3df49fb23d7d6a088b8b9231a91fb724283234f733890076491e25d9006c68d2db7404cf6032db34058679d52a' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320348, 'jti': '5b2e9aa5-51d2-4eae-8587-b91391f3a054', 'type': 'access', 'sub': '666b7cdc8edac0a7ed75dce1', 'nbf': 1718320348, 'csrf': '2687045e-5867-4343-8651-3ce7a1716f6e', 'exp': 1718321248}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7cdc8edac0a7ed75dce1') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$OZtK50mZzQXwdz43$b21c11c2c21407b9c25afbef5d7ecb7dc8ae1ebbffee5326621461fd26356674ee80c587ac09c2a8060b355a46d2c141a89da1567354c26cf07c0ddcd68a7e82' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
ERROR:app.extensions:403 Forbidden: Unauthorized role, cannot register as admin
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 48, in register
    abort(403, "Unauthorized role, cannot register as admin")
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\helpers.py", line 274, in abort
    current_app.aborter(code, *args, **kwargs)
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\werkzeug\exceptions.py", line 861, in __call__
    raise self.mapping[code](*args, **kwargs)
werkzeug.exceptions.Forbidden: 403 Forbidden: Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320350, 'jti': 'e7dbf74f-acbd-4564-a2f4-177952cd7b3b', 'type': 'access', 'sub': '666b7cde8edac0a7ed75dcf1', 'nbf': 1718320350, 'csrf': 'd07c38ab-e244-40b1-ab36-907232ef2e3f', 'exp': 1718321250}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'newname'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320350, 'jti': '6c801fcb-6e01-4ab6-80de-5db78c49f402', 'type': 'access', 'sub': '666b7cde8edac0a7ed75dcf3', 'nbf': 1718320350, 'csrf': '119ed320-ab2a-4954-aec6-3fbf5540eba5', 'exp': 1718321250}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'new position', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320350, 'jti': '823a98ec-13e1-42d8-b1fd-df5079ffacab', 'type': 'access', 'sub': '666b7cde8edac0a7ed75dcf5', 'nbf': 1718320350, 'csrf': 'a99a0775-f905-4bc9-a143-b05c84ef320c', 'exp': 1718321250}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320350, 'jti': 'd946c664-ca26-49f4-ad38-3a1eabbcf054', 'type': 'access', 'sub': '666b7cde8edac0a7ed75dcf7', 'nbf': 1718320350, 'csrf': '1b109f25-d936-42be-a136-4fa0ead3a385', 'exp': 1718321250}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': ''}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320350, 'jti': 'ddbe0c3f-ea38-42e6-9753-fefd16b2bc91', 'type': 'access', 'sub': '666b7cde8edac0a7ed75dcf9', 'nbf': 1718320350, 'csrf': 'f613344b-10de-4a42-bccf-db93de82e66f', 'exp': 1718321250}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': '', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320350, 'jti': '0360db8b-85be-4241-bafa-ff50aae9477a', 'type': 'access', 'sub': '666b7cde8edac0a7ed75dcfb', 'nbf': 1718320350, 'csrf': 'bca9108a-ba3c-413e-8f42-3a25cbd9669a', 'exp': 1718321250}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Email cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320350, 'jti': 'f87123e1-1cda-4c8f-aba3-ff8f53c5a1b2', 'type': 'access', 'sub': '666b7cde8edac0a7ed75dcfd', 'nbf': 1718320350, 'csrf': '7c3994c7-a3df-4e92-b430-bdb8afe914ae', 'exp': 1718321250}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Role cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'test'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320768, 'jti': '5380fb45-2d0a-4331-ba68-961b6c1b9bb8', 'type': 'access', 'sub': '666b7e80c0f3613d0377200f', 'nbf': 1718320768, 'csrf': '944df308-92ae-4615-9919-b8cf541de289', 'exp': 1718321668}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7e80c0f3613d0377200f') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$gqO6gsnCLo3hFPXD$a3fefcc9723617971e279f03b7da9b8cf32068e3f5375acc0720839d8126c2c3e8e150c5affac7a139cb5519bbd4a8063a997bed9ae7173453fb7f2f3dd4e193' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320768, 'jti': 'a84de2b2-4dad-48ef-8d08-7a0584a82e2c', 'type': 'access', 'sub': '666b7e80c0f3613d03772014', 'nbf': 1718320768, 'csrf': '7e2a90f0-5796-44e7-9d2d-c87e4109b055', 'exp': 1718321668}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7e80c0f3613d03772014') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$p2nUzWtIdn7C1XBN$0b8c93a7b3bd50df3528ee82192001b126ded2491ce1e6191547113c72064766649b814338bb5e89aa3b2ff07abc79d14d88e7b875a33d670b0f5ad853921401' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320768, 'jti': '9e235880-9db8-489b-877d-2b338ead17fd', 'type': 'access', 'sub': '666b7e80c0f3613d03772017', 'nbf': 1718320768, 'csrf': 'd2f43ce0-e30d-4fc0-a817-82234875b0d7', 'exp': 1718321668}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7e80c0f3613d03772017') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$fKKhNWc0HoDjimzS$20db59b6d46d355d6c57ff294dbe42f51fb0de0d0fbcd0b93422fee76acd231c76ab8e94e1fdea9d5cd9bfbafee2f70b03f53d48beef72899cfefc445b55a43b' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320769, 'jti': '1be39134-8a5d-41fc-8c9a-fb5f766c8f50', 'type': 'access', 'sub': '666b7e81c0f3613d03772027', 'nbf': 1718320769, 'csrf': 'efead82b-eee7-4b4d-94a5-023d41628195', 'exp': 1718321669}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'newname'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320769, 'jti': '2601677f-d621-42eb-bd8f-f1009746ba5f', 'type': 'access', 'sub': '666b7e81c0f3613d03772029', 'nbf': 1718320769, 'csrf': '23a8105f-f9b1-4a30-b27f-7f79b282d863', 'exp': 1718321669}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'new position', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320770, 'jti': '2bcb6b95-ece1-4a8f-a886-e2a6cb58ab83', 'type': 'access', 'sub': '666b7e82c0f3613d0377202b', 'nbf': 1718320770, 'csrf': '481c9b3c-d824-440b-b5e0-7babcbdba9d4', 'exp': 1718321670}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320770, 'jti': '7c862b42-8b20-4a4e-8087-f718f47a80f0', 'type': 'access', 'sub': '666b7e82c0f3613d0377202d', 'nbf': 1718320770, 'csrf': '087fce68-5d91-4dc6-9d30-060294a85658', 'exp': 1718321670}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': ''}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320770, 'jti': '62282a95-6912-4cb6-be54-be4545c2c71d', 'type': 'access', 'sub': '666b7e82c0f3613d0377202f', 'nbf': 1718320770, 'csrf': 'c2ae4ba6-780c-45f2-92fa-c56e8f5997db', 'exp': 1718321670}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': '', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320770, 'jti': 'd5a54d12-1835-4b94-a597-b671bb6bc373', 'type': 'access', 'sub': '666b7e82c0f3613d03772031', 'nbf': 1718320770, 'csrf': 'a4c5980d-3b4e-4f68-8c7e-b6a6453649d7', 'exp': 1718321670}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Email cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320770, 'jti': '12e05fb9-cd5e-42f0-831d-d610624935b2', 'type': 'access', 'sub': '666b7e82c0f3613d03772033', 'nbf': 1718320770, 'csrf': 'fb950f46-1de9-4483-b04c-3e8d12ef7b3e', 'exp': 1718321670}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Role cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'test'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320896, 'jti': 'e9119b04-41fd-4bec-aa55-9d4865fd08f3', 'type': 'access', 'sub': '666b7f0007e2c7a5df36a547', 'nbf': 1718320896, 'csrf': '288bc016-c3c2-4647-968a-269a6a0256ea', 'exp': 1718321796}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7f0007e2c7a5df36a547') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$ETqNokNwoWGgjad2$e6bd9707897b330c0abef51001ae87007f34d5312bf2aeb0fbb60532aa2ccbb14badc85801f2633a1109f1227cd599a4ca0bc8e37b77cd736a6ea8b77bc2def7' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320896, 'jti': 'f6f52666-1f3f-4569-bebf-8cc6d42bf946', 'type': 'access', 'sub': '666b7f0007e2c7a5df36a54c', 'nbf': 1718320896, 'csrf': 'a3ca8583-3017-4aea-b4f9-406e1b90f5ed', 'exp': 1718321796}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7f0007e2c7a5df36a54c') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$a9bIZdj1fNtt3S8i$8e85f2d622b147a5fc14ca7ef900839d4cd2d600ea33b7dbf2a17dd64e52c57d813c11064b74adc19d4c3566b6de731f396fd0c2855fb6fb4f63e29534b50297' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320896, 'jti': 'ed2a3c71-4dce-4b71-87c7-927284757bc5', 'type': 'access', 'sub': '666b7f0007e2c7a5df36a54f', 'nbf': 1718320896, 'csrf': 'de1e580b-4671-42c8-bbe5-10a9aba352b5', 'exp': 1718321796}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7f0007e2c7a5df36a54f') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$roT73bO2mA69wVvK$7f88d9771aebb1891d5651be2a3e0201f4d17e993e49b594b17039b3441f6b0557aa385ccc92a4ae709f8cf211b549a28656f81559487ff59e8d8fd65fb2d646' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320898, 'jti': 'fcab9179-0573-491d-bd4b-a0b3e6cf58c8', 'type': 'access', 'sub': '666b7f0207e2c7a5df36a55f', 'nbf': 1718320898, 'csrf': 'a49440b6-2c41-489f-bad3-bcceb47496f3', 'exp': 1718321798}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'newname'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320898, 'jti': '80e6706f-0977-45a0-bd0d-83e48cf387ed', 'type': 'access', 'sub': '666b7f0207e2c7a5df36a561', 'nbf': 1718320898, 'csrf': '192e3962-8a3a-4e12-9e46-dd7487155d5a', 'exp': 1718321798}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'new position', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320898, 'jti': '6a165675-c59a-408d-90a8-6a5b6f1f1bad', 'type': 'access', 'sub': '666b7f0207e2c7a5df36a563', 'nbf': 1718320898, 'csrf': '1aa5c383-f628-4e46-a89b-c781852803fb', 'exp': 1718321798}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320898, 'jti': '8a218e34-e2b3-4a5f-93ec-5baf21d068a4', 'type': 'access', 'sub': '666b7f0207e2c7a5df36a565', 'nbf': 1718320898, 'csrf': 'e65e91ab-9ec5-4174-9431-d046ab9f1e89', 'exp': 1718321798}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': ''}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320898, 'jti': 'a9e0ecf6-8a4c-4e11-8afc-f07b81d9db0d', 'type': 'access', 'sub': '666b7f0207e2c7a5df36a567', 'nbf': 1718320898, 'csrf': '5eb4e86c-60d9-4df7-8388-901ebbf4435d', 'exp': 1718321798}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': '', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320898, 'jti': 'e15fde1d-b52b-45d9-a919-e3350e6be626', 'type': 'access', 'sub': '666b7f0207e2c7a5df36a569', 'nbf': 1718320898, 'csrf': '24955ff0-f343-46bc-8f12-2b4fd49f0cb9', 'exp': 1718321798}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Email cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320898, 'jti': 'f086987c-f61c-4a97-aaa7-2e0be6d77e48', 'type': 'access', 'sub': '666b7f0207e2c7a5df36a56b', 'nbf': 1718320898, 'csrf': 'ce468020-9a11-4f3a-b683-20e65edb4e3d', 'exp': 1718321798}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Role cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'test'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718321004, 'jti': '84385c89-edc8-4f40-adfc-6d798840ff3f', 'type': 'access', 'sub': '666b7f6ce9e1f0eb6839e6cc', 'nbf': 1718321004, 'csrf': 'fa8e00a6-fbe9-48b4-b8bc-b8cb61f385f1', 'exp': 1718321904}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7f6ce9e1f0eb6839e6cc') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$Y8xWbKolDSJdtkZr$3e772b80a2c3e09a4d734a3920f69e10a9fafb10e6e5ae7e2a896d71bb26ab0e1b95ac421988f72cb2c82df5f52ed279a28ff9bb62f8480f391ee81398aac24d' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718321005, 'jti': '9059b91b-2f76-4389-9aa7-21bf31da5de0', 'type': 'access', 'sub': '666b7f6de9e1f0eb6839e6d1', 'nbf': 1718321005, 'csrf': 'ecee8fc2-b64e-45ef-a46f-0476a15a5987', 'exp': 1718321905}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7f6de9e1f0eb6839e6d1') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$BTFKpnXJuTPvsn6C$6294e70f0aeedd81ace4742aaf44bf9e63b2706617bc7ec25d4eb7d525bf770a646045f844c5bc249a888bbecc58053c3da21a2e71446261db530d42000a3a20' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718321005, 'jti': 'a1c8ec9e-59d7-4be7-a8e4-868a3459ec0a', 'type': 'access', 'sub': '666b7f6de9e1f0eb6839e6d4', 'nbf': 1718321005, 'csrf': '1e88f386-fa13-4762-9854-1856391bbd16', 'exp': 1718321905}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7f6de9e1f0eb6839e6d4') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$Uizditx6gIii6ftm$2b6ee63d36c71aebfea1487a610f5bafffc851efed22fa743612a87ad9de8ef47323106365ef8d0d3a50e26f948e2aed6efda20f98e0981d545c0cfb7c8a4bff' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718321006, 'jti': '2ad5fac5-ca35-47c7-9276-5b0f49d400e5', 'type': 'access', 'sub': '666b7f6ee9e1f0eb6839e6e4', 'nbf': 1718321006, 'csrf': '33efdbc3-4da6-4d04-83fb-854f3d46a7a5', 'exp': 1718321906}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'newname'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718321006, 'jti': 'add3a517-03e9-43c3-b4cc-c979c25f7bff', 'type': 'access', 'sub': '666b7f6ee9e1f0eb6839e6e6', 'nbf': 1718321006, 'csrf': '89ed9f62-3cea-4e4d-af14-f4469b15e911', 'exp': 1718321906}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'new position', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718321006, 'jti': 'cc51c5ab-0c78-498d-b8dc-1be09c276dc6', 'type': 'access', 'sub': '666b7f6ee9e1f0eb6839e6e8', 'nbf': 1718321006, 'csrf': '05969abe-e9e7-457f-acb8-cf14a57fc115', 'exp': 1718321906}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718321006, 'jti': '48b75a04-eeb8-4416-b3c3-61c940510f31', 'type': 'access', 'sub': '666b7f6ee9e1f0eb6839e6ea', 'nbf': 1718321006, 'csrf': 'b0035360-cb6e-4392-8854-567aead5f0f9', 'exp': 1718321906}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': ''}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718321007, 'jti': '8c65cdad-e55d-42fe-b8bc-30854fb1f97d', 'type': 'access', 'sub': '666b7f6fe9e1f0eb6839e6ec', 'nbf': 1718321007, 'csrf': '49d24463-b0e8-4938-8b2a-cc71dea14cf6', 'exp': 1718321907}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': '', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718321007, 'jti': '5d3c7724-4cd9-4e1f-b13e-c4a3d20b95af', 'type': 'access', 'sub': '666b7f6fe9e1f0eb6839e6ee', 'nbf': 1718321007, 'csrf': 'e4d80710-e890-4d72-8883-5c6c4b96022f', 'exp': 1718321907}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Email cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718321007, 'jti': '4eae8b55-8f9e-4390-8637-a857f50fbfec', 'type': 'access', 'sub': '666b7f6fe9e1f0eb6839e6f0', 'nbf': 1718321007, 'csrf': '793b03d3-32a7-4322-b02f-13d508555276', 'exp': 1718321907}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Role cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:2 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:2 validation errors for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master'}
ERROR:app.extensions:2 validation errors for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:2 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:2 validation errors for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master'}
ERROR:app.extensions:2 validation errors for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 9 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 9 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
ERROR:app.extensions:1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...b8d900ac42813df7b2618e3', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 81, in login
    user = user_service.get_user_by_email(login_data['email'])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 34, in get_user_by_email
    user = User(**user_dict)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...b8d900ac42813df7b2618e3', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...c7ec836ea68881b7bdef4e7', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 81, in login
    user = user_service.get_user_by_email(login_data['email'])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 34, in get_user_by_email
    user = User(**user_dict)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...c7ec836ea68881b7bdef4e7', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322250, 'jti': '9745c896-1ab1-48e6-b3d2-49ad0cf4328a', 'type': 'access', 'sub': '666b844a5ea8c725b16965fd', 'nbf': 1718322250, 'csrf': 'a5762c85-7ce0-4088-bc51-8636ee48cc6b', 'exp': 1718323150}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app:Exception on /auth/logout [POST]
Traceback (most recent call last):
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 869, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 167, in decorator
    verify_jwt_in_request(
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 113, in verify_jwt_in_request
    g._jwt_extended_jwt_user = _load_user(jwt_header, jwt_data)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 182, in _load_user
    user = user_lookup(jwt_header, jwt_data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\internal_utils.py", line 44, in user_lookup
    return jwt_manager._user_lookup_callback and jwt_manager._user_lookup_callback(
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 21, in user_loader_callback
    user = user_service.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 26, in get_user_by_id
    user = User(**user_dict)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...3a4689fe969654423064836', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322250, 'jti': 'ce3fc77b-1635-403c-ba0d-82ffad3331a6', 'type': 'access', 'sub': '666b844a5ea8c725b1696601', 'nbf': 1718322250, 'csrf': '2e71d2a7-0d89-4da9-b0fe-42a9b7062753', 'exp': 1718323150}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app:Exception on /auth/logout [POST]
Traceback (most recent call last):
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 869, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 167, in decorator
    verify_jwt_in_request(
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 113, in verify_jwt_in_request
    g._jwt_extended_jwt_user = _load_user(jwt_header, jwt_data)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 182, in _load_user
    user = user_lookup(jwt_header, jwt_data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\internal_utils.py", line 44, in user_lookup
    return jwt_manager._user_lookup_callback and jwt_manager._user_lookup_callback(
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 21, in user_loader_callback
    user = user_service.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 26, in get_user_by_id
    user = User(**user_dict)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...4d342de35b87c9651cc8b4e', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322250, 'jti': 'ef649a97-d6de-425a-b438-71ca3df0b684', 'type': 'access', 'sub': '666b844a5ea8c725b1696603', 'nbf': 1718322250, 'csrf': 'f545e9d5-f1c9-4131-bfdb-8617a3292000', 'exp': 1718323150}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app:Exception on /auth/logout [POST]
Traceback (most recent call last):
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 869, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 167, in decorator
    verify_jwt_in_request(
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 113, in verify_jwt_in_request
    g._jwt_extended_jwt_user = _load_user(jwt_header, jwt_data)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 182, in _load_user
    user = user_lookup(jwt_header, jwt_data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\internal_utils.py", line 44, in user_lookup
    return jwt_manager._user_lookup_callback and jwt_manager._user_lookup_callback(
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 21, in user_loader_callback
    user = user_service.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 26, in get_user_by_id
    user = User(**user_dict)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...8c453e1a06a8b08e4b66ea2', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:2 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:2 validation errors for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master'}
ERROR:app.extensions:2 validation errors for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
ERROR:app.extensions:1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...59f1bd1af99f0d7fa06521b', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 81, in login
    user = user_service.get_user_by_email(login_data['email'])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 34, in get_user_by_email
    user = User(**user_dict)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...59f1bd1af99f0d7fa06521b', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...4294be16438f9b858eb48e8', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 81, in login
    user = user_service.get_user_by_email(login_data['email'])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 34, in get_user_by_email
    user = User(**user_dict)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...4294be16438f9b858eb48e8', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322313, 'jti': 'ce5977dc-6319-4181-93be-5edb6de71557', 'type': 'access', 'sub': '666b84893160a055cbe841b5', 'nbf': 1718322313, 'csrf': 'aeb750bc-5c14-4043-9fa3-409d08042e5f', 'exp': 1718323213}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app:Exception on /auth/logout [POST]
Traceback (most recent call last):
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 869, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 167, in decorator
    verify_jwt_in_request(
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 113, in verify_jwt_in_request
    g._jwt_extended_jwt_user = _load_user(jwt_header, jwt_data)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 182, in _load_user
    user = user_lookup(jwt_header, jwt_data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\internal_utils.py", line 44, in user_lookup
    return jwt_manager._user_lookup_callback and jwt_manager._user_lookup_callback(
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 21, in user_loader_callback
    user = user_service.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 26, in get_user_by_id
    user = User(**user_dict)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...bfff20088be42d5ab37ec08', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322313, 'jti': '8d6596fd-236a-4027-8369-2883060b8c52', 'type': 'access', 'sub': '666b84893160a055cbe841b9', 'nbf': 1718322313, 'csrf': 'c42dcf1d-71a9-4f59-816c-8b90814cade0', 'exp': 1718323213}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app:Exception on /auth/logout [POST]
Traceback (most recent call last):
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 869, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 167, in decorator
    verify_jwt_in_request(
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 113, in verify_jwt_in_request
    g._jwt_extended_jwt_user = _load_user(jwt_header, jwt_data)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 182, in _load_user
    user = user_lookup(jwt_header, jwt_data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\internal_utils.py", line 44, in user_lookup
    return jwt_manager._user_lookup_callback and jwt_manager._user_lookup_callback(
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 21, in user_loader_callback
    user = user_service.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 26, in get_user_by_id
    user = User(**user_dict)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...57e170284156d4af7a3b327', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322313, 'jti': 'ef080ace-0f7c-46f4-9be5-427a13f1fd2f', 'type': 'access', 'sub': '666b84893160a055cbe841bb', 'nbf': 1718322313, 'csrf': 'c0573f20-2d29-4a5e-8bb7-e8c2d8fa53bf', 'exp': 1718323213}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app:Exception on /auth/logout [POST]
Traceback (most recent call last):
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 869, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 167, in decorator
    verify_jwt_in_request(
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 113, in verify_jwt_in_request
    g._jwt_extended_jwt_user = _load_user(jwt_header, jwt_data)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 182, in _load_user
    user = user_lookup(jwt_header, jwt_data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\internal_utils.py", line 44, in user_lookup
    return jwt_manager._user_lookup_callback and jwt_manager._user_lookup_callback(
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 21, in user_loader_callback
    user = user_service.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 26, in get_user_by_id
    user = User(**user_dict)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...b6507ce01d33deac3c064b2', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
ERROR:app.extensions:'User' object has no attribute 'password_hash'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 82, in login
    if user and user.check_password(login_data['password']):
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\models\user.py", line 40, in check_password
    return check_password_hash(self.password_hash.removeprefix('__hash__'), password_plaintext)
                               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'password_hash'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:'User' object has no attribute 'password_hash'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 82, in login
    if user and user.check_password(login_data['password']):
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\models\user.py", line 40, in check_password
    return check_password_hash(self.password_hash.removeprefix('__hash__'), password_plaintext)
                               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'password_hash'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322378, 'jti': 'a4bc1271-7559-4a8e-9fd1-fc8238dd1e8c', 'type': 'access', 'sub': '666b84ca2a0f6d5efc0ec6fb', 'nbf': 1718322378, 'csrf': '8158870c-fb8c-42f4-b298-6898faa1b813', 'exp': 1718323278}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b84ca2a0f6d5efc0ec6fb') email='test@test.com' password='__hash__scrypt:32768:8:1$aLlES4q2ppO6zdLJ$7dfd7c2b3aa21560dcbb2e18fa1b31495dda9de590da4503b2a2a58756eb5acca50c76f369b7222c3cafc365d7728d8d383e5f07ad0618493fedf4216ecf00d3' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322379, 'jti': '2523a629-8657-4c6c-9598-71a75af0b116', 'type': 'access', 'sub': '666b84cb2a0f6d5efc0ec700', 'nbf': 1718322379, 'csrf': '81685ccd-6725-4ef1-88eb-b06d95943512', 'exp': 1718323279}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b84cb2a0f6d5efc0ec700') email='test@test.com' password='__hash__scrypt:32768:8:1$BtiFZTuyKDTI5NnS$b583f5ad3bfe3f44b74058dc965621e54f7a46ea118d9d0756dfed621662f90ca8955cfe6e72260ffe549baeabc82a729e9a45cb7db4d4172499fa335f7946a6' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322379, 'jti': 'a43ee0b6-41a0-461c-b0ab-b2574fe0a334', 'type': 'access', 'sub': '666b84cb2a0f6d5efc0ec703', 'nbf': 1718322379, 'csrf': '7b3f8f9c-745f-44e9-acc1-aea8d7860e56', 'exp': 1718323279}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b84cb2a0f6d5efc0ec703') email='test@test.com' password='__hash__scrypt:32768:8:1$eswiSq0nCSFB4ec0$96ee115844b83632e86c85b03e2d08eb700c996fa6770e7ed5cf943d425b8ef4c6408b3d973803f8b2011ecae1b34cb15384eadee19825473ddd3f90ff3c5bac' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
ERROR:app.extensions:'User' object has no attribute 'password_hash'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 82, in login
    if user and user.check_password(login_data['password']):
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\models\user.py", line 40, in check_password
    return check_password_hash(self.password_hash.removeprefix('__hash__'), password_plaintext)
                               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'password_hash'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
ERROR:app.extensions:'User' object has no attribute 'password_hash'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 82, in login
    if user and user.check_password(login_data['password']):
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\models\user.py", line 40, in check_password
    return check_password_hash(self.password_hash.removeprefix('__hash__'), password_plaintext)
                               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'password_hash'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:'User' object has no attribute 'password_hash'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 82, in login
    if user and user.check_password(login_data['password']):
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\models\user.py", line 40, in check_password
    return check_password_hash(self.password_hash.removeprefix('__hash__'), password_plaintext)
                               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'password_hash'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
ERROR:app.extensions:'User' object has no attribute 'password_hash'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 82, in login
    if user and user.check_password(login_data['password']):
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\models\user.py", line 40, in check_password
    return check_password_hash(self.password_hash.removeprefix('__hash__'), password_plaintext)
                               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'password_hash'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:'User' object has no attribute 'password_hash'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 82, in login
    if user and user.check_password(login_data['password']):
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\models\user.py", line 40, in check_password
    return check_password_hash(self.password_hash.removeprefix('__hash__'), password_plaintext)
                               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'password_hash'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322484, 'jti': 'f0c8b0d1-8429-4230-870e-94d1e2e9e551', 'type': 'access', 'sub': '666b8534d4cd2590edd89e77', 'nbf': 1718322484, 'csrf': 'a2c6d5de-62c3-4cd2-9c71-3a4167481166', 'exp': 1718323384}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8534d4cd2590edd89e77') email='test@test.com' password='__hash__scrypt:32768:8:1$UakNlgnr4glKVcJv$15cf292b9f57fc3c5cac399c6a8d957ab8844eb4e3f46f2bf2a40defa3a7f5da853cc6e086ca64e1d4040a27e220ecd355a565aa361bc6fddfefbc66f188ce58' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322484, 'jti': 'fc44fca3-f21e-470f-b254-56797803cd64', 'type': 'access', 'sub': '666b8534d4cd2590edd89e7c', 'nbf': 1718322484, 'csrf': '27f0ed89-64a3-42d4-9ad5-13236e18d40b', 'exp': 1718323384}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8534d4cd2590edd89e7c') email='test@test.com' password='__hash__scrypt:32768:8:1$kbLlLwqyrwPCtT8c$1e2fcf9ccf0a4489acc99cd97a03915c3f48a29dae089d7e964f2d3fcd5d67d936f6cd0a898734460a541842b4c3b2faf0b9784ab641e70e893086aa45a690f9' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322484, 'jti': '03f2d9d8-047a-40ad-8015-b36fdada4590', 'type': 'access', 'sub': '666b8534d4cd2590edd89e7f', 'nbf': 1718322484, 'csrf': '3573d4ca-6963-4953-a263-85caca2a0a1b', 'exp': 1718323384}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8534d4cd2590edd89e7f') email='test@test.com' password='__hash__scrypt:32768:8:1$kDUvxTQd5qa624nI$9ea7e3fe9e8c6c8ff7a15f1f0f6f45ba7967e39dffd3880fdf50fd7b84fb3380a14a8cafbf289a751d936e25129d39df4492580671fab995d7d137125eb924dc' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322776, 'jti': '8c7c1a9a-4216-49e1-a316-e436f52da602', 'type': 'access', 'sub': '666b865879e0f19fbbfe9a81', 'nbf': 1718322776, 'csrf': 'd3fb133c-0f50-41a5-9538-a28cf96a1abb', 'exp': 1718323676}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b865879e0f19fbbfe9a81') email='test@test.com' password='__hash__scrypt:32768:8:1$8RX9d32PSA1dVoyg$3737c653e384463826d513fb49c97ca418e1d915732c933292493c63be108c7d2c569869c59cbd7477f5a55b89cfdc4312ab0649e7dfcf0f108dd10f3f422fe6' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322777, 'jti': '7d327bd3-b0e0-4fe1-aeb8-a6c977bbdf0f', 'type': 'access', 'sub': '666b865979e0f19fbbfe9a86', 'nbf': 1718322777, 'csrf': '92d3d6c5-c43f-491c-a57e-b9afca66358a', 'exp': 1718323677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b865979e0f19fbbfe9a86') email='test@test.com' password='__hash__scrypt:32768:8:1$gO9j6GFlpIjEap51$6ba55ac40de2b6ee35f4b915fa25b0bb98b4dbaf74f50f45e2c7e7060f99eb44c24d15d289017acc1d08575498b6a3729fd1ae3b37d011f7bd6277db224af51c' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322777, 'jti': '3f3fc8c6-9692-4742-aaaf-2f785f280fd3', 'type': 'access', 'sub': '666b865979e0f19fbbfe9a89', 'nbf': 1718322777, 'csrf': '8cb3b561-7858-4ccf-8109-e1b7317fb666', 'exp': 1718323677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b865979e0f19fbbfe9a89') email='test@test.com' password='__hash__scrypt:32768:8:1$3CGTY3xytO80IB5Y$764ee70b756ee5ebaa2e5d70a2519443df9112fe71cca3d3f7ee5ab849f91c5287d2efaa7d46dafa24bb6eb23678334357cc47e0222212f997d16d20914c910a' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322883, 'jti': '85e38e91-ff82-435e-9d32-2920a67aa4ff', 'type': 'access', 'sub': '666b86c3badc81247e1ec571', 'nbf': 1718322883, 'csrf': 'c210ed33-4203-4c92-b5e1-b4d0810c4862', 'exp': 1718323783}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b86c3badc81247e1ec571') email='test@test.com' password='__hash__scrypt:32768:8:1$dLmT622WPJnu6JTp$4e87712496db417a9c0f247264d51c959b9da4ed9f3fcf80c136a10ffba8070eb846446c3e4c96479a32cf93991e76b0bd19ebbd355feb0ebc4675335dd0df74' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322883, 'jti': 'aa4cff79-46e1-4c11-b9be-a4a17a46d00b', 'type': 'access', 'sub': '666b86c3badc81247e1ec576', 'nbf': 1718322883, 'csrf': 'c3aacb0d-5cb9-4f3c-acad-53986a34e01e', 'exp': 1718323783}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b86c3badc81247e1ec576') email='test@test.com' password='__hash__scrypt:32768:8:1$E2qHewzQgzOouDWv$1781aca29cf0d1d67f0f6491635b28de25223c71f3ac7a2e00d20c0de5830a6cde6f586093c3418ff48a8405aa48dd10ffcbea575067c32ecc8a8ff51dc121d9' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322883, 'jti': '4ca0a443-74af-47ca-af1d-85bb817b0964', 'type': 'access', 'sub': '666b86c3badc81247e1ec579', 'nbf': 1718322883, 'csrf': '1aa79ff9-a405-421d-8e05-48ba9b667d9f', 'exp': 1718323783}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b86c3badc81247e1ec579') email='test@test.com' password='__hash__scrypt:32768:8:1$9vWvCPECoRXbM9Ss$052d8234f2036a9d75ab6011e5895467eeeee9adbeb0d224dd4829b5087c9f0b927004b96a784cd7ab6bb143332a208ddcd7648f6aab3cabbed8c5b365b8107e' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 55, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322884, 'jti': 'bec244ff-827f-41b3-aed1-4875b85512a6', 'type': 'access', 'sub': '666b86c4badc81247e1ec589', 'nbf': 1718322884, 'csrf': 'aa70b997-e719-4f36-82c6-dd55f7345bc2', 'exp': 1718323784}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322885, 'jti': 'b135b119-b44b-4b0a-a3d9-f0a3ee00083e', 'type': 'access', 'sub': '666b86c5badc81247e1ec58b', 'nbf': 1718322885, 'csrf': '924ea149-9af1-443d-9526-4ff6e2f9cefa', 'exp': 1718323785}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322885, 'jti': 'f8a51715-46dd-4fce-97d5-2458ffdd4231', 'type': 'access', 'sub': '666b86c5badc81247e1ec58d', 'nbf': 1718322885, 'csrf': 'c0b99330-c1d6-4012-a118-a945f54ada02', 'exp': 1718323785}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322885, 'jti': '208073ee-8acf-455e-afd3-a726a50f4f6d', 'type': 'access', 'sub': '666b86c5badc81247e1ec58f', 'nbf': 1718322885, 'csrf': '60b5d797-2285-48d4-8946-4a2e35d9c85c', 'exp': 1718323785}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322932, 'jti': '6b3e17e3-807b-4a8f-b329-3f00d7d03894', 'type': 'access', 'sub': '666b86f4a945ce6904864abb', 'nbf': 1718322932, 'csrf': 'ca505b6f-9541-49fb-8c46-13e26cda2d12', 'exp': 1718323832}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b86f4a945ce6904864abb') email='test@test.com' password='__hash__scrypt:32768:8:1$Ny1pxQ4gD2cxEXJ0$4eb13de57f85af0654d9e533ee0ece82a81f5ec3325db14b3f71f310a7cae0ef8d03e156c4a8027f6f664b4f1abc5defe7214246177761a7aad68fdd80c67f73' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322932, 'jti': 'c5eb92cb-4f8b-4ae5-833f-5be28275e043', 'type': 'access', 'sub': '666b86f4a945ce6904864ac0', 'nbf': 1718322932, 'csrf': '81394d81-3356-4513-b39c-625542558a61', 'exp': 1718323832}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b86f4a945ce6904864ac0') email='test@test.com' password='__hash__scrypt:32768:8:1$ZXnMXJ3iwYQsoejC$9cb0296e72dededce4c845d0b251e85ff5b441487bae30a4eae2272475be48ed07d781254e08d69d7e78e8b91696d51f5ca07436268aa216fcb6cd761740aeed' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322932, 'jti': 'ee18f653-1069-43d3-a2a9-bc87fb1b4c6d', 'type': 'access', 'sub': '666b86f4a945ce6904864ac3', 'nbf': 1718322932, 'csrf': 'cd877443-6cf9-4d56-83ed-350e28ced3fb', 'exp': 1718323832}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b86f4a945ce6904864ac3') email='test@test.com' password='__hash__scrypt:32768:8:1$igSbw4BSnfx1Kc7R$3630c321f49e91432c230745913dce6afcbf6eb2e2f75fd18086806ef327bb5bf27f654764781f7835229e6fc478fadb68df3ac2821ff0cb5767ef3a300870a5' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 55, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322933, 'jti': '00f0c1ce-a3b1-4e16-85a3-5831ce0e4aa6', 'type': 'access', 'sub': '666b86f5a945ce6904864ad3', 'nbf': 1718322933, 'csrf': 'c44967ed-e9d2-42e6-99b0-0c3420d8ed8a', 'exp': 1718323833}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322933, 'jti': 'd951b6af-03a0-4a2f-82ae-ea0052fbdbec', 'type': 'access', 'sub': '666b86f5a945ce6904864ad5', 'nbf': 1718322933, 'csrf': 'ab4ef864-f5a5-46da-8664-5ee03c2dc3cb', 'exp': 1718323833}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322933, 'jti': '28c79978-4092-4955-8d49-03a77ceed451', 'type': 'access', 'sub': '666b86f5a945ce6904864ad7', 'nbf': 1718322933, 'csrf': '97230024-81a3-4917-a20d-22a31049c7eb', 'exp': 1718323833}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322933, 'jti': '88f5d090-e417-4e61-aafa-ca5fce6afb18', 'type': 'access', 'sub': '666b86f5a945ce6904864ad9', 'nbf': 1718322933, 'csrf': '4b9d08af-a8d5-4337-bd65-1e472740ade9', 'exp': 1718323833}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322933, 'jti': '51262336-8618-4423-b196-57f69780cab6', 'type': 'access', 'sub': '666b86f5a945ce6904864adb', 'nbf': 1718322933, 'csrf': 'ae1a77d5-3f41-4e8a-bd88-0fdb64f4a87e', 'exp': 1718323833}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322933, 'jti': '8afad8af-6651-4346-9b49-7c9d9e9516de', 'type': 'access', 'sub': '666b86f5a945ce6904864add', 'nbf': 1718322933, 'csrf': '277ba9e9-23fe-4862-8dd1-e811f181e7e4', 'exp': 1718323833}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Email cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322934, 'jti': 'c247ac38-cbb1-4f4d-970d-0a716f2dfe06', 'type': 'access', 'sub': '666b86f6a945ce6904864adf', 'nbf': 1718322934, 'csrf': 'ae47f444-094d-48cf-9d18-73dfa1c506f9', 'exp': 1718323834}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Role cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322945, 'jti': '6445ea47-c234-43bc-89f2-7bd2aac05900', 'type': 'access', 'sub': '666b87015125a90f17b6b4f8', 'nbf': 1718322945, 'csrf': '1f351ad7-0ec4-45b7-8678-e9108547b997', 'exp': 1718323845}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322945, 'jti': '863ce08f-4d0d-48f8-9a2a-95c58456f8ff', 'type': 'access', 'sub': '666b87015125a90f17b6b4fa', 'nbf': 1718322945, 'csrf': 'af6d7bf4-1a4a-4c6e-a080-2e3e2c4d65d7', 'exp': 1718323845}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322946, 'jti': 'd3c6f202-07a2-46fb-81dc-33685ff05803', 'type': 'access', 'sub': '666b87025125a90f17b6b4fc', 'nbf': 1718322946, 'csrf': '3ad6afb5-0197-4128-9ad6-014334d01d45', 'exp': 1718323846}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322946, 'jti': '15358abc-8678-479a-af09-b7fdfa302c04', 'type': 'access', 'sub': '666b87025125a90f17b6b4fe', 'nbf': 1718322946, 'csrf': 'eb8e2c54-555d-482e-a832-f3adb7d484cd', 'exp': 1718323846}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322946, 'jti': '1b9df9a5-ade1-4909-bb68-72d5ad50d0cd', 'type': 'access', 'sub': '666b87025125a90f17b6b500', 'nbf': 1718322946, 'csrf': '254a8008-58c2-4cdb-a51c-632d69577d53', 'exp': 1718323846}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322946, 'jti': 'd13ee687-1d65-40ac-aa63-577290f76eb8', 'type': 'access', 'sub': '666b87025125a90f17b6b502', 'nbf': 1718322946, 'csrf': 'f2db058d-1665-4107-a904-949d7c9be065', 'exp': 1718323846}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Email cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322946, 'jti': 'cf1a8706-757b-4afb-96c9-b59f1fd48f8a', 'type': 'access', 'sub': '666b87025125a90f17b6b504', 'nbf': 1718322946, 'csrf': '8c4fe742-99bb-4d1b-9cd1-627a17229bc0', 'exp': 1718323846}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Role cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': 'e0d7073b-bc03-46f5-b944-e94a5d0e2e95', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf66', 'nbf': 1718323051, 'csrf': 'ee1cfc5d-6970-4844-9961-de9b661993de', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': 'b3325b9e-a956-46e9-af11-537a569dd78f', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf68', 'nbf': 1718323051, 'csrf': 'b4a90566-0cd7-490b-86ab-2d522bacc93b', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': '5c07c606-20a1-4446-91c5-ff7530a87e7b', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6a', 'nbf': 1718323051, 'csrf': '94a0beac-ac8a-4139-810c-585b9ab4bdea', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': '61e0591f-3570-4c07-8215-81866051b0cc', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6c', 'nbf': 1718323051, 'csrf': '474820d3-8344-4e66-b890-7faaadd95e85', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': '61e0591f-3570-4c07-8215-81866051b0cc', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6c', 'nbf': 1718323051, 'csrf': '474820d3-8344-4e66-b890-7faaadd95e85', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': '61e0591f-3570-4c07-8215-81866051b0cc', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6c', 'nbf': 1718323051, 'csrf': '474820d3-8344-4e66-b890-7faaadd95e85', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': '61e0591f-3570-4c07-8215-81866051b0cc', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6c', 'nbf': 1718323051, 'csrf': '474820d3-8344-4e66-b890-7faaadd95e85', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': '61e0591f-3570-4c07-8215-81866051b0cc', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6c', 'nbf': 1718323051, 'csrf': '474820d3-8344-4e66-b890-7faaadd95e85', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': '61e0591f-3570-4c07-8215-81866051b0cc', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6c', 'nbf': 1718323051, 'csrf': '474820d3-8344-4e66-b890-7faaadd95e85', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': 'e58fbf58-9132-48f7-81a2-cc1e129d547a', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6e', 'nbf': 1718323051, 'csrf': 'e359cda8-ddcc-4f79-b248-9f8965173c4f', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': 'e58fbf58-9132-48f7-81a2-cc1e129d547a', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6e', 'nbf': 1718323051, 'csrf': 'e359cda8-ddcc-4f79-b248-9f8965173c4f', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': 'e58fbf58-9132-48f7-81a2-cc1e129d547a', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6e', 'nbf': 1718323051, 'csrf': 'e359cda8-ddcc-4f79-b248-9f8965173c4f', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': 'e58fbf58-9132-48f7-81a2-cc1e129d547a', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6e', 'nbf': 1718323051, 'csrf': 'e359cda8-ddcc-4f79-b248-9f8965173c4f', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': 'e58fbf58-9132-48f7-81a2-cc1e129d547a', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6e', 'nbf': 1718323051, 'csrf': 'e359cda8-ddcc-4f79-b248-9f8965173c4f', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': 'e58fbf58-9132-48f7-81a2-cc1e129d547a', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6e', 'nbf': 1718323051, 'csrf': 'e359cda8-ddcc-4f79-b248-9f8965173c4f', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': '948972b2-ebe8-46ac-8719-6b798bb56095', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf70', 'nbf': 1718323051, 'csrf': '00d4e4de-9194-4f58-8de7-abd7caa2a357', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': '88428fb7-2402-440f-a45e-1847c30cc06d', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf72', 'nbf': 1718323051, 'csrf': 'da4e69bf-6018-4d54-b0f5-4170a108f685', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323083, 'jti': 'd9577367-dbef-4b9a-bb75-b3e73837cb3f', 'type': 'access', 'sub': '666b878bdd07079083d46d9a', 'nbf': 1718323083, 'csrf': 'f3eae3e8-846f-4650-ad42-3011b2627bb7', 'exp': 1718323983}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323083, 'jti': 'e2284367-b14a-47eb-9b92-d89f1afa32e7', 'type': 'access', 'sub': '666b878bdd07079083d46d9c', 'nbf': 1718323083, 'csrf': 'ece21bf2-d8b2-4de1-b6b7-74d2328ac996', 'exp': 1718323983}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': 'a07f09f0-b09c-4a9e-9efc-d70dd31df871', 'type': 'access', 'sub': '666b878cdd07079083d46d9e', 'nbf': 1718323084, 'csrf': 'faf78bbf-d16d-472d-8870-214fdd144060', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '4f7df2f8-e663-43da-b0db-990aa67f7998', 'type': 'access', 'sub': '666b878cdd07079083d46da0', 'nbf': 1718323084, 'csrf': '610653fc-90e6-41a6-be83-3af479d2d118', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '4f7df2f8-e663-43da-b0db-990aa67f7998', 'type': 'access', 'sub': '666b878cdd07079083d46da0', 'nbf': 1718323084, 'csrf': '610653fc-90e6-41a6-be83-3af479d2d118', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '4f7df2f8-e663-43da-b0db-990aa67f7998', 'type': 'access', 'sub': '666b878cdd07079083d46da0', 'nbf': 1718323084, 'csrf': '610653fc-90e6-41a6-be83-3af479d2d118', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '4f7df2f8-e663-43da-b0db-990aa67f7998', 'type': 'access', 'sub': '666b878cdd07079083d46da0', 'nbf': 1718323084, 'csrf': '610653fc-90e6-41a6-be83-3af479d2d118', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '4f7df2f8-e663-43da-b0db-990aa67f7998', 'type': 'access', 'sub': '666b878cdd07079083d46da0', 'nbf': 1718323084, 'csrf': '610653fc-90e6-41a6-be83-3af479d2d118', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '4f7df2f8-e663-43da-b0db-990aa67f7998', 'type': 'access', 'sub': '666b878cdd07079083d46da0', 'nbf': 1718323084, 'csrf': '610653fc-90e6-41a6-be83-3af479d2d118', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '8eb416a3-61f0-44ad-b8bf-af8195611b0b', 'type': 'access', 'sub': '666b878cdd07079083d46da2', 'nbf': 1718323084, 'csrf': '045f31c2-7e14-44ad-90bd-696e5de52a21', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '8eb416a3-61f0-44ad-b8bf-af8195611b0b', 'type': 'access', 'sub': '666b878cdd07079083d46da2', 'nbf': 1718323084, 'csrf': '045f31c2-7e14-44ad-90bd-696e5de52a21', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '8eb416a3-61f0-44ad-b8bf-af8195611b0b', 'type': 'access', 'sub': '666b878cdd07079083d46da2', 'nbf': 1718323084, 'csrf': '045f31c2-7e14-44ad-90bd-696e5de52a21', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '8eb416a3-61f0-44ad-b8bf-af8195611b0b', 'type': 'access', 'sub': '666b878cdd07079083d46da2', 'nbf': 1718323084, 'csrf': '045f31c2-7e14-44ad-90bd-696e5de52a21', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '8eb416a3-61f0-44ad-b8bf-af8195611b0b', 'type': 'access', 'sub': '666b878cdd07079083d46da2', 'nbf': 1718323084, 'csrf': '045f31c2-7e14-44ad-90bd-696e5de52a21', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '8eb416a3-61f0-44ad-b8bf-af8195611b0b', 'type': 'access', 'sub': '666b878cdd07079083d46da2', 'nbf': 1718323084, 'csrf': '045f31c2-7e14-44ad-90bd-696e5de52a21', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '12afe7a8-9c0b-41e2-b4d8-29e4cf19952a', 'type': 'access', 'sub': '666b878cdd07079083d46da4', 'nbf': 1718323084, 'csrf': '62a7e4b5-b7de-4820-81a6-09baea3e63ee', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': 'ce3dcb82-2e61-4f60-ac98-9f81bd455e77', 'type': 'access', 'sub': '666b878cdd07079083d46da6', 'nbf': 1718323084, 'csrf': '754e7e31-e048-493b-88b7-abe4998d3360', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323116, 'jti': '429bad90-b614-4898-8302-3d1c5bd10216', 'type': 'access', 'sub': '666b87ac7bacbd634166dc28', 'nbf': 1718323116, 'csrf': 'ac46205d-aeca-48cd-8b01-ed3cc4f2863a', 'exp': 1718324016}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
ERROR:app.extensions:'User' object is not subscriptable
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user[invalid_key]:
                                                                     ~~~~^^^^^^^^^^^^^
TypeError: 'User' object is not subscriptable
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323117, 'jti': 'd91113a8-f7fa-4fb9-8b10-686647d5f340', 'type': 'access', 'sub': '666b87ad7bacbd634166dc2a', 'nbf': 1718323117, 'csrf': '9c03ff90-95c8-401e-b964-9f2b05f91eae', 'exp': 1718324017}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
ERROR:app.extensions:'User' object is not subscriptable
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user[invalid_key]:
                                                                     ~~~~^^^^^^^^^^^^^
TypeError: 'User' object is not subscriptable
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323117, 'jti': '61b2674d-2410-4ce0-9c96-f878d142b574', 'type': 'access', 'sub': '666b87ad7bacbd634166dc2c', 'nbf': 1718323117, 'csrf': '6a873c89-001f-4b61-936c-21502fc9be2f', 'exp': 1718324017}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:'User' object is not subscriptable
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user[invalid_key]:
                                                                     ~~~~^^^^^^^^^^^^^
TypeError: 'User' object is not subscriptable
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323117, 'jti': 'fed0c09b-e2ec-4b9f-9768-c97385bc2fb0', 'type': 'access', 'sub': '666b87ad7bacbd634166dc2e', 'nbf': 1718323117, 'csrf': 'b49e416a-d5e2-4034-b972-b8794deaf266', 'exp': 1718324017}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:'User' object is not subscriptable
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user[invalid_key]:
                                                                     ~~~~^^^^^^^^^^^^^
TypeError: 'User' object is not subscriptable
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323117, 'jti': 'd4b76793-f316-4014-9e73-aa32f82decbc', 'type': 'access', 'sub': '666b87ad7bacbd634166dc30', 'nbf': 1718323117, 'csrf': 'dd4efb8b-74cc-4aca-a252-70770363ab2f', 'exp': 1718324017}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:'User' object is not subscriptable
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user[invalid_key]:
                                                                     ~~~~^^^^^^^^^^^^^
TypeError: 'User' object is not subscriptable
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323117, 'jti': '2974273d-6485-4c89-9ad8-7d0b369fdd2e', 'type': 'access', 'sub': '666b87ad7bacbd634166dc32', 'nbf': 1718323117, 'csrf': '5a5d1c2e-954d-4251-bf91-3f88fed184f7', 'exp': 1718324017}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:'User' object is not subscriptable
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user[invalid_key]:
                                                                     ~~~~^^^^^^^^^^^^^
TypeError: 'User' object is not subscriptable
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323117, 'jti': 'e3fb7b69-b363-40e6-8af2-0687e3d89017', 'type': 'access', 'sub': '666b87ad7bacbd634166dc34', 'nbf': 1718323117, 'csrf': '67096bd8-cfcc-4915-8370-1170a6c28338', 'exp': 1718324017}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:'User' object is not subscriptable
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user[invalid_key]:
                                                                     ~~~~^^^^^^^^^^^^^
TypeError: 'User' object is not subscriptable
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323141, 'jti': '0c91ad9a-ca03-47c8-be72-0116fa5896eb', 'type': 'access', 'sub': '666b87c5998bcf487b4db36d', 'nbf': 1718323141, 'csrf': '73d8fdfe-8650-4964-8faa-40345a20c281', 'exp': 1718324041}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
ERROR:app.extensions:'User' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user.get(invalid_key):
                                                                     ^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'get'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323141, 'jti': '9231827c-9296-4693-a30f-76c47bfafac9', 'type': 'access', 'sub': '666b87c5998bcf487b4db36f', 'nbf': 1718323141, 'csrf': '9eaac42d-30d4-4266-9c3b-0ac233190fc5', 'exp': 1718324041}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
ERROR:app.extensions:'User' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user.get(invalid_key):
                                                                     ^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'get'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323141, 'jti': 'e96b1c57-ffd4-4904-9d43-fdd970355d6e', 'type': 'access', 'sub': '666b87c5998bcf487b4db371', 'nbf': 1718323141, 'csrf': '0b2893a6-0d61-4072-a07f-25b9560594ed', 'exp': 1718324041}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:'User' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user.get(invalid_key):
                                                                     ^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'get'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323141, 'jti': '39166dd7-82e3-4920-a1d3-d715409aa87b', 'type': 'access', 'sub': '666b87c5998bcf487b4db373', 'nbf': 1718323141, 'csrf': 'f505955c-1ac2-42a8-94e7-e29b7113af53', 'exp': 1718324041}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:'User' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user.get(invalid_key):
                                                                     ^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'get'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323141, 'jti': '86d9f942-2d3e-48aa-8d06-ee20f0e5ea6f', 'type': 'access', 'sub': '666b87c5998bcf487b4db375', 'nbf': 1718323141, 'csrf': 'c7cfca73-ac78-4b87-b137-2f4273f6cac5', 'exp': 1718324041}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:'User' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user.get(invalid_key):
                                                                     ^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'get'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323141, 'jti': '73e9d6c0-ea8c-4834-b5f6-25d0ac5f70fa', 'type': 'access', 'sub': '666b87c5998bcf487b4db377', 'nbf': 1718323141, 'csrf': '3bdbea1e-e991-4d12-ba81-d9531bbfdf07', 'exp': 1718324041}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:'User' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user.get(invalid_key):
                                                                     ^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'get'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323141, 'jti': '60217ec1-0768-47e1-b9cc-98bed24ca051', 'type': 'access', 'sub': '666b87c5998bcf487b4db379', 'nbf': 1718323141, 'csrf': '4caeceb1-1a2b-4e1a-a7dc-ca469eec01bb', 'exp': 1718324041}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:'User' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user.get(invalid_key):
                                                                     ^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'get'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323184, 'jti': 'f902a734-0d77-4344-9ab1-678914b1a1ec', 'type': 'access', 'sub': '666b87f01dbb4e97b9832209', 'nbf': 1718323184, 'csrf': 'ce479eea-5e52-4c3e-94f4-69489d3324ce', 'exp': 1718324084}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323184, 'jti': '9accfae6-b6bf-4b9f-9c14-34007af36b84', 'type': 'access', 'sub': '666b87f01dbb4e97b983220b', 'nbf': 1718323184, 'csrf': '06124fcf-a790-4663-9681-26ed85b9c935', 'exp': 1718324084}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323184, 'jti': '82ab1fe4-5f06-4c4d-9784-2c8b6b47f0f0', 'type': 'access', 'sub': '666b87f01dbb4e97b983220d', 'nbf': 1718323184, 'csrf': 'f349870f-cc14-4af0-a60b-ea6d886ec24d', 'exp': 1718324084}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323184, 'jti': '105e0487-2fa8-41b2-bfb0-9e3f1d77ad01', 'type': 'access', 'sub': '666b87f01dbb4e97b983220f', 'nbf': 1718323184, 'csrf': 'ee73ac6f-573e-484d-b2d1-18533276a8a8', 'exp': 1718324084}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323184, 'jti': '105e0487-2fa8-41b2-bfb0-9e3f1d77ad01', 'type': 'access', 'sub': '666b87f01dbb4e97b983220f', 'nbf': 1718323184, 'csrf': 'ee73ac6f-573e-484d-b2d1-18533276a8a8', 'exp': 1718324084}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323184, 'jti': '105e0487-2fa8-41b2-bfb0-9e3f1d77ad01', 'type': 'access', 'sub': '666b87f01dbb4e97b983220f', 'nbf': 1718323184, 'csrf': 'ee73ac6f-573e-484d-b2d1-18533276a8a8', 'exp': 1718324084}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323184, 'jti': '105e0487-2fa8-41b2-bfb0-9e3f1d77ad01', 'type': 'access', 'sub': '666b87f01dbb4e97b983220f', 'nbf': 1718323184, 'csrf': 'ee73ac6f-573e-484d-b2d1-18533276a8a8', 'exp': 1718324084}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323184, 'jti': '105e0487-2fa8-41b2-bfb0-9e3f1d77ad01', 'type': 'access', 'sub': '666b87f01dbb4e97b983220f', 'nbf': 1718323184, 'csrf': 'ee73ac6f-573e-484d-b2d1-18533276a8a8', 'exp': 1718324084}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323184, 'jti': '105e0487-2fa8-41b2-bfb0-9e3f1d77ad01', 'type': 'access', 'sub': '666b87f01dbb4e97b983220f', 'nbf': 1718323184, 'csrf': 'ee73ac6f-573e-484d-b2d1-18533276a8a8', 'exp': 1718324084}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323185, 'jti': '9cc89e3d-4184-4225-a2e3-ca9d8ee1ff4c', 'type': 'access', 'sub': '666b87f11dbb4e97b9832211', 'nbf': 1718323185, 'csrf': 'bbf9121c-57a8-4cfe-acd1-026338097b42', 'exp': 1718324085}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323185, 'jti': '9cc89e3d-4184-4225-a2e3-ca9d8ee1ff4c', 'type': 'access', 'sub': '666b87f11dbb4e97b9832211', 'nbf': 1718323185, 'csrf': 'bbf9121c-57a8-4cfe-acd1-026338097b42', 'exp': 1718324085}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323185, 'jti': '9cc89e3d-4184-4225-a2e3-ca9d8ee1ff4c', 'type': 'access', 'sub': '666b87f11dbb4e97b9832211', 'nbf': 1718323185, 'csrf': 'bbf9121c-57a8-4cfe-acd1-026338097b42', 'exp': 1718324085}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323185, 'jti': '9cc89e3d-4184-4225-a2e3-ca9d8ee1ff4c', 'type': 'access', 'sub': '666b87f11dbb4e97b9832211', 'nbf': 1718323185, 'csrf': 'bbf9121c-57a8-4cfe-acd1-026338097b42', 'exp': 1718324085}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323185, 'jti': '9cc89e3d-4184-4225-a2e3-ca9d8ee1ff4c', 'type': 'access', 'sub': '666b87f11dbb4e97b9832211', 'nbf': 1718323185, 'csrf': 'bbf9121c-57a8-4cfe-acd1-026338097b42', 'exp': 1718324085}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323185, 'jti': '9cc89e3d-4184-4225-a2e3-ca9d8ee1ff4c', 'type': 'access', 'sub': '666b87f11dbb4e97b9832211', 'nbf': 1718323185, 'csrf': 'bbf9121c-57a8-4cfe-acd1-026338097b42', 'exp': 1718324085}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323186, 'jti': 'f7ca1606-a568-4953-864e-dd5bde0193b9', 'type': 'access', 'sub': '666b87f21dbb4e97b9832213', 'nbf': 1718323186, 'csrf': '922e1778-ef29-470f-bab4-449751a274a4', 'exp': 1718324086}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323186, 'jti': '272bc030-004c-40df-bad0-77459cdfbde8', 'type': 'access', 'sub': '666b87f21dbb4e97b9832215', 'nbf': 1718323186, 'csrf': '4f36fe03-a8ee-4eac-837d-8b3a0d8dda89', 'exp': 1718324086}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323192, 'jti': '9aee371e-1679-4ddf-9b89-88081edde2ee', 'type': 'access', 'sub': '666b87f845e12db2d8d3d17d', 'nbf': 1718323192, 'csrf': '71eb0faa-4480-4435-9d23-ed46b573465f', 'exp': 1718324092}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b87f845e12db2d8d3d17d') email='test@test.com' password='__hash__scrypt:32768:8:1$OkJsaJ1PFlev2hB6$44fbab54f1e852377e7dab005333a099e13d26cc78ed0e25cd8d186522680bf754ee3f17daee2d8b94fdcddce9460e46824cebbbd0fec50c4abfb308f2b7dd8e' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323192, 'jti': '7f42b0d1-cd28-43f1-b2d7-25e37b771f54', 'type': 'access', 'sub': '666b87f845e12db2d8d3d182', 'nbf': 1718323192, 'csrf': '37263f56-eddc-4b30-aa7c-55c55ba8c29c', 'exp': 1718324092}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b87f845e12db2d8d3d182') email='test@test.com' password='__hash__scrypt:32768:8:1$q0iVv3mJokFlYxxF$749619e64a43694c5dea3e84bc5eaeeb2e19b4ed7c3ef28c34a1aea9e67cd2731dcac711342ec5e013756d0877f5385e44dfc43f03163b513186676343bda664' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323192, 'jti': 'a12a902d-b880-41b7-b30d-d1b2e94cbe3e', 'type': 'access', 'sub': '666b87f845e12db2d8d3d185', 'nbf': 1718323192, 'csrf': '5ecd7f53-f641-40ee-983d-0cc791f1e11e', 'exp': 1718324092}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b87f845e12db2d8d3d185') email='test@test.com' password='__hash__scrypt:32768:8:1$5SWL3KAvBfD95kUp$e0a7d1dd15c8b90c953e82da6aaf0bc5e7a2fba1bdccebce54c7987d0a2bd7616b5aaebd4235c3c093400e1bbc1ba5736df18118a2e490c31d109030f2699cf1' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 55, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323193, 'jti': 'cbe717b5-1a09-4562-81fa-0bc94fed90ce', 'type': 'access', 'sub': '666b87f945e12db2d8d3d195', 'nbf': 1718323193, 'csrf': '6d3de469-4de6-46d8-a958-59e879ed8045', 'exp': 1718324093}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323193, 'jti': '533ec987-145c-4678-bf48-41116671ff6b', 'type': 'access', 'sub': '666b87f945e12db2d8d3d197', 'nbf': 1718323193, 'csrf': '262582bf-1cbf-495d-8e9c-6e3aba6278cc', 'exp': 1718324093}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': '38265d41-d9dd-44e7-aa1c-f906269cff3e', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d199', 'nbf': 1718323194, 'csrf': '0cd35432-3415-494f-a182-6f7c8c4baf89', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': '6e044c67-6f44-4ae8-b63b-9797e18f7488', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19b', 'nbf': 1718323194, 'csrf': '0fe4124f-4b2b-4140-bab6-35f3cd38603c', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': '6e044c67-6f44-4ae8-b63b-9797e18f7488', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19b', 'nbf': 1718323194, 'csrf': '0fe4124f-4b2b-4140-bab6-35f3cd38603c', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': '6e044c67-6f44-4ae8-b63b-9797e18f7488', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19b', 'nbf': 1718323194, 'csrf': '0fe4124f-4b2b-4140-bab6-35f3cd38603c', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': '6e044c67-6f44-4ae8-b63b-9797e18f7488', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19b', 'nbf': 1718323194, 'csrf': '0fe4124f-4b2b-4140-bab6-35f3cd38603c', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': '6e044c67-6f44-4ae8-b63b-9797e18f7488', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19b', 'nbf': 1718323194, 'csrf': '0fe4124f-4b2b-4140-bab6-35f3cd38603c', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': '6e044c67-6f44-4ae8-b63b-9797e18f7488', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19b', 'nbf': 1718323194, 'csrf': '0fe4124f-4b2b-4140-bab6-35f3cd38603c', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': 'e6b02123-fef9-4884-8d0b-60fa516753d0', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19d', 'nbf': 1718323194, 'csrf': '3c4d97c9-d6bb-42fe-9727-d907803cbe5e', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': 'e6b02123-fef9-4884-8d0b-60fa516753d0', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19d', 'nbf': 1718323194, 'csrf': '3c4d97c9-d6bb-42fe-9727-d907803cbe5e', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': 'e6b02123-fef9-4884-8d0b-60fa516753d0', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19d', 'nbf': 1718323194, 'csrf': '3c4d97c9-d6bb-42fe-9727-d907803cbe5e', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': 'e6b02123-fef9-4884-8d0b-60fa516753d0', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19d', 'nbf': 1718323194, 'csrf': '3c4d97c9-d6bb-42fe-9727-d907803cbe5e', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': 'e6b02123-fef9-4884-8d0b-60fa516753d0', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19d', 'nbf': 1718323194, 'csrf': '3c4d97c9-d6bb-42fe-9727-d907803cbe5e', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': 'e6b02123-fef9-4884-8d0b-60fa516753d0', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19d', 'nbf': 1718323194, 'csrf': '3c4d97c9-d6bb-42fe-9727-d907803cbe5e', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323195, 'jti': 'f7e8b5b5-6cb0-4b88-9846-186a6054c8b5', 'type': 'access', 'sub': '666b87fb45e12db2d8d3d19f', 'nbf': 1718323195, 'csrf': '7c8d69fb-cf4b-4f18-9843-3ce107a75c3b', 'exp': 1718324095}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323195, 'jti': '973a9584-f1f3-4b3a-ab67-e6684f94345f', 'type': 'access', 'sub': '666b87fb45e12db2d8d3d1a1', 'nbf': 1718323195, 'csrf': '24d924de-e49f-4afe-8951-6fa7998a0dfe', 'exp': 1718324095}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323532, 'jti': 'f02a5179-9a15-4465-ac8d-ec69b2df287a', 'type': 'access', 'sub': '666b894c0ee7865be1d299d3', 'nbf': 1718323532, 'csrf': '5c0e5f79-e3fc-4dd0-959f-db058f693c66', 'exp': 1718324432}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b894c0ee7865be1d299d3') email='test@test.com' password='__hash__scrypt:32768:8:1$5BrsZ9MKnSaLdSYn$51dec77ec9cc6eb62dc09a63812db3eed0f742b616324c6e6d6f4292d845a381537c50ef0ed293e257cf18c62a6545f196b0213d3901a8e5013a264b70f29e2a' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323532, 'jti': '37e41a69-d26b-422a-8ae8-aa89865da7a6', 'type': 'access', 'sub': '666b894c0ee7865be1d299d8', 'nbf': 1718323532, 'csrf': 'becf907a-17f9-4e04-b69b-2c24c33f2493', 'exp': 1718324432}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b894c0ee7865be1d299d8') email='test@test.com' password='__hash__scrypt:32768:8:1$MJTHY0WsW31AWh89$e84407356e89814bb5735549e528b93c86629ee170d19f5a6a067c419f37a23dd742e16e14ee4e2bdb28d431d8cda80d9caa1f03f157e060cf729eb874d50b8c' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323532, 'jti': 'bde6ab99-69c1-4484-a34b-a98d8eab6c71', 'type': 'access', 'sub': '666b894c0ee7865be1d299db', 'nbf': 1718323532, 'csrf': '80da426e-2259-4b0b-a300-be5ffa81aa70', 'exp': 1718324432}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b894c0ee7865be1d299db') email='test@test.com' password='__hash__scrypt:32768:8:1$r14vCEi6rGJd3aIi$33fced0eb07bd4ff980d49e775440c57f9e6c53df01bbcf9f32ae465f0565e9a2de405b0c7ce218eb4b6d2afb2d0e4e61eadf83074ea2ea8c193371940f4bfd3' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 55, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323534, 'jti': '65d82550-5bb0-40a4-9f48-0bf86da4355a', 'type': 'access', 'sub': '666b894e0ee7865be1d299ee', 'nbf': 1718323534, 'csrf': '48f35be4-815d-4f0a-9113-5fd60156b616', 'exp': 1718324434}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323534, 'jti': '47cfb056-dc45-47a2-b6f1-f5b2b9624886', 'type': 'access', 'sub': '666b894e0ee7865be1d299f0', 'nbf': 1718323534, 'csrf': '4797ee92-6ba2-4ab7-8259-9c6735910506', 'exp': 1718324434}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323534, 'jti': '2bdad762-9f0e-49d4-abfa-bb411683640c', 'type': 'access', 'sub': '666b894e0ee7865be1d299f2', 'nbf': 1718323534, 'csrf': 'c7ad7619-c3cc-44fb-970a-aaad755df987', 'exp': 1718324434}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323534, 'jti': '1b70e823-5998-4d3e-a8ca-95d56d56020a', 'type': 'access', 'sub': '666b894e0ee7865be1d299f4', 'nbf': 1718323534, 'csrf': '37ea711c-ac8e-44ca-9141-e389d5631d9c', 'exp': 1718324434}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323534, 'jti': '1b70e823-5998-4d3e-a8ca-95d56d56020a', 'type': 'access', 'sub': '666b894e0ee7865be1d299f4', 'nbf': 1718323534, 'csrf': '37ea711c-ac8e-44ca-9141-e389d5631d9c', 'exp': 1718324434}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323534, 'jti': '1b70e823-5998-4d3e-a8ca-95d56d56020a', 'type': 'access', 'sub': '666b894e0ee7865be1d299f4', 'nbf': 1718323534, 'csrf': '37ea711c-ac8e-44ca-9141-e389d5631d9c', 'exp': 1718324434}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323534, 'jti': '1b70e823-5998-4d3e-a8ca-95d56d56020a', 'type': 'access', 'sub': '666b894e0ee7865be1d299f4', 'nbf': 1718323534, 'csrf': '37ea711c-ac8e-44ca-9141-e389d5631d9c', 'exp': 1718324434}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323534, 'jti': '1b70e823-5998-4d3e-a8ca-95d56d56020a', 'type': 'access', 'sub': '666b894e0ee7865be1d299f4', 'nbf': 1718323534, 'csrf': '37ea711c-ac8e-44ca-9141-e389d5631d9c', 'exp': 1718324434}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323534, 'jti': '1b70e823-5998-4d3e-a8ca-95d56d56020a', 'type': 'access', 'sub': '666b894e0ee7865be1d299f4', 'nbf': 1718323534, 'csrf': '37ea711c-ac8e-44ca-9141-e389d5631d9c', 'exp': 1718324434}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323535, 'jti': '904d9da4-6fbc-47d7-8036-f214ef776b1b', 'type': 'access', 'sub': '666b894f0ee7865be1d299f6', 'nbf': 1718323535, 'csrf': '13f4926e-7ee5-49dc-8d7d-f45df1b6ce4a', 'exp': 1718324435}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323535, 'jti': '904d9da4-6fbc-47d7-8036-f214ef776b1b', 'type': 'access', 'sub': '666b894f0ee7865be1d299f6', 'nbf': 1718323535, 'csrf': '13f4926e-7ee5-49dc-8d7d-f45df1b6ce4a', 'exp': 1718324435}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323535, 'jti': '904d9da4-6fbc-47d7-8036-f214ef776b1b', 'type': 'access', 'sub': '666b894f0ee7865be1d299f6', 'nbf': 1718323535, 'csrf': '13f4926e-7ee5-49dc-8d7d-f45df1b6ce4a', 'exp': 1718324435}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323535, 'jti': '904d9da4-6fbc-47d7-8036-f214ef776b1b', 'type': 'access', 'sub': '666b894f0ee7865be1d299f6', 'nbf': 1718323535, 'csrf': '13f4926e-7ee5-49dc-8d7d-f45df1b6ce4a', 'exp': 1718324435}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323535, 'jti': '904d9da4-6fbc-47d7-8036-f214ef776b1b', 'type': 'access', 'sub': '666b894f0ee7865be1d299f6', 'nbf': 1718323535, 'csrf': '13f4926e-7ee5-49dc-8d7d-f45df1b6ce4a', 'exp': 1718324435}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323535, 'jti': '904d9da4-6fbc-47d7-8036-f214ef776b1b', 'type': 'access', 'sub': '666b894f0ee7865be1d299f6', 'nbf': 1718323535, 'csrf': '13f4926e-7ee5-49dc-8d7d-f45df1b6ce4a', 'exp': 1718324435}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323536, 'jti': 'c2c91c6d-82d1-42cb-a28d-7d714a8b304d', 'type': 'access', 'sub': '666b89500ee7865be1d299f8', 'nbf': 1718323536, 'csrf': 'e6dc824e-6a65-4088-b18b-de8615efefc4', 'exp': 1718324436}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323536, 'jti': 'd218e0cf-7358-43e4-b3ca-6ef376069639', 'type': 'access', 'sub': '666b89500ee7865be1d299fa', 'nbf': 1718323536, 'csrf': 'dec33bda-242a-42fc-9b93-fc3e19a7dff3', 'exp': 1718324436}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323577, 'jti': '9b4c0ce7-601e-49d5-aa3a-3bbc1e9fb5d4', 'type': 'access', 'sub': '666b8979dbe4265f7ad8d05f', 'nbf': 1718323577, 'csrf': '8a6928b4-5c4b-4d98-a0c1-6f67bd4d812e', 'exp': 1718324477}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8979dbe4265f7ad8d05f') email='test@test.com' password='__hash__scrypt:32768:8:1$PgTcTMK7ImDSW9YV$430641032155aa495c64ff6d9e37b4d32a5cff025a83162ae7a9ad5e45a72905e80b97b9223e1b4fe9b46f21f5957c8f94c5ac1fe2f723b8c9c292d43a913b99' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323578, 'jti': '9dd1ab13-0371-43bd-bc26-8e45cc493a0c', 'type': 'access', 'sub': '666b897adbe4265f7ad8d064', 'nbf': 1718323578, 'csrf': '96521699-f900-415e-a54d-75504c22f9de', 'exp': 1718324478}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b897adbe4265f7ad8d064') email='test@test.com' password='__hash__scrypt:32768:8:1$FvaHJ9TGUYLtaUEs$1d074bddb497ff6566fd5a24278277d4266fbca53916ce1b24896b6d7f4b5dd4f6524ac4f0cfe037fb5ad20ef0e268e7ea6533e1e4874bdbefbb368e0eab7c27' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323578, 'jti': 'ce5437c7-27ca-4ea1-9d81-11f8d2041fe2', 'type': 'access', 'sub': '666b897adbe4265f7ad8d067', 'nbf': 1718323578, 'csrf': 'bca62564-950c-4119-9932-a56154643f13', 'exp': 1718324478}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b897adbe4265f7ad8d067') email='test@test.com' password='__hash__scrypt:32768:8:1$wqi5tXaFYr4gdRLT$79b00014219ed593056816407dfb4b0568ebafac36fbd5df51341ad3e2a19a48726b0105cfc4059ca626dd68495fcd83e8a4c2177bfe65483c5b9d214848c7e9' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:Registering user
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:Registering user
INFO:app.extensions:Registering user
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323579, 'jti': '71d5730d-1645-4a5f-b1d3-93705220a88b', 'type': 'access', 'sub': '666b897bdbe4265f7ad8d076', 'nbf': 1718323579, 'csrf': 'a33ddc2a-c375-4711-a79e-a9dabbc430d7', 'exp': 1718324479}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323579, 'jti': '24cbbbe6-fcd4-4a14-871d-96c8e34f6f40', 'type': 'access', 'sub': '666b897bdbe4265f7ad8d078', 'nbf': 1718323579, 'csrf': '67133ca8-5031-4114-b3b4-d3fd26386cc8', 'exp': 1718324479}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323579, 'jti': '3732a80e-db34-43f0-8d8b-496d7ba10d5d', 'type': 'access', 'sub': '666b897bdbe4265f7ad8d07a', 'nbf': 1718323579, 'csrf': '735104d1-6885-4c3f-8ce1-85016bb93831', 'exp': 1718324479}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323579, 'jti': '443a42d6-8ad7-43ab-8e5a-165f0921d7b0', 'type': 'access', 'sub': '666b897bdbe4265f7ad8d07c', 'nbf': 1718323579, 'csrf': 'cd3d012c-0848-4df6-a9fd-1023bb768542', 'exp': 1718324479}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': '7945b259-b2b4-409b-b0d9-73945b5ae1d3', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d07e', 'nbf': 1718323580, 'csrf': 'fb425e70-106c-4d3e-9ce2-cd1d4021a6cb', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': 'dc053828-5952-4e7c-8993-826ac110fcc0', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d080', 'nbf': 1718323580, 'csrf': '51fdc6c3-986a-4a90-9e7a-e3eeb35f4c66', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': 'dc053828-5952-4e7c-8993-826ac110fcc0', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d080', 'nbf': 1718323580, 'csrf': '51fdc6c3-986a-4a90-9e7a-e3eeb35f4c66', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': 'dc053828-5952-4e7c-8993-826ac110fcc0', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d080', 'nbf': 1718323580, 'csrf': '51fdc6c3-986a-4a90-9e7a-e3eeb35f4c66', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': 'dc053828-5952-4e7c-8993-826ac110fcc0', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d080', 'nbf': 1718323580, 'csrf': '51fdc6c3-986a-4a90-9e7a-e3eeb35f4c66', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': 'dc053828-5952-4e7c-8993-826ac110fcc0', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d080', 'nbf': 1718323580, 'csrf': '51fdc6c3-986a-4a90-9e7a-e3eeb35f4c66', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': 'dc053828-5952-4e7c-8993-826ac110fcc0', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d080', 'nbf': 1718323580, 'csrf': '51fdc6c3-986a-4a90-9e7a-e3eeb35f4c66', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': '93754c0d-3911-4d9f-a56e-07b2b0eb2420', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d082', 'nbf': 1718323580, 'csrf': '9fb20f1e-f839-4c85-8045-f65ec36fc682', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': '93754c0d-3911-4d9f-a56e-07b2b0eb2420', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d082', 'nbf': 1718323580, 'csrf': '9fb20f1e-f839-4c85-8045-f65ec36fc682', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': '93754c0d-3911-4d9f-a56e-07b2b0eb2420', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d082', 'nbf': 1718323580, 'csrf': '9fb20f1e-f839-4c85-8045-f65ec36fc682', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': '93754c0d-3911-4d9f-a56e-07b2b0eb2420', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d082', 'nbf': 1718323580, 'csrf': '9fb20f1e-f839-4c85-8045-f65ec36fc682', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': '93754c0d-3911-4d9f-a56e-07b2b0eb2420', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d082', 'nbf': 1718323580, 'csrf': '9fb20f1e-f839-4c85-8045-f65ec36fc682', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': '93754c0d-3911-4d9f-a56e-07b2b0eb2420', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d082', 'nbf': 1718323580, 'csrf': '9fb20f1e-f839-4c85-8045-f65ec36fc682', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323581, 'jti': '90e7c19f-75cb-4ec4-9c3c-8a0b66fc77ca', 'type': 'access', 'sub': '666b897ddbe4265f7ad8d084', 'nbf': 1718323581, 'csrf': '9103d714-3868-4ebb-9822-12b082d05705', 'exp': 1718324481}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323581, 'jti': '977995aa-c709-4b9a-8d9c-17a806e0ce25', 'type': 'access', 'sub': '666b897ddbe4265f7ad8d086', 'nbf': 1718323581, 'csrf': '4d98b551-07e5-4d2b-bffa-a3bb85abb1ed', 'exp': 1718324481}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323728, 'jti': '9880db5d-3cf3-412a-a747-0758c1fb1c91', 'type': 'access', 'sub': '666b8a10b2186de16c8314bc', 'nbf': 1718323728, 'csrf': '5963d51d-42b0-4c3c-8d1b-9c1d3e5255a9', 'exp': 1718324628}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a10b2186de16c8314bc') email='test@test.com' password='__hash__scrypt:32768:8:1$rsbo14jtiUPhmebQ$b8b34b45d82eb1e73d4d2b45fac9ed77c4385684641aff4d5479f2366dae0764b584e48f015eff8eb6885a38f71a5a48d31a94a7af38c9258766bb330c4fc1b7' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323728, 'jti': '4e7baccc-a76b-46a3-86ab-326df6b08cec', 'type': 'access', 'sub': '666b8a10b2186de16c8314c1', 'nbf': 1718323728, 'csrf': '9ef1ae55-98eb-42c2-a2d3-5163381305fc', 'exp': 1718324628}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a10b2186de16c8314c1') email='test@test.com' password='__hash__scrypt:32768:8:1$57OCRmjm46cZInG8$1e1efdc091db811314b40284e4fcfdc6193bd8b82dbba342d535a2b77c7c9a866b1d179b9ccd615baa4fdd164041e7460c78c0f9f55746f5517e4607ce388279' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323728, 'jti': 'e7c8b12b-4882-4a37-a054-4ac0958c93a4', 'type': 'access', 'sub': '666b8a10b2186de16c8314c4', 'nbf': 1718323728, 'csrf': '8f9ff669-2260-4660-9dab-82f09abb5aad', 'exp': 1718324628}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a10b2186de16c8314c4') email='test@test.com' password='__hash__scrypt:32768:8:1$IaP77jc442JmptwN$e4f4ccdb88c0892a36e66f7c613df33247cd0ed664145be6189af2af38b6808e369d28eff472a14b45c6a3db047f3efdae3c17b093b0ac072260c835aa864f13' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323729, 'jti': '614ec82d-9a70-4cf9-bee9-32b5d95d99fc', 'type': 'access', 'sub': '666b8a11b2186de16c8314d3', 'nbf': 1718323729, 'csrf': '2310f3d7-b198-461b-84e3-5b0f8e999589', 'exp': 1718324629}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323729, 'jti': 'c703cd82-6d4b-4ca8-8fcd-a9dfeefe701e', 'type': 'access', 'sub': '666b8a11b2186de16c8314d5', 'nbf': 1718323729, 'csrf': '6b09a772-7c48-49be-9bca-e1cb280b5b57', 'exp': 1718324629}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323729, 'jti': '3696aa6e-773f-47a6-9aea-5d8ae0b45b9b', 'type': 'access', 'sub': '666b8a11b2186de16c8314d7', 'nbf': 1718323729, 'csrf': 'dece1ce9-f37b-4d61-9e99-6d949986af8d', 'exp': 1718324629}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': 'f7d42b9f-d811-42d7-8173-93ec6b436bac', 'type': 'access', 'sub': '666b8a12b2186de16c8314d9', 'nbf': 1718323730, 'csrf': '1b868335-14ea-48d8-9c7b-736ea439dceb', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': '49998151-d8f5-4bda-8f34-d7e9a1fb6f35', 'type': 'access', 'sub': '666b8a12b2186de16c8314db', 'nbf': 1718323730, 'csrf': '68923efe-5875-4d78-a4ef-9805164a407c', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': 'a3a28cc6-7b50-4ed6-b130-560cf5de2fcd', 'type': 'access', 'sub': '666b8a12b2186de16c8314dd', 'nbf': 1718323730, 'csrf': 'cd49775f-e57f-426a-97e0-a9c00af346f6', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': 'a3a28cc6-7b50-4ed6-b130-560cf5de2fcd', 'type': 'access', 'sub': '666b8a12b2186de16c8314dd', 'nbf': 1718323730, 'csrf': 'cd49775f-e57f-426a-97e0-a9c00af346f6', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': 'a3a28cc6-7b50-4ed6-b130-560cf5de2fcd', 'type': 'access', 'sub': '666b8a12b2186de16c8314dd', 'nbf': 1718323730, 'csrf': 'cd49775f-e57f-426a-97e0-a9c00af346f6', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': 'a3a28cc6-7b50-4ed6-b130-560cf5de2fcd', 'type': 'access', 'sub': '666b8a12b2186de16c8314dd', 'nbf': 1718323730, 'csrf': 'cd49775f-e57f-426a-97e0-a9c00af346f6', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': 'a3a28cc6-7b50-4ed6-b130-560cf5de2fcd', 'type': 'access', 'sub': '666b8a12b2186de16c8314dd', 'nbf': 1718323730, 'csrf': 'cd49775f-e57f-426a-97e0-a9c00af346f6', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': 'a3a28cc6-7b50-4ed6-b130-560cf5de2fcd', 'type': 'access', 'sub': '666b8a12b2186de16c8314dd', 'nbf': 1718323730, 'csrf': 'cd49775f-e57f-426a-97e0-a9c00af346f6', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': '31dec85a-81bb-4a87-9386-792cdf6744ad', 'type': 'access', 'sub': '666b8a12b2186de16c8314df', 'nbf': 1718323730, 'csrf': 'c5dc63e1-7668-4398-bf3e-30972bbf8032', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': '31dec85a-81bb-4a87-9386-792cdf6744ad', 'type': 'access', 'sub': '666b8a12b2186de16c8314df', 'nbf': 1718323730, 'csrf': 'c5dc63e1-7668-4398-bf3e-30972bbf8032', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': '31dec85a-81bb-4a87-9386-792cdf6744ad', 'type': 'access', 'sub': '666b8a12b2186de16c8314df', 'nbf': 1718323730, 'csrf': 'c5dc63e1-7668-4398-bf3e-30972bbf8032', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': '31dec85a-81bb-4a87-9386-792cdf6744ad', 'type': 'access', 'sub': '666b8a12b2186de16c8314df', 'nbf': 1718323730, 'csrf': 'c5dc63e1-7668-4398-bf3e-30972bbf8032', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': '31dec85a-81bb-4a87-9386-792cdf6744ad', 'type': 'access', 'sub': '666b8a12b2186de16c8314df', 'nbf': 1718323730, 'csrf': 'c5dc63e1-7668-4398-bf3e-30972bbf8032', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': '31dec85a-81bb-4a87-9386-792cdf6744ad', 'type': 'access', 'sub': '666b8a12b2186de16c8314df', 'nbf': 1718323730, 'csrf': 'c5dc63e1-7668-4398-bf3e-30972bbf8032', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323731, 'jti': '06090e17-0156-49e3-8341-fa8853b04179', 'type': 'access', 'sub': '666b8a13b2186de16c8314e1', 'nbf': 1718323731, 'csrf': '00821f7a-a528-4784-ba02-c1bc5b9bc87b', 'exp': 1718324631}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323731, 'jti': '6b2cdcff-5fb4-4e45-9613-b8da3348a7bc', 'type': 'access', 'sub': '666b8a13b2186de16c8314e3', 'nbf': 1718323731, 'csrf': 'd654ea47-caf3-41dd-8bc1-292c846379d0', 'exp': 1718324631}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323750, 'jti': '4e9aaf5b-e7f8-4167-9b8e-68ad6a0a81f1', 'type': 'access', 'sub': '666b8a26378539955462f90b', 'nbf': 1718323750, 'csrf': '90ac578e-dd22-453f-9f30-9c3654bd42db', 'exp': 1718324650}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a26378539955462f90b') email='test@test.com' password='__hash__scrypt:32768:8:1$aKI8Fwu293W3oMNE$8a0d81cd60ba2950983fc5ace5849cf2000d4b55f0d61437102a82d4dd0d6940b7f644b4f419366c08f01be57dcdb55ea125fcaf9da14a5bade3828c24b927b8' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323750, 'jti': '4ee9575c-78fc-4248-894b-808fca04ce52', 'type': 'access', 'sub': '666b8a26378539955462f910', 'nbf': 1718323750, 'csrf': '1ffb1113-f73d-4dd8-9b8c-f7b8e6bce56e', 'exp': 1718324650}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a26378539955462f910') email='test@test.com' password='__hash__scrypt:32768:8:1$1vJ1vlsNW3mJe0fb$01c5d1bdf4d08e33ccd1ba78bf749cdbe1b2ba6a1616756a01c6855474641df551c91c0a1db37df9bf7666277cd297e21e91fc258c94c8e379a4fbf90556c812' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323750, 'jti': '2efa458e-0caa-456a-9f6e-4361d88f6fe0', 'type': 'access', 'sub': '666b8a26378539955462f913', 'nbf': 1718323750, 'csrf': '965e7fa9-b3c9-4623-8b72-5847d9c0c16c', 'exp': 1718324650}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a26378539955462f913') email='test@test.com' password='__hash__scrypt:32768:8:1$st3Ey2xfwNchYRMd$a52608589bb83b868973d795c46a5247532ba16636e8a19e472a70abe4448ad2d7bb8237800bb65e5a9d035a1c9cecba10e11b63cefc86a61f44890f43a7eb5d' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323751, 'jti': '0bb76c2b-7d40-4f16-bbbd-0b606d4b7288', 'type': 'access', 'sub': '666b8a27378539955462f922', 'nbf': 1718323751, 'csrf': '793fcb82-350a-462e-a28e-92783dd7cb03', 'exp': 1718324651}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323751, 'jti': '4af55b00-9df6-45f4-8983-c94694404a3d', 'type': 'access', 'sub': '666b8a27378539955462f924', 'nbf': 1718323751, 'csrf': '249f5e63-06c1-4f8b-b1e4-49eae0d53959', 'exp': 1718324651}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323751, 'jti': '306b54d6-df9a-4c4a-944e-be50c89d407c', 'type': 'access', 'sub': '666b8a27378539955462f926', 'nbf': 1718323751, 'csrf': '83c2575e-c74f-4342-8394-148f4fa5f051', 'exp': 1718324651}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323751, 'jti': '14c1eaf9-dcfc-4c1e-b58b-96d80470516c', 'type': 'access', 'sub': '666b8a27378539955462f928', 'nbf': 1718323751, 'csrf': '14c059d3-0f86-4ca4-a9d3-1b527125369d', 'exp': 1718324651}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': 'ef72fef3-2662-49bd-a84b-684707740967', 'type': 'access', 'sub': '666b8a28378539955462f92a', 'nbf': 1718323752, 'csrf': '298cea82-907f-423e-bb35-2e0172b69dfd', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': '77fff9ee-c165-4506-af16-b9ed2abf4226', 'type': 'access', 'sub': '666b8a28378539955462f92c', 'nbf': 1718323752, 'csrf': '8f526604-f444-4800-a11b-2c942d7b4b7f', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': '77fff9ee-c165-4506-af16-b9ed2abf4226', 'type': 'access', 'sub': '666b8a28378539955462f92c', 'nbf': 1718323752, 'csrf': '8f526604-f444-4800-a11b-2c942d7b4b7f', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': '77fff9ee-c165-4506-af16-b9ed2abf4226', 'type': 'access', 'sub': '666b8a28378539955462f92c', 'nbf': 1718323752, 'csrf': '8f526604-f444-4800-a11b-2c942d7b4b7f', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': '77fff9ee-c165-4506-af16-b9ed2abf4226', 'type': 'access', 'sub': '666b8a28378539955462f92c', 'nbf': 1718323752, 'csrf': '8f526604-f444-4800-a11b-2c942d7b4b7f', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': '77fff9ee-c165-4506-af16-b9ed2abf4226', 'type': 'access', 'sub': '666b8a28378539955462f92c', 'nbf': 1718323752, 'csrf': '8f526604-f444-4800-a11b-2c942d7b4b7f', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': '77fff9ee-c165-4506-af16-b9ed2abf4226', 'type': 'access', 'sub': '666b8a28378539955462f92c', 'nbf': 1718323752, 'csrf': '8f526604-f444-4800-a11b-2c942d7b4b7f', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': 'c261ca05-6ecd-4285-a673-85f63363c2d1', 'type': 'access', 'sub': '666b8a28378539955462f92e', 'nbf': 1718323752, 'csrf': '85d9cbc8-4a5b-4033-bc50-29d47f57c0de', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': 'c261ca05-6ecd-4285-a673-85f63363c2d1', 'type': 'access', 'sub': '666b8a28378539955462f92e', 'nbf': 1718323752, 'csrf': '85d9cbc8-4a5b-4033-bc50-29d47f57c0de', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': 'c261ca05-6ecd-4285-a673-85f63363c2d1', 'type': 'access', 'sub': '666b8a28378539955462f92e', 'nbf': 1718323752, 'csrf': '85d9cbc8-4a5b-4033-bc50-29d47f57c0de', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': 'c261ca05-6ecd-4285-a673-85f63363c2d1', 'type': 'access', 'sub': '666b8a28378539955462f92e', 'nbf': 1718323752, 'csrf': '85d9cbc8-4a5b-4033-bc50-29d47f57c0de', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': 'c261ca05-6ecd-4285-a673-85f63363c2d1', 'type': 'access', 'sub': '666b8a28378539955462f92e', 'nbf': 1718323752, 'csrf': '85d9cbc8-4a5b-4033-bc50-29d47f57c0de', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': 'c261ca05-6ecd-4285-a673-85f63363c2d1', 'type': 'access', 'sub': '666b8a28378539955462f92e', 'nbf': 1718323752, 'csrf': '85d9cbc8-4a5b-4033-bc50-29d47f57c0de', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323753, 'jti': '61fc9684-1f28-472b-ad98-cf10e9b8b944', 'type': 'access', 'sub': '666b8a29378539955462f930', 'nbf': 1718323753, 'csrf': '23485734-c3b5-47b0-bd70-e123c1adf17e', 'exp': 1718324653}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323753, 'jti': 'c7f7ebd7-8de0-470d-83b3-253e600b2a03', 'type': 'access', 'sub': '666b8a29378539955462f932', 'nbf': 1718323753, 'csrf': '6b7c666a-6759-4b27-a242-f0b819edb36c', 'exp': 1718324653}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323775, 'jti': '400c8f20-e1d9-4d28-9512-970df8fe7a7c', 'type': 'access', 'sub': '666b8a3f0c99df397dc8bf1b', 'nbf': 1718323775, 'csrf': '433f0e7a-4c9b-49b6-bef3-93e09fea4449', 'exp': 1718324675}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a3f0c99df397dc8bf1b') email='test@test.com' password='__hash__scrypt:32768:8:1$CrCOStUk6SxUg0x9$1f5170ef23697f78a7ae6b03c837b09f786c140edbb730049e29963b84a4e8349f1ab9f70930ab913711a260a8da63b96d9baa9341036f82f252126d89f8226f' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323775, 'jti': 'baa723f5-b680-47ba-93a7-67ac0d3d7dca', 'type': 'access', 'sub': '666b8a3f0c99df397dc8bf20', 'nbf': 1718323775, 'csrf': 'd116fc28-a9c1-4e20-b60d-aa034113623a', 'exp': 1718324675}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a3f0c99df397dc8bf20') email='test@test.com' password='__hash__scrypt:32768:8:1$HKgFn0ZhIKH9v9fv$1540e04e83ee816ab5f999b2621660a84eca21b1acaa49c178a3b5648d33df56ff74791050a1c88b8ba44c7c95716889335a5323f4ea4bab9ebc507ae16ab9da' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323775, 'jti': '91416eae-ee65-41b0-8d36-a6cc344510d5', 'type': 'access', 'sub': '666b8a3f0c99df397dc8bf23', 'nbf': 1718323775, 'csrf': '3cbca973-a8c6-43e8-8a53-a876d8fa6345', 'exp': 1718324675}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a3f0c99df397dc8bf23') email='test@test.com' password='__hash__scrypt:32768:8:1$fmSW1rjbMnhTyiN8$b5e85b3489f2eca00143e2b54d179849dc0a79ec69e66bb2b8f079c34eed63926aec151654f2617fa4f2797b165a42a2afc505e31ff79b3feafe69a42b85eb57' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323776, 'jti': 'cb2faed1-d582-4eae-ad14-16492ad4692e', 'type': 'access', 'sub': '666b8a400c99df397dc8bf32', 'nbf': 1718323776, 'csrf': '9975d363-9c7e-4920-bd14-425b8e476225', 'exp': 1718324676}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323777, 'jti': 'f39af562-1486-4852-a1ee-1c06fff04887', 'type': 'access', 'sub': '666b8a410c99df397dc8bf34', 'nbf': 1718323777, 'csrf': 'fbb1601a-3804-407b-b38c-43559bf251b3', 'exp': 1718324677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323777, 'jti': '8b095dbb-c7d7-484e-a4f0-22b616bfd753', 'type': 'access', 'sub': '666b8a410c99df397dc8bf36', 'nbf': 1718323777, 'csrf': 'b17a56ce-0126-4920-b165-47d9a6967a47', 'exp': 1718324677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323777, 'jti': '1c083051-e4ac-4c6f-8124-febb5a76cb33', 'type': 'access', 'sub': '666b8a410c99df397dc8bf38', 'nbf': 1718323777, 'csrf': '928de407-76f6-46bd-9da9-3f23673399fd', 'exp': 1718324677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323777, 'jti': '9a40a54f-9094-4a27-b64f-ef65911ed69b', 'type': 'access', 'sub': '666b8a410c99df397dc8bf3a', 'nbf': 1718323777, 'csrf': '7a3d8481-7d89-4e80-adb7-aa5e87ab283f', 'exp': 1718324677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323777, 'jti': 'b9aff141-9588-41d2-a610-107028ea2133', 'type': 'access', 'sub': '666b8a410c99df397dc8bf3c', 'nbf': 1718323777, 'csrf': '6e69af4b-c95f-46ef-b87f-37b3d0adbe34', 'exp': 1718324677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323777, 'jti': 'b9aff141-9588-41d2-a610-107028ea2133', 'type': 'access', 'sub': '666b8a410c99df397dc8bf3c', 'nbf': 1718323777, 'csrf': '6e69af4b-c95f-46ef-b87f-37b3d0adbe34', 'exp': 1718324677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323777, 'jti': 'b9aff141-9588-41d2-a610-107028ea2133', 'type': 'access', 'sub': '666b8a410c99df397dc8bf3c', 'nbf': 1718323777, 'csrf': '6e69af4b-c95f-46ef-b87f-37b3d0adbe34', 'exp': 1718324677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323777, 'jti': 'b9aff141-9588-41d2-a610-107028ea2133', 'type': 'access', 'sub': '666b8a410c99df397dc8bf3c', 'nbf': 1718323777, 'csrf': '6e69af4b-c95f-46ef-b87f-37b3d0adbe34', 'exp': 1718324677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323777, 'jti': 'b9aff141-9588-41d2-a610-107028ea2133', 'type': 'access', 'sub': '666b8a410c99df397dc8bf3c', 'nbf': 1718323777, 'csrf': '6e69af4b-c95f-46ef-b87f-37b3d0adbe34', 'exp': 1718324677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323777, 'jti': 'b9aff141-9588-41d2-a610-107028ea2133', 'type': 'access', 'sub': '666b8a410c99df397dc8bf3c', 'nbf': 1718323777, 'csrf': '6e69af4b-c95f-46ef-b87f-37b3d0adbe34', 'exp': 1718324677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323778, 'jti': 'b588dda0-4d67-4aac-ae53-5bd124b0843b', 'type': 'access', 'sub': '666b8a420c99df397dc8bf3e', 'nbf': 1718323778, 'csrf': 'e8d7f131-6f9f-4c4d-b995-64eaca982150', 'exp': 1718324678}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323778, 'jti': 'b588dda0-4d67-4aac-ae53-5bd124b0843b', 'type': 'access', 'sub': '666b8a420c99df397dc8bf3e', 'nbf': 1718323778, 'csrf': 'e8d7f131-6f9f-4c4d-b995-64eaca982150', 'exp': 1718324678}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323778, 'jti': 'b588dda0-4d67-4aac-ae53-5bd124b0843b', 'type': 'access', 'sub': '666b8a420c99df397dc8bf3e', 'nbf': 1718323778, 'csrf': 'e8d7f131-6f9f-4c4d-b995-64eaca982150', 'exp': 1718324678}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323778, 'jti': 'b588dda0-4d67-4aac-ae53-5bd124b0843b', 'type': 'access', 'sub': '666b8a420c99df397dc8bf3e', 'nbf': 1718323778, 'csrf': 'e8d7f131-6f9f-4c4d-b995-64eaca982150', 'exp': 1718324678}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323778, 'jti': 'b588dda0-4d67-4aac-ae53-5bd124b0843b', 'type': 'access', 'sub': '666b8a420c99df397dc8bf3e', 'nbf': 1718323778, 'csrf': 'e8d7f131-6f9f-4c4d-b995-64eaca982150', 'exp': 1718324678}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323778, 'jti': 'b588dda0-4d67-4aac-ae53-5bd124b0843b', 'type': 'access', 'sub': '666b8a420c99df397dc8bf3e', 'nbf': 1718323778, 'csrf': 'e8d7f131-6f9f-4c4d-b995-64eaca982150', 'exp': 1718324678}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323778, 'jti': 'fe167212-5605-4e22-9965-e6adc221b17e', 'type': 'access', 'sub': '666b8a420c99df397dc8bf40', 'nbf': 1718323778, 'csrf': 'b156f372-2a99-44c0-acc2-0271e68bd73d', 'exp': 1718324678}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323779, 'jti': '98f74233-df2c-46ea-8ead-d703481d029d', 'type': 'access', 'sub': '666b8a430c99df397dc8bf42', 'nbf': 1718323779, 'csrf': '27061196-cf34-4901-ac79-b96eaf0cd4b5', 'exp': 1718324679}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323868, 'jti': '303880a9-bf02-4692-ba30-1d206807c09b', 'type': 'access', 'sub': '666b8a9cf355726a7c34ce43', 'nbf': 1718323868, 'csrf': 'd4deb98c-8446-450f-bfb5-b210304488dd', 'exp': 1718324768}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a9cf355726a7c34ce43') email='test@test.com' password='__hash__scrypt:32768:8:1$9yQ2iMZcrUEso5DY$cb262f2e0a4893994f98b0311528c6bcba7ae7db5890bb1efabc52ac392b87b1b73d1dca93a69aa0764a8962e62137e263f96fc3fbaa2349250f4d6d8c18fb81' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323869, 'jti': 'c6829590-a3fb-4f6a-b502-7c991fa28c91', 'type': 'access', 'sub': '666b8a9df355726a7c34ce48', 'nbf': 1718323869, 'csrf': '0679f545-0062-4a7f-89dd-cae792cb967d', 'exp': 1718324769}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a9df355726a7c34ce48') email='test@test.com' password='__hash__scrypt:32768:8:1$Nv9r8eweLg81qrnR$0e868c2acebb7e8a12f9ea221b740090acaf53e62d52db3d5cdfe3d0d38246ff6681f8ec7187aa0b0fae962540b52bc2a7cc9712e965ab02092152626080d23c' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323869, 'jti': '7773adb0-9c79-4e1f-8d0b-00068449c022', 'type': 'access', 'sub': '666b8a9df355726a7c34ce4b', 'nbf': 1718323869, 'csrf': '110afa38-424c-4bb7-8673-43b1419355c2', 'exp': 1718324769}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a9df355726a7c34ce4b') email='test@test.com' password='__hash__scrypt:32768:8:1$9ADK5m0qbCY6A5ZE$992fa6298b27bcdd9d9e292c31dbd74260da1d30b1de1ff60175a0b9e232b06aac27ed0475bda76ac61f9c9aee6552a2ddaa84cf2f349061b4326d2ed7fee615' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323870, 'jti': 'a4f7d6c1-24c3-46ef-acd1-7c5023ecbd04', 'type': 'access', 'sub': '666b8a9ef355726a7c34ce5a', 'nbf': 1718323870, 'csrf': '15f78262-fc45-4ef1-99c9-af2dcdb367b3', 'exp': 1718324770}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323870, 'jti': '0d2bd043-0113-4c41-9a6c-0b6e1e600fa3', 'type': 'access', 'sub': '666b8a9ef355726a7c34ce5c', 'nbf': 1718323870, 'csrf': 'eaaaa223-d68b-47a2-8507-2efd7975e980', 'exp': 1718324770}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323870, 'jti': '7a25fb14-178b-4090-b178-ac567d376a4c', 'type': 'access', 'sub': '666b8a9ef355726a7c34ce5e', 'nbf': 1718323870, 'csrf': '2431cf4f-7e16-4c28-90fb-2fa55e065efe', 'exp': 1718324770}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323870, 'jti': '2eade654-8f37-4220-8dab-146eb472e7dd', 'type': 'access', 'sub': '666b8a9ef355726a7c34ce60', 'nbf': 1718323870, 'csrf': 'd6fad54a-522a-43c3-9608-cb0dd36605c9', 'exp': 1718324770}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': '005cac46-1197-4cd0-a2d8-3f8177267a98', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce62', 'nbf': 1718323871, 'csrf': '8b0eb32f-71da-43a3-a87a-da33681290e2', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': '92533dcd-5501-4618-a61a-afa8e12aa164', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce64', 'nbf': 1718323871, 'csrf': '36f605de-2eb4-4223-915b-765864e84212', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': '92533dcd-5501-4618-a61a-afa8e12aa164', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce64', 'nbf': 1718323871, 'csrf': '36f605de-2eb4-4223-915b-765864e84212', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': '92533dcd-5501-4618-a61a-afa8e12aa164', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce64', 'nbf': 1718323871, 'csrf': '36f605de-2eb4-4223-915b-765864e84212', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': '92533dcd-5501-4618-a61a-afa8e12aa164', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce64', 'nbf': 1718323871, 'csrf': '36f605de-2eb4-4223-915b-765864e84212', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': '92533dcd-5501-4618-a61a-afa8e12aa164', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce64', 'nbf': 1718323871, 'csrf': '36f605de-2eb4-4223-915b-765864e84212', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': '92533dcd-5501-4618-a61a-afa8e12aa164', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce64', 'nbf': 1718323871, 'csrf': '36f605de-2eb4-4223-915b-765864e84212', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': 'a6a7d95d-8a74-4c6e-81e8-42cacb9d7cf1', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce66', 'nbf': 1718323871, 'csrf': 'af5a39b2-d062-4727-9e86-f6be91c98e9f', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': 'a6a7d95d-8a74-4c6e-81e8-42cacb9d7cf1', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce66', 'nbf': 1718323871, 'csrf': 'af5a39b2-d062-4727-9e86-f6be91c98e9f', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': 'a6a7d95d-8a74-4c6e-81e8-42cacb9d7cf1', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce66', 'nbf': 1718323871, 'csrf': 'af5a39b2-d062-4727-9e86-f6be91c98e9f', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': 'a6a7d95d-8a74-4c6e-81e8-42cacb9d7cf1', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce66', 'nbf': 1718323871, 'csrf': 'af5a39b2-d062-4727-9e86-f6be91c98e9f', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': 'a6a7d95d-8a74-4c6e-81e8-42cacb9d7cf1', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce66', 'nbf': 1718323871, 'csrf': 'af5a39b2-d062-4727-9e86-f6be91c98e9f', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': 'a6a7d95d-8a74-4c6e-81e8-42cacb9d7cf1', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce66', 'nbf': 1718323871, 'csrf': 'af5a39b2-d062-4727-9e86-f6be91c98e9f', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323872, 'jti': '6baebebb-9618-47e7-99fb-c126bf9e433f', 'type': 'access', 'sub': '666b8aa0f355726a7c34ce68', 'nbf': 1718323872, 'csrf': 'f889da6c-aa25-4d02-ba3a-2be9e412c4b0', 'exp': 1718324772}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323872, 'jti': '7f81c4c2-020c-405e-9238-dda1a7dd4c81', 'type': 'access', 'sub': '666b8aa0f355726a7c34ce6a', 'nbf': 1718323872, 'csrf': 'e523d252-ad3b-4bf2-a586-206a0fba0dd3', 'exp': 1718324772}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323890, 'jti': '9c2ca5eb-1de8-4e42-9b30-0eeaddc88efd', 'type': 'access', 'sub': '666b8ab2e05d865a0c166146', 'nbf': 1718323890, 'csrf': '50b5f863-46a1-41b0-927f-107dccee83a2', 'exp': 1718324790}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8ab2e05d865a0c166146') email='test@test.com' password='__hash__scrypt:32768:8:1$XYpx9ELtNM2D8xQt$9a22711f45ae0f5eca5c736595c98003a7eb0b4ab97bc50cb255edf5d5e76a211d320a5bcffc3d3c29cd41c1edd980b24b5cb644f3a4bfd75f426b5f00365449' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323891, 'jti': 'c4314200-09fc-4fe5-91c9-80311c90a0ef', 'type': 'access', 'sub': '666b8ab3e05d865a0c16614b', 'nbf': 1718323891, 'csrf': 'ccc7ee1f-038f-4c4d-93fa-e9eb3c96bc63', 'exp': 1718324791}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8ab3e05d865a0c16614b') email='test@test.com' password='__hash__scrypt:32768:8:1$l8DgzmFE7q9RdnEZ$85a603200a9dd71e7fe4e799e5a7f084e2940f2e9553b62b6326a6380bf1310eb109f45d764f20a85e614bc827d1746eab677b5becdf03fd1fdee40155b3e9f0' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323891, 'jti': '10796265-e9c4-4286-a0fd-660db5cf7504', 'type': 'access', 'sub': '666b8ab3e05d865a0c16614e', 'nbf': 1718323891, 'csrf': '2f2f8dfc-4a69-4b02-a1b8-26ea4d1d2bd6', 'exp': 1718324791}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8ab3e05d865a0c16614e') email='test@test.com' password='__hash__scrypt:32768:8:1$XSQD5lWrXZsXhkuK$36e1538b1252f751a38d361c7efbecafeee44b98060ecf08ca1806c47523910b5f6397885f71a16d3b325e6e897042bcd674626397b4c6c8e7791e755c26dbf8' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323892, 'jti': '8620c31d-7233-4ef2-8e57-c9316c0cd376', 'type': 'access', 'sub': '666b8ab4e05d865a0c16615d', 'nbf': 1718323892, 'csrf': 'a0e615ea-bd88-43fc-a8ae-7c73dea445b6', 'exp': 1718324792}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323892, 'jti': 'a609646d-c0bf-465e-a93c-f5e131367ca1', 'type': 'access', 'sub': '666b8ab4e05d865a0c16615f', 'nbf': 1718323892, 'csrf': '2763c923-3ded-4bc5-949b-f454bfeafcf1', 'exp': 1718324792}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323892, 'jti': 'd638c98e-1531-4d2a-8459-efa438774ed0', 'type': 'access', 'sub': '666b8ab4e05d865a0c166161', 'nbf': 1718323892, 'csrf': 'c5be4721-23ee-414f-b903-f6f47983839d', 'exp': 1718324792}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323892, 'jti': '55feccb9-8a91-449b-a442-6762beb11f39', 'type': 'access', 'sub': '666b8ab4e05d865a0c166163', 'nbf': 1718323892, 'csrf': 'a7f1ab2c-cad9-4598-bd17-22530f786634', 'exp': 1718324792}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323892, 'jti': 'cfa085bc-d638-4c00-b929-57f7d51bce32', 'type': 'access', 'sub': '666b8ab4e05d865a0c166165', 'nbf': 1718323892, 'csrf': '49919638-9610-4cb2-920c-80beac99e404', 'exp': 1718324792}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323892, 'jti': 'cfa085bc-d638-4c00-b929-57f7d51bce32', 'type': 'access', 'sub': '666b8ab4e05d865a0c166165', 'nbf': 1718323892, 'csrf': '49919638-9610-4cb2-920c-80beac99e404', 'exp': 1718324792}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323892, 'jti': 'cfa085bc-d638-4c00-b929-57f7d51bce32', 'type': 'access', 'sub': '666b8ab4e05d865a0c166165', 'nbf': 1718323892, 'csrf': '49919638-9610-4cb2-920c-80beac99e404', 'exp': 1718324792}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323892, 'jti': 'cfa085bc-d638-4c00-b929-57f7d51bce32', 'type': 'access', 'sub': '666b8ab4e05d865a0c166165', 'nbf': 1718323892, 'csrf': '49919638-9610-4cb2-920c-80beac99e404', 'exp': 1718324792}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323892, 'jti': 'cfa085bc-d638-4c00-b929-57f7d51bce32', 'type': 'access', 'sub': '666b8ab4e05d865a0c166165', 'nbf': 1718323892, 'csrf': '49919638-9610-4cb2-920c-80beac99e404', 'exp': 1718324792}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323892, 'jti': 'cfa085bc-d638-4c00-b929-57f7d51bce32', 'type': 'access', 'sub': '666b8ab4e05d865a0c166165', 'nbf': 1718323892, 'csrf': '49919638-9610-4cb2-920c-80beac99e404', 'exp': 1718324792}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323893, 'jti': '60caba23-19c1-4297-bb48-7d805c985d02', 'type': 'access', 'sub': '666b8ab5e05d865a0c166167', 'nbf': 1718323893, 'csrf': '9776d6ed-cf2c-4150-9d8c-f518ce79670a', 'exp': 1718324793}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323893, 'jti': '60caba23-19c1-4297-bb48-7d805c985d02', 'type': 'access', 'sub': '666b8ab5e05d865a0c166167', 'nbf': 1718323893, 'csrf': '9776d6ed-cf2c-4150-9d8c-f518ce79670a', 'exp': 1718324793}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323893, 'jti': '60caba23-19c1-4297-bb48-7d805c985d02', 'type': 'access', 'sub': '666b8ab5e05d865a0c166167', 'nbf': 1718323893, 'csrf': '9776d6ed-cf2c-4150-9d8c-f518ce79670a', 'exp': 1718324793}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323893, 'jti': '60caba23-19c1-4297-bb48-7d805c985d02', 'type': 'access', 'sub': '666b8ab5e05d865a0c166167', 'nbf': 1718323893, 'csrf': '9776d6ed-cf2c-4150-9d8c-f518ce79670a', 'exp': 1718324793}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323893, 'jti': '60caba23-19c1-4297-bb48-7d805c985d02', 'type': 'access', 'sub': '666b8ab5e05d865a0c166167', 'nbf': 1718323893, 'csrf': '9776d6ed-cf2c-4150-9d8c-f518ce79670a', 'exp': 1718324793}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323893, 'jti': '60caba23-19c1-4297-bb48-7d805c985d02', 'type': 'access', 'sub': '666b8ab5e05d865a0c166167', 'nbf': 1718323893, 'csrf': '9776d6ed-cf2c-4150-9d8c-f518ce79670a', 'exp': 1718324793}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323894, 'jti': 'cb7659fe-4a64-4a92-9669-3b96f22a119f', 'type': 'access', 'sub': '666b8ab6e05d865a0c166169', 'nbf': 1718323894, 'csrf': '9afd3ee1-bd53-48a6-a985-c4d9b3478620', 'exp': 1718324794}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323894, 'jti': '1a475c6c-0f43-48a0-9c78-dd799862d88d', 'type': 'access', 'sub': '666b8ab6e05d865a0c16616b', 'nbf': 1718323894, 'csrf': 'cbffe6d8-9c90-465f-b997-878c8b01f8c7', 'exp': 1718324794}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324011, 'jti': '16530806-0755-4a01-a3ef-c2846b93bcaf', 'type': 'access', 'sub': '666b8b2bcf408686397efde6', 'nbf': 1718324011, 'csrf': '11e615d6-0111-49e7-80ad-d0a12823cf86', 'exp': 1718324911}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8b2bcf408686397efde6') email='test@test.com' password='__hash__scrypt:32768:8:1$mROkDz3Mr5SQKWj0$7097658b6eedea16721d741242a845475b5a0a486d9265ce7576ca882c1f32694606f2e36b0a1504952daf7576c7e44a1a3a46d179d6bc95fedfbba85731bbfb' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324011, 'jti': '71896ff4-a927-446b-b4ef-b1528076eadd', 'type': 'access', 'sub': '666b8b2bcf408686397efdeb', 'nbf': 1718324011, 'csrf': '634dcdf1-0c82-401b-a32d-433629ecc784', 'exp': 1718324911}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8b2bcf408686397efdeb') email='test@test.com' password='__hash__scrypt:32768:8:1$vkrZyiwBOX983ZZe$b54ce4126932651120460bcebbd3ebc2fa539af13801ae3c91090ade938310c59aa9a9f0cbc4b197e034519eebb4e1463ba8e4dc9ecd3fde834de0fcc424b1d1' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324011, 'jti': '85a9a54a-4caf-4867-8089-635d9bb33d02', 'type': 'access', 'sub': '666b8b2bcf408686397efdee', 'nbf': 1718324011, 'csrf': 'c1ca5dfa-835e-4d79-a884-39693d2f17b2', 'exp': 1718324911}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8b2bcf408686397efdee') email='test@test.com' password='__hash__scrypt:32768:8:1$ccF0YnutmyerbEnZ$6a4dfeb6b980e2fd9b438502f73238c9ae5ac711e8af844898f412d5f93744aa6b01de804210b083136268932ae5cb4e77bfdb56a4f3ebb645f6a7ceb0b0c4c8' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324012, 'jti': 'd090f2b4-577f-44c9-be35-6cd43f6e58c6', 'type': 'access', 'sub': '666b8b2ccf408686397efdfd', 'nbf': 1718324012, 'csrf': '3c8c93a0-a02c-445f-a885-21bd03ce6fca', 'exp': 1718324912}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324012, 'jti': 'a366f10d-1393-4ebb-b906-0582edd605b5', 'type': 'access', 'sub': '666b8b2ccf408686397efe02', 'nbf': 1718324012, 'csrf': '83243a2e-fda3-4d01-8e4b-3b4a3c051e32', 'exp': 1718324912}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324013, 'jti': '0a5c8999-5b66-4632-bd81-3cf1ebcf8fd0', 'type': 'access', 'sub': '666b8b2dcf408686397efe04', 'nbf': 1718324013, 'csrf': 'aca1de6a-0277-4d28-b921-8bbe1f2676be', 'exp': 1718324913}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324013, 'jti': '1d188b0e-3727-4035-bc19-40468dc7ae45', 'type': 'access', 'sub': '666b8b2dcf408686397efe06', 'nbf': 1718324013, 'csrf': 'a46f2b5e-d6e3-45e4-a0b4-71b1b4c132c2', 'exp': 1718324913}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324013, 'jti': '060cc23f-602e-4a0a-bca4-3698cb6a6917', 'type': 'access', 'sub': '666b8b2dcf408686397efe08', 'nbf': 1718324013, 'csrf': 'dfb370e5-551e-4fc9-8c94-1da222a6e7e8', 'exp': 1718324913}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324013, 'jti': 'c60bf5fa-6796-4707-9b6d-b123b5fbda58', 'type': 'access', 'sub': '666b8b2dcf408686397efe0a', 'nbf': 1718324013, 'csrf': '48dc9bbf-8467-402e-9bc9-ca8ec96faf3d', 'exp': 1718324913}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324013, 'jti': 'c60bf5fa-6796-4707-9b6d-b123b5fbda58', 'type': 'access', 'sub': '666b8b2dcf408686397efe0a', 'nbf': 1718324013, 'csrf': '48dc9bbf-8467-402e-9bc9-ca8ec96faf3d', 'exp': 1718324913}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324013, 'jti': 'c60bf5fa-6796-4707-9b6d-b123b5fbda58', 'type': 'access', 'sub': '666b8b2dcf408686397efe0a', 'nbf': 1718324013, 'csrf': '48dc9bbf-8467-402e-9bc9-ca8ec96faf3d', 'exp': 1718324913}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324013, 'jti': 'c60bf5fa-6796-4707-9b6d-b123b5fbda58', 'type': 'access', 'sub': '666b8b2dcf408686397efe0a', 'nbf': 1718324013, 'csrf': '48dc9bbf-8467-402e-9bc9-ca8ec96faf3d', 'exp': 1718324913}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324013, 'jti': 'c60bf5fa-6796-4707-9b6d-b123b5fbda58', 'type': 'access', 'sub': '666b8b2dcf408686397efe0a', 'nbf': 1718324013, 'csrf': '48dc9bbf-8467-402e-9bc9-ca8ec96faf3d', 'exp': 1718324913}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324013, 'jti': 'c60bf5fa-6796-4707-9b6d-b123b5fbda58', 'type': 'access', 'sub': '666b8b2dcf408686397efe0a', 'nbf': 1718324013, 'csrf': '48dc9bbf-8467-402e-9bc9-ca8ec96faf3d', 'exp': 1718324913}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324014, 'jti': 'ce99a3f3-6ed2-4609-8cfb-a91476a3e1ae', 'type': 'access', 'sub': '666b8b2ecf408686397efe0c', 'nbf': 1718324014, 'csrf': '73a40919-2cf5-44a3-adb8-4210e97fea54', 'exp': 1718324914}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324014, 'jti': 'ce99a3f3-6ed2-4609-8cfb-a91476a3e1ae', 'type': 'access', 'sub': '666b8b2ecf408686397efe0c', 'nbf': 1718324014, 'csrf': '73a40919-2cf5-44a3-adb8-4210e97fea54', 'exp': 1718324914}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324014, 'jti': 'ce99a3f3-6ed2-4609-8cfb-a91476a3e1ae', 'type': 'access', 'sub': '666b8b2ecf408686397efe0c', 'nbf': 1718324014, 'csrf': '73a40919-2cf5-44a3-adb8-4210e97fea54', 'exp': 1718324914}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324014, 'jti': 'ce99a3f3-6ed2-4609-8cfb-a91476a3e1ae', 'type': 'access', 'sub': '666b8b2ecf408686397efe0c', 'nbf': 1718324014, 'csrf': '73a40919-2cf5-44a3-adb8-4210e97fea54', 'exp': 1718324914}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324014, 'jti': 'ce99a3f3-6ed2-4609-8cfb-a91476a3e1ae', 'type': 'access', 'sub': '666b8b2ecf408686397efe0c', 'nbf': 1718324014, 'csrf': '73a40919-2cf5-44a3-adb8-4210e97fea54', 'exp': 1718324914}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324014, 'jti': 'ce99a3f3-6ed2-4609-8cfb-a91476a3e1ae', 'type': 'access', 'sub': '666b8b2ecf408686397efe0c', 'nbf': 1718324014, 'csrf': '73a40919-2cf5-44a3-adb8-4210e97fea54', 'exp': 1718324914}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324014, 'jti': '038a4f1d-8be9-487d-b40f-724fd19ab1f9', 'type': 'access', 'sub': '666b8b2ecf408686397efe0e', 'nbf': 1718324014, 'csrf': '09cd49fd-eacc-4b3f-bf71-1d4c6fe0f68f', 'exp': 1718324914}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324014, 'jti': '668fbe5f-86c1-4dca-8dce-8538f715affa', 'type': 'access', 'sub': '666b8b2ecf408686397efe10', 'nbf': 1718324014, 'csrf': '2463e7cb-ae9b-458c-a339-20f0a2e89ace', 'exp': 1718324914}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364340, 'jti': '877b9452-a9e1-41b9-9c09-9770c9783e89', 'type': 'access', 'sub': '666c28b49e25ce71cf440490', 'nbf': 1718364340, 'csrf': 'cff74e8f-62cf-4d4a-969f-01cb14e94fc7', 'exp': 1718365240}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c28b49e25ce71cf440490') email='test@test.com' password='__hash__scrypt:32768:8:1$hY1NGhizPLxxi2JN$b151da9d7f0d6e895952c157eb7d8f3d3515f711d113db4b90263e6f96d4d32407950f85cdfd6457c4103faad5fef1ec269e1728321be79755a927c2afa2851b' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364340, 'jti': '5d392c43-ff06-475c-a7d1-f06070cc9c0c', 'type': 'access', 'sub': '666c28b49e25ce71cf440495', 'nbf': 1718364340, 'csrf': '79edb2d5-f427-43a4-860c-95437cc7cf1d', 'exp': 1718365240}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c28b49e25ce71cf440495') email='test@test.com' password='__hash__scrypt:32768:8:1$Q9DA1cIbWfLCVl7q$59f0dca1484d086944b7e1bcdf24f09c927dbf37b5ab98142101dc2fdec12469cbedde07a4074e50fa15a94528da9b04e3620024f3395bf0b98ca030e534a586' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364340, 'jti': '70d7a800-3a42-48e9-b891-ce4f8786946c', 'type': 'access', 'sub': '666c28b49e25ce71cf440498', 'nbf': 1718364340, 'csrf': '3f3566fd-3c84-4b01-a6e8-27ffdd5778b7', 'exp': 1718365240}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c28b49e25ce71cf440498') email='test@test.com' password='__hash__scrypt:32768:8:1$9HQAMpKqvXVyiIFs$bab30f2518316d5ec34785762c336e1e626a5d01bb1310ad6d4707126799ecc8e967fa1fedd34cac0f3e10d6c077fdf29e827b11d728b2223b9dbfc5aecf23f4' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364341, 'jti': '96356ac1-3285-4d45-8b03-51b8c322da28', 'type': 'access', 'sub': '666c28b59e25ce71cf4404a7', 'nbf': 1718364341, 'csrf': 'a6c197cb-fbe4-411f-9d06-053878bb0c8b', 'exp': 1718365241}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364342, 'jti': 'c49026cf-e69e-46d6-93f0-10ac03859b5d', 'type': 'access', 'sub': '666c28b69e25ce71cf4404ac', 'nbf': 1718364342, 'csrf': 'e860946a-acec-411e-9ec0-13b63996c9a2', 'exp': 1718365242}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized DELETE request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364342, 'jti': '34d35f2e-88f4-4185-8b0d-c69d35f7ff75', 'type': 'access', 'sub': '666c28b69e25ce71cf4404b1', 'nbf': 1718364342, 'csrf': 'c957b746-10ed-45ea-ba49-412046f6a259', 'exp': 1718365242}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364343, 'jti': 'faf24eff-abe6-45d5-8199-eafbcd4c1d54', 'type': 'access', 'sub': '666c28b79e25ce71cf4404b6', 'nbf': 1718364343, 'csrf': '38b017e2-c978-4632-9fd6-4fcd7ecac9bc', 'exp': 1718365243}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364343, 'jti': '2864f68f-0b97-46bf-a952-7fedb484f969', 'type': 'access', 'sub': '666c28b79e25ce71cf4404b8', 'nbf': 1718364343, 'csrf': '1039418f-83d3-424f-b100-123982a4dbb1', 'exp': 1718365243}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364343, 'jti': '85e810c7-a82f-425e-98d3-67bed924dce3', 'type': 'access', 'sub': '666c28b79e25ce71cf4404ba', 'nbf': 1718364343, 'csrf': '2562531b-4621-44cf-b88f-65b23d6be8ed', 'exp': 1718365243}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364343, 'jti': '121a6351-5c88-4b63-b66c-97df89e145f1', 'type': 'access', 'sub': '666c28b79e25ce71cf4404bc', 'nbf': 1718364343, 'csrf': 'dc14cfd6-8ea6-4521-85a9-f7943196765a', 'exp': 1718365243}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364343, 'jti': '5f1eabbd-4213-4c61-a44b-dfd8368eb447', 'type': 'access', 'sub': '666c28b79e25ce71cf4404be', 'nbf': 1718364343, 'csrf': 'd97e5fca-8ccf-4f6c-8f56-679329f6a542', 'exp': 1718365243}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364343, 'jti': '5f1eabbd-4213-4c61-a44b-dfd8368eb447', 'type': 'access', 'sub': '666c28b79e25ce71cf4404be', 'nbf': 1718364343, 'csrf': 'd97e5fca-8ccf-4f6c-8f56-679329f6a542', 'exp': 1718365243}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364343, 'jti': '5f1eabbd-4213-4c61-a44b-dfd8368eb447', 'type': 'access', 'sub': '666c28b79e25ce71cf4404be', 'nbf': 1718364343, 'csrf': 'd97e5fca-8ccf-4f6c-8f56-679329f6a542', 'exp': 1718365243}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364343, 'jti': '5f1eabbd-4213-4c61-a44b-dfd8368eb447', 'type': 'access', 'sub': '666c28b79e25ce71cf4404be', 'nbf': 1718364343, 'csrf': 'd97e5fca-8ccf-4f6c-8f56-679329f6a542', 'exp': 1718365243}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364343, 'jti': '5f1eabbd-4213-4c61-a44b-dfd8368eb447', 'type': 'access', 'sub': '666c28b79e25ce71cf4404be', 'nbf': 1718364343, 'csrf': 'd97e5fca-8ccf-4f6c-8f56-679329f6a542', 'exp': 1718365243}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364343, 'jti': '5f1eabbd-4213-4c61-a44b-dfd8368eb447', 'type': 'access', 'sub': '666c28b79e25ce71cf4404be', 'nbf': 1718364343, 'csrf': 'd97e5fca-8ccf-4f6c-8f56-679329f6a542', 'exp': 1718365243}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364344, 'jti': '2273e4d2-179f-4e94-9bd9-4097d72b7850', 'type': 'access', 'sub': '666c28b89e25ce71cf4404c0', 'nbf': 1718364344, 'csrf': '7a086646-fd06-40bc-b77c-f68df64ffb21', 'exp': 1718365244}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364344, 'jti': '2273e4d2-179f-4e94-9bd9-4097d72b7850', 'type': 'access', 'sub': '666c28b89e25ce71cf4404c0', 'nbf': 1718364344, 'csrf': '7a086646-fd06-40bc-b77c-f68df64ffb21', 'exp': 1718365244}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364344, 'jti': '2273e4d2-179f-4e94-9bd9-4097d72b7850', 'type': 'access', 'sub': '666c28b89e25ce71cf4404c0', 'nbf': 1718364344, 'csrf': '7a086646-fd06-40bc-b77c-f68df64ffb21', 'exp': 1718365244}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364344, 'jti': '2273e4d2-179f-4e94-9bd9-4097d72b7850', 'type': 'access', 'sub': '666c28b89e25ce71cf4404c0', 'nbf': 1718364344, 'csrf': '7a086646-fd06-40bc-b77c-f68df64ffb21', 'exp': 1718365244}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364344, 'jti': '2273e4d2-179f-4e94-9bd9-4097d72b7850', 'type': 'access', 'sub': '666c28b89e25ce71cf4404c0', 'nbf': 1718364344, 'csrf': '7a086646-fd06-40bc-b77c-f68df64ffb21', 'exp': 1718365244}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364344, 'jti': '2273e4d2-179f-4e94-9bd9-4097d72b7850', 'type': 'access', 'sub': '666c28b89e25ce71cf4404c0', 'nbf': 1718364344, 'csrf': '7a086646-fd06-40bc-b77c-f68df64ffb21', 'exp': 1718365244}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364344, 'jti': 'eefcff57-bfa7-4c85-9f7b-2333c392d1da', 'type': 'access', 'sub': '666c28b89e25ce71cf4404c2', 'nbf': 1718364344, 'csrf': 'e3319af7-3c0a-4972-8a06-9a1fd97a1a40', 'exp': 1718365244}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364344, 'jti': '9e90bd81-b221-41cd-871f-4c19fcd83881', 'type': 'access', 'sub': '666c28b89e25ce71cf4404c4', 'nbf': 1718364344, 'csrf': 'e0b9300d-8815-4d4b-8f19-d70815768b4d', 'exp': 1718365244}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364417, 'jti': 'eebc058f-9d66-4cdf-8467-b49e78230394', 'type': 'access', 'sub': '666c29012a9a2eee576c3a67', 'nbf': 1718364417, 'csrf': '24c9606e-7f90-4293-b3a1-a88254b2809c', 'exp': 1718365317}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c29012a9a2eee576c3a67') email='test@test.com' password='__hash__scrypt:32768:8:1$REUlZPXvefcCF4D2$1650de931c6dc1c3173696ebbb78234ca241438b081e314c6a32663c1415bfd041750756d542af4063fc790164c8e1068887c1785c6304cc82539b4bcfa1cbcd' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364417, 'jti': '543e2a62-9ae5-48ee-9659-fc492e8e78a5', 'type': 'access', 'sub': '666c29012a9a2eee576c3a6c', 'nbf': 1718364417, 'csrf': 'c08155b3-af1d-45c3-944e-6a882c13c980', 'exp': 1718365317}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c29012a9a2eee576c3a6c') email='test@test.com' password='__hash__scrypt:32768:8:1$AQauo8sunFm9MV1V$e811f3407558d5a64de99241c1baff38fd2a3653b655519a00391d13caa6d93d0ece40cf50d779d3923fed1a90f366ec3d4f2de9384c25cb54392b50844f1c38' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364417, 'jti': 'd30be5d4-ade3-4b64-8af3-1d5cde3ab53f', 'type': 'access', 'sub': '666c29012a9a2eee576c3a6f', 'nbf': 1718364417, 'csrf': '98d29179-c13d-4e30-817c-58c6ec2b56ba', 'exp': 1718365317}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c29012a9a2eee576c3a6f') email='test@test.com' password='__hash__scrypt:32768:8:1$2cuFwENk5n35Bzjn$fbe9e14adc5551d7046dd61627329b4199f98f95e5e207131adb22a1d1e8d54b51a579bcbd2d3829031c9ca27404e9a253e608c337d7993a9c16c37be0e17f73' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364418, 'jti': '430471ef-a31f-4c81-b886-14fdd77035a0', 'type': 'access', 'sub': '666c29022a9a2eee576c3a7e', 'nbf': 1718364418, 'csrf': 'b94a395d-786b-45af-ad99-8d1a5ccccac0', 'exp': 1718365318}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364418, 'jti': '2b504156-90d3-40c0-94c7-a722b86788c4', 'type': 'access', 'sub': '666c29022a9a2eee576c3a83', 'nbf': 1718364418, 'csrf': '92eb6dba-f20e-4914-a4c7-37fd19e6f8b3', 'exp': 1718365318}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized DELETE request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364419, 'jti': 'd26da348-aabe-461a-8df3-18c25f689774', 'type': 'access', 'sub': '666c29032a9a2eee576c3a88', 'nbf': 1718364419, 'csrf': 'a4d3f030-6509-4a17-b9cf-713acc5bef63', 'exp': 1718365319}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364419, 'jti': '9b956fbb-3e30-41b5-8689-a5580a37eeab', 'type': 'access', 'sub': '666c29032a9a2eee576c3a8d', 'nbf': 1718364419, 'csrf': '75eb144e-e6ce-407d-894f-cc2b021d50d1', 'exp': 1718365319}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364419, 'jti': '785d4901-44da-4067-9182-0db15f7d45d0', 'type': 'access', 'sub': '666c29032a9a2eee576c3a8f', 'nbf': 1718364419, 'csrf': '308d0a2a-1b5d-4f89-bd13-10ef74ce01f9', 'exp': 1718365319}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364419, 'jti': 'af0354a2-e129-40e5-a89e-ed387725fc23', 'type': 'access', 'sub': '666c29032a9a2eee576c3a91', 'nbf': 1718364419, 'csrf': 'b3478bd2-9e5b-4740-ae36-cf0a333ce204', 'exp': 1718365319}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '28efead8-ef27-46a6-9437-012a645311ec', 'type': 'access', 'sub': '666c29042a9a2eee576c3a93', 'nbf': 1718364420, 'csrf': '77f5d021-2f62-487c-957d-3d566366e299', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '7927993f-230a-4027-993d-dbe94ef65b22', 'type': 'access', 'sub': '666c29042a9a2eee576c3a95', 'nbf': 1718364420, 'csrf': '860a909e-50c7-4a01-9285-acbff87cb07a', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '7927993f-230a-4027-993d-dbe94ef65b22', 'type': 'access', 'sub': '666c29042a9a2eee576c3a95', 'nbf': 1718364420, 'csrf': '860a909e-50c7-4a01-9285-acbff87cb07a', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '7927993f-230a-4027-993d-dbe94ef65b22', 'type': 'access', 'sub': '666c29042a9a2eee576c3a95', 'nbf': 1718364420, 'csrf': '860a909e-50c7-4a01-9285-acbff87cb07a', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '7927993f-230a-4027-993d-dbe94ef65b22', 'type': 'access', 'sub': '666c29042a9a2eee576c3a95', 'nbf': 1718364420, 'csrf': '860a909e-50c7-4a01-9285-acbff87cb07a', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '7927993f-230a-4027-993d-dbe94ef65b22', 'type': 'access', 'sub': '666c29042a9a2eee576c3a95', 'nbf': 1718364420, 'csrf': '860a909e-50c7-4a01-9285-acbff87cb07a', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '7927993f-230a-4027-993d-dbe94ef65b22', 'type': 'access', 'sub': '666c29042a9a2eee576c3a95', 'nbf': 1718364420, 'csrf': '860a909e-50c7-4a01-9285-acbff87cb07a', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '9642195e-b3c1-44a2-8484-fe892dfda268', 'type': 'access', 'sub': '666c29042a9a2eee576c3a97', 'nbf': 1718364420, 'csrf': '41659cf2-dcca-4a01-9222-cce3aab703bc', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '9642195e-b3c1-44a2-8484-fe892dfda268', 'type': 'access', 'sub': '666c29042a9a2eee576c3a97', 'nbf': 1718364420, 'csrf': '41659cf2-dcca-4a01-9222-cce3aab703bc', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '9642195e-b3c1-44a2-8484-fe892dfda268', 'type': 'access', 'sub': '666c29042a9a2eee576c3a97', 'nbf': 1718364420, 'csrf': '41659cf2-dcca-4a01-9222-cce3aab703bc', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '9642195e-b3c1-44a2-8484-fe892dfda268', 'type': 'access', 'sub': '666c29042a9a2eee576c3a97', 'nbf': 1718364420, 'csrf': '41659cf2-dcca-4a01-9222-cce3aab703bc', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '9642195e-b3c1-44a2-8484-fe892dfda268', 'type': 'access', 'sub': '666c29042a9a2eee576c3a97', 'nbf': 1718364420, 'csrf': '41659cf2-dcca-4a01-9222-cce3aab703bc', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '9642195e-b3c1-44a2-8484-fe892dfda268', 'type': 'access', 'sub': '666c29042a9a2eee576c3a97', 'nbf': 1718364420, 'csrf': '41659cf2-dcca-4a01-9222-cce3aab703bc', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364421, 'jti': 'b4786238-07c6-4e75-b227-d7b80330de29', 'type': 'access', 'sub': '666c29052a9a2eee576c3a99', 'nbf': 1718364421, 'csrf': '079973db-009b-4931-88b6-dda6a88fca99', 'exp': 1718365321}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364421, 'jti': 'fe595d1b-6cf2-48c6-8295-a19f4106d2fe', 'type': 'access', 'sub': '666c29052a9a2eee576c3a9b', 'nbf': 1718364421, 'csrf': 'cf09aeff-70db-4931-b64a-dc43388bc67c', 'exp': 1718365321}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
