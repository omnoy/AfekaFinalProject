INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'test'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320348, 'jti': '8290ddef-f9ba-471f-a1da-33d5d2703380', 'type': 'access', 'sub': '666b7cdc8edac0a7ed75dcd9', 'nbf': 1718320348, 'csrf': '6df35959-31be-40e4-b05a-d0cfac3d04cf', 'exp': 1718321248}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7cdc8edac0a7ed75dcd9') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$cwifU6R6zy7Jk5jw$d462a54c581bfec055720d788d8c4dc29decb6f35ad364bcd5d2b81173c36e0f4f3270f1c6b9654b88b15e664375fef4aa51cfeb1b1106fab827fcde8e9af426' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320348, 'jti': '5e56d93b-d408-49b1-b9f4-643abb2036eb', 'type': 'access', 'sub': '666b7cdc8edac0a7ed75dcde', 'nbf': 1718320348, 'csrf': '7301d29a-ba82-43db-84c3-d654743abb62', 'exp': 1718321248}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7cdc8edac0a7ed75dcde') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$15SvdosgHsKhGimM$20f5480c323510eb18899e3404d3ae621f6bfb3df49fb23d7d6a088b8b9231a91fb724283234f733890076491e25d9006c68d2db7404cf6032db34058679d52a' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320348, 'jti': '5b2e9aa5-51d2-4eae-8587-b91391f3a054', 'type': 'access', 'sub': '666b7cdc8edac0a7ed75dce1', 'nbf': 1718320348, 'csrf': '2687045e-5867-4343-8651-3ce7a1716f6e', 'exp': 1718321248}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7cdc8edac0a7ed75dce1') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$OZtK50mZzQXwdz43$b21c11c2c21407b9c25afbef5d7ecb7dc8ae1ebbffee5326621461fd26356674ee80c587ac09c2a8060b355a46d2c141a89da1567354c26cf07c0ddcd68a7e82' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
ERROR:app.extensions:403 Forbidden: Unauthorized role, cannot register as admin
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 48, in register
    abort(403, "Unauthorized role, cannot register as admin")
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\helpers.py", line 274, in abort
    current_app.aborter(code, *args, **kwargs)
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\werkzeug\exceptions.py", line 861, in __call__
    raise self.mapping[code](*args, **kwargs)
werkzeug.exceptions.Forbidden: 403 Forbidden: Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320350, 'jti': 'e7dbf74f-acbd-4564-a2f4-177952cd7b3b', 'type': 'access', 'sub': '666b7cde8edac0a7ed75dcf1', 'nbf': 1718320350, 'csrf': 'd07c38ab-e244-40b1-ab36-907232ef2e3f', 'exp': 1718321250}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'newname'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320350, 'jti': '6c801fcb-6e01-4ab6-80de-5db78c49f402', 'type': 'access', 'sub': '666b7cde8edac0a7ed75dcf3', 'nbf': 1718320350, 'csrf': '119ed320-ab2a-4954-aec6-3fbf5540eba5', 'exp': 1718321250}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'new position', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320350, 'jti': '823a98ec-13e1-42d8-b1fd-df5079ffacab', 'type': 'access', 'sub': '666b7cde8edac0a7ed75dcf5', 'nbf': 1718320350, 'csrf': 'a99a0775-f905-4bc9-a143-b05c84ef320c', 'exp': 1718321250}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320350, 'jti': 'd946c664-ca26-49f4-ad38-3a1eabbcf054', 'type': 'access', 'sub': '666b7cde8edac0a7ed75dcf7', 'nbf': 1718320350, 'csrf': '1b109f25-d936-42be-a136-4fa0ead3a385', 'exp': 1718321250}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': ''}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320350, 'jti': 'ddbe0c3f-ea38-42e6-9753-fefd16b2bc91', 'type': 'access', 'sub': '666b7cde8edac0a7ed75dcf9', 'nbf': 1718320350, 'csrf': 'f613344b-10de-4a42-bccf-db93de82e66f', 'exp': 1718321250}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': '', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320350, 'jti': '0360db8b-85be-4241-bafa-ff50aae9477a', 'type': 'access', 'sub': '666b7cde8edac0a7ed75dcfb', 'nbf': 1718320350, 'csrf': 'bca9108a-ba3c-413e-8f42-3a25cbd9669a', 'exp': 1718321250}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Email cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320350, 'jti': 'f87123e1-1cda-4c8f-aba3-ff8f53c5a1b2', 'type': 'access', 'sub': '666b7cde8edac0a7ed75dcfd', 'nbf': 1718320350, 'csrf': '7c3994c7-a3df-4e92-b430-bdb8afe914ae', 'exp': 1718321250}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Role cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'test'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320768, 'jti': '5380fb45-2d0a-4331-ba68-961b6c1b9bb8', 'type': 'access', 'sub': '666b7e80c0f3613d0377200f', 'nbf': 1718320768, 'csrf': '944df308-92ae-4615-9919-b8cf541de289', 'exp': 1718321668}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7e80c0f3613d0377200f') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$gqO6gsnCLo3hFPXD$a3fefcc9723617971e279f03b7da9b8cf32068e3f5375acc0720839d8126c2c3e8e150c5affac7a139cb5519bbd4a8063a997bed9ae7173453fb7f2f3dd4e193' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320768, 'jti': 'a84de2b2-4dad-48ef-8d08-7a0584a82e2c', 'type': 'access', 'sub': '666b7e80c0f3613d03772014', 'nbf': 1718320768, 'csrf': '7e2a90f0-5796-44e7-9d2d-c87e4109b055', 'exp': 1718321668}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7e80c0f3613d03772014') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$p2nUzWtIdn7C1XBN$0b8c93a7b3bd50df3528ee82192001b126ded2491ce1e6191547113c72064766649b814338bb5e89aa3b2ff07abc79d14d88e7b875a33d670b0f5ad853921401' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320768, 'jti': '9e235880-9db8-489b-877d-2b338ead17fd', 'type': 'access', 'sub': '666b7e80c0f3613d03772017', 'nbf': 1718320768, 'csrf': 'd2f43ce0-e30d-4fc0-a817-82234875b0d7', 'exp': 1718321668}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7e80c0f3613d03772017') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$fKKhNWc0HoDjimzS$20db59b6d46d355d6c57ff294dbe42f51fb0de0d0fbcd0b93422fee76acd231c76ab8e94e1fdea9d5cd9bfbafee2f70b03f53d48beef72899cfefc445b55a43b' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320769, 'jti': '1be39134-8a5d-41fc-8c9a-fb5f766c8f50', 'type': 'access', 'sub': '666b7e81c0f3613d03772027', 'nbf': 1718320769, 'csrf': 'efead82b-eee7-4b4d-94a5-023d41628195', 'exp': 1718321669}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'newname'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320769, 'jti': '2601677f-d621-42eb-bd8f-f1009746ba5f', 'type': 'access', 'sub': '666b7e81c0f3613d03772029', 'nbf': 1718320769, 'csrf': '23a8105f-f9b1-4a30-b27f-7f79b282d863', 'exp': 1718321669}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'new position', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320770, 'jti': '2bcb6b95-ece1-4a8f-a886-e2a6cb58ab83', 'type': 'access', 'sub': '666b7e82c0f3613d0377202b', 'nbf': 1718320770, 'csrf': '481c9b3c-d824-440b-b5e0-7babcbdba9d4', 'exp': 1718321670}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320770, 'jti': '7c862b42-8b20-4a4e-8087-f718f47a80f0', 'type': 'access', 'sub': '666b7e82c0f3613d0377202d', 'nbf': 1718320770, 'csrf': '087fce68-5d91-4dc6-9d30-060294a85658', 'exp': 1718321670}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': ''}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320770, 'jti': '62282a95-6912-4cb6-be54-be4545c2c71d', 'type': 'access', 'sub': '666b7e82c0f3613d0377202f', 'nbf': 1718320770, 'csrf': 'c2ae4ba6-780c-45f2-92fa-c56e8f5997db', 'exp': 1718321670}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': '', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320770, 'jti': 'd5a54d12-1835-4b94-a597-b671bb6bc373', 'type': 'access', 'sub': '666b7e82c0f3613d03772031', 'nbf': 1718320770, 'csrf': 'a4c5980d-3b4e-4f68-8c7e-b6a6453649d7', 'exp': 1718321670}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Email cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320770, 'jti': '12e05fb9-cd5e-42f0-831d-d610624935b2', 'type': 'access', 'sub': '666b7e82c0f3613d03772033', 'nbf': 1718320770, 'csrf': 'fb950f46-1de9-4483-b04c-3e8d12ef7b3e', 'exp': 1718321670}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Role cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'test'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320896, 'jti': 'e9119b04-41fd-4bec-aa55-9d4865fd08f3', 'type': 'access', 'sub': '666b7f0007e2c7a5df36a547', 'nbf': 1718320896, 'csrf': '288bc016-c3c2-4647-968a-269a6a0256ea', 'exp': 1718321796}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7f0007e2c7a5df36a547') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$ETqNokNwoWGgjad2$e6bd9707897b330c0abef51001ae87007f34d5312bf2aeb0fbb60532aa2ccbb14badc85801f2633a1109f1227cd599a4ca0bc8e37b77cd736a6ea8b77bc2def7' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320896, 'jti': 'f6f52666-1f3f-4569-bebf-8cc6d42bf946', 'type': 'access', 'sub': '666b7f0007e2c7a5df36a54c', 'nbf': 1718320896, 'csrf': 'a3ca8583-3017-4aea-b4f9-406e1b90f5ed', 'exp': 1718321796}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7f0007e2c7a5df36a54c') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$a9bIZdj1fNtt3S8i$8e85f2d622b147a5fc14ca7ef900839d4cd2d600ea33b7dbf2a17dd64e52c57d813c11064b74adc19d4c3566b6de731f396fd0c2855fb6fb4f63e29534b50297' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320896, 'jti': 'ed2a3c71-4dce-4b71-87c7-927284757bc5', 'type': 'access', 'sub': '666b7f0007e2c7a5df36a54f', 'nbf': 1718320896, 'csrf': 'de1e580b-4671-42c8-bbe5-10a9aba352b5', 'exp': 1718321796}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7f0007e2c7a5df36a54f') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$roT73bO2mA69wVvK$7f88d9771aebb1891d5651be2a3e0201f4d17e993e49b594b17039b3441f6b0557aa385ccc92a4ae709f8cf211b549a28656f81559487ff59e8d8fd65fb2d646' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320898, 'jti': 'fcab9179-0573-491d-bd4b-a0b3e6cf58c8', 'type': 'access', 'sub': '666b7f0207e2c7a5df36a55f', 'nbf': 1718320898, 'csrf': 'a49440b6-2c41-489f-bad3-bcceb47496f3', 'exp': 1718321798}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'newname'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320898, 'jti': '80e6706f-0977-45a0-bd0d-83e48cf387ed', 'type': 'access', 'sub': '666b7f0207e2c7a5df36a561', 'nbf': 1718320898, 'csrf': '192e3962-8a3a-4e12-9e46-dd7487155d5a', 'exp': 1718321798}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'new position', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320898, 'jti': '6a165675-c59a-408d-90a8-6a5b6f1f1bad', 'type': 'access', 'sub': '666b7f0207e2c7a5df36a563', 'nbf': 1718320898, 'csrf': '1aa5c383-f628-4e46-a89b-c781852803fb', 'exp': 1718321798}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320898, 'jti': '8a218e34-e2b3-4a5f-93ec-5baf21d068a4', 'type': 'access', 'sub': '666b7f0207e2c7a5df36a565', 'nbf': 1718320898, 'csrf': 'e65e91ab-9ec5-4174-9431-d046ab9f1e89', 'exp': 1718321798}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': ''}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320898, 'jti': 'a9e0ecf6-8a4c-4e11-8afc-f07b81d9db0d', 'type': 'access', 'sub': '666b7f0207e2c7a5df36a567', 'nbf': 1718320898, 'csrf': '5eb4e86c-60d9-4df7-8388-901ebbf4435d', 'exp': 1718321798}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': '', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320898, 'jti': 'e15fde1d-b52b-45d9-a919-e3350e6be626', 'type': 'access', 'sub': '666b7f0207e2c7a5df36a569', 'nbf': 1718320898, 'csrf': '24955ff0-f343-46bc-8f12-2b4fd49f0cb9', 'exp': 1718321798}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Email cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718320898, 'jti': 'f086987c-f61c-4a97-aaa7-2e0be6d77e48', 'type': 'access', 'sub': '666b7f0207e2c7a5df36a56b', 'nbf': 1718320898, 'csrf': 'ce468020-9a11-4f3a-b683-20e65edb4e3d', 'exp': 1718321798}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Role cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'test'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718321004, 'jti': '84385c89-edc8-4f40-adfc-6d798840ff3f', 'type': 'access', 'sub': '666b7f6ce9e1f0eb6839e6cc', 'nbf': 1718321004, 'csrf': 'fa8e00a6-fbe9-48b4-b8bc-b8cb61f385f1', 'exp': 1718321904}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7f6ce9e1f0eb6839e6cc') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$Y8xWbKolDSJdtkZr$3e772b80a2c3e09a4d734a3920f69e10a9fafb10e6e5ae7e2a896d71bb26ab0e1b95ac421988f72cb2c82df5f52ed279a28ff9bb62f8480f391ee81398aac24d' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718321005, 'jti': '9059b91b-2f76-4389-9aa7-21bf31da5de0', 'type': 'access', 'sub': '666b7f6de9e1f0eb6839e6d1', 'nbf': 1718321005, 'csrf': 'ecee8fc2-b64e-45ef-a46f-0476a15a5987', 'exp': 1718321905}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7f6de9e1f0eb6839e6d1') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$BTFKpnXJuTPvsn6C$6294e70f0aeedd81ace4742aaf44bf9e63b2706617bc7ec25d4eb7d525bf770a646045f844c5bc249a888bbecc58053c3da21a2e71446261db530d42000a3a20' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718321005, 'jti': 'a1c8ec9e-59d7-4be7-a8e4-868a3459ec0a', 'type': 'access', 'sub': '666b7f6de9e1f0eb6839e6d4', 'nbf': 1718321005, 'csrf': '1e88f386-fa13-4762-9854-1856391bbd16', 'exp': 1718321905}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b7f6de9e1f0eb6839e6d4') email='test@test.com' password_hash='__hash__scrypt:32768:8:1$Uizditx6gIii6ftm$2b6ee63d36c71aebfea1487a610f5bafffc851efed22fa743612a87ad9de8ef47323106365ef8d0d3a50e26f948e2aed6efda20f98e0981d545c0cfb7c8a4bff' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'test'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718321006, 'jti': '2ad5fac5-ca35-47c7-9276-5b0f49d400e5', 'type': 'access', 'sub': '666b7f6ee9e1f0eb6839e6e4', 'nbf': 1718321006, 'csrf': '33efdbc3-4da6-4d04-83fb-854f3d46a7a5', 'exp': 1718321906}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'newname'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718321006, 'jti': 'add3a517-03e9-43c3-b4cc-c979c25f7bff', 'type': 'access', 'sub': '666b7f6ee9e1f0eb6839e6e6', 'nbf': 1718321006, 'csrf': '89ed9f62-3cea-4e4d-af14-f4469b15e911', 'exp': 1718321906}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'new position', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718321006, 'jti': 'cc51c5ab-0c78-498d-b8dc-1be09c276dc6', 'type': 'access', 'sub': '666b7f6ee9e1f0eb6839e6e8', 'nbf': 1718321006, 'csrf': '05969abe-e9e7-457f-acb8-cf14a57fc115', 'exp': 1718321906}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718321006, 'jti': '48b75a04-eeb8-4416-b3c3-61c940510f31', 'type': 'access', 'sub': '666b7f6ee9e1f0eb6839e6ea', 'nbf': 1718321006, 'csrf': 'b0035360-cb6e-4392-8854-567aead5f0f9', 'exp': 1718321906}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': ''}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718321007, 'jti': '8c65cdad-e55d-42fe-b8bc-30854fb1f97d', 'type': 'access', 'sub': '666b7f6fe9e1f0eb6839e6ec', 'nbf': 1718321007, 'csrf': '49d24463-b0e8-4938-8b2a-cc71dea14cf6', 'exp': 1718321907}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': '', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718321007, 'jti': '5d3c7724-4cd9-4e1f-b13e-c4a3d20b95af', 'type': 'access', 'sub': '666b7f6fe9e1f0eb6839e6ee', 'nbf': 1718321007, 'csrf': 'e4d80710-e890-4d72-8883-5c6c4b96022f', 'exp': 1718321907}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Email cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718321007, 'jti': '4eae8b55-8f9e-4390-8637-a857f50fbfec', 'type': 'access', 'sub': '666b7f6fe9e1f0eb6839e6f0', 'nbf': 1718321007, 'csrf': '793b03d3-32a7-4322-b02f-13d508555276', 'exp': 1718321907}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Role cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 3 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:2 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:2 validation errors for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master'}
ERROR:app.extensions:2 validation errors for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:2 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:2 validation errors for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master'}
ERROR:app.extensions:2 validation errors for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 9 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 9 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='testtest', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 9 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
ERROR:app.extensions:1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...b8d900ac42813df7b2618e3', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 81, in login
    user = user_service.get_user_by_email(login_data['email'])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 34, in get_user_by_email
    user = User(**user_dict)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...b8d900ac42813df7b2618e3', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...c7ec836ea68881b7bdef4e7', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 81, in login
    user = user_service.get_user_by_email(login_data['email'])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 34, in get_user_by_email
    user = User(**user_dict)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...c7ec836ea68881b7bdef4e7', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322250, 'jti': '9745c896-1ab1-48e6-b3d2-49ad0cf4328a', 'type': 'access', 'sub': '666b844a5ea8c725b16965fd', 'nbf': 1718322250, 'csrf': 'a5762c85-7ce0-4088-bc51-8636ee48cc6b', 'exp': 1718323150}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app:Exception on /auth/logout [POST]
Traceback (most recent call last):
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 869, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 167, in decorator
    verify_jwt_in_request(
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 113, in verify_jwt_in_request
    g._jwt_extended_jwt_user = _load_user(jwt_header, jwt_data)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 182, in _load_user
    user = user_lookup(jwt_header, jwt_data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\internal_utils.py", line 44, in user_lookup
    return jwt_manager._user_lookup_callback and jwt_manager._user_lookup_callback(
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 21, in user_loader_callback
    user = user_service.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 26, in get_user_by_id
    user = User(**user_dict)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...3a4689fe969654423064836', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322250, 'jti': 'ce3fc77b-1635-403c-ba0d-82ffad3331a6', 'type': 'access', 'sub': '666b844a5ea8c725b1696601', 'nbf': 1718322250, 'csrf': '2e71d2a7-0d89-4da9-b0fe-42a9b7062753', 'exp': 1718323150}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app:Exception on /auth/logout [POST]
Traceback (most recent call last):
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 869, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 167, in decorator
    verify_jwt_in_request(
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 113, in verify_jwt_in_request
    g._jwt_extended_jwt_user = _load_user(jwt_header, jwt_data)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 182, in _load_user
    user = user_lookup(jwt_header, jwt_data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\internal_utils.py", line 44, in user_lookup
    return jwt_manager._user_lookup_callback and jwt_manager._user_lookup_callback(
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 21, in user_loader_callback
    user = user_service.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 26, in get_user_by_id
    user = User(**user_dict)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...4d342de35b87c9651cc8b4e', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322250, 'jti': 'ef649a97-d6de-425a-b438-71ca3df0b684', 'type': 'access', 'sub': '666b844a5ea8c725b1696603', 'nbf': 1718322250, 'csrf': 'f545e9d5-f1c9-4131-bfdb-8617a3292000', 'exp': 1718323150}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app:Exception on /auth/logout [POST]
Traceback (most recent call last):
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 869, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 167, in decorator
    verify_jwt_in_request(
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 113, in verify_jwt_in_request
    g._jwt_extended_jwt_user = _load_user(jwt_header, jwt_data)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 182, in _load_user
    user = user_lookup(jwt_header, jwt_data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\internal_utils.py", line 44, in user_lookup
    return jwt_manager._user_lookup_callback and jwt_manager._user_lookup_callback(
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 21, in user_loader_callback
    user = user_service.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 26, in get_user_by_id
    user = User(**user_dict)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...8c453e1a06a8b08e4b66ea2', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:2 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'test', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'test', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:2 validation errors for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for User
email
  Field required [type=missing, input_value={'password': 'test', 'pos..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'test master'}
ERROR:app.extensions:2 validation errors for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
ERROR:app.extensions:1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...59f1bd1af99f0d7fa06521b', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 81, in login
    user = user_service.get_user_by_email(login_data['email'])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 34, in get_user_by_email
    user = User(**user_dict)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...59f1bd1af99f0d7fa06521b', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...4294be16438f9b858eb48e8', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 81, in login
    user = user_service.get_user_by_email(login_data['email'])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 34, in get_user_by_email
    user = User(**user_dict)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...4294be16438f9b858eb48e8', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322313, 'jti': 'ce5977dc-6319-4181-93be-5edb6de71557', 'type': 'access', 'sub': '666b84893160a055cbe841b5', 'nbf': 1718322313, 'csrf': 'aeb750bc-5c14-4043-9fa3-409d08042e5f', 'exp': 1718323213}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app:Exception on /auth/logout [POST]
Traceback (most recent call last):
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 869, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 167, in decorator
    verify_jwt_in_request(
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 113, in verify_jwt_in_request
    g._jwt_extended_jwt_user = _load_user(jwt_header, jwt_data)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 182, in _load_user
    user = user_lookup(jwt_header, jwt_data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\internal_utils.py", line 44, in user_lookup
    return jwt_manager._user_lookup_callback and jwt_manager._user_lookup_callback(
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 21, in user_loader_callback
    user = user_service.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 26, in get_user_by_id
    user = User(**user_dict)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...bfff20088be42d5ab37ec08', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322313, 'jti': '8d6596fd-236a-4027-8369-2883060b8c52', 'type': 'access', 'sub': '666b84893160a055cbe841b9', 'nbf': 1718322313, 'csrf': 'c42dcf1d-71a9-4f59-816c-8b90814cade0', 'exp': 1718323213}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app:Exception on /auth/logout [POST]
Traceback (most recent call last):
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 869, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 167, in decorator
    verify_jwt_in_request(
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 113, in verify_jwt_in_request
    g._jwt_extended_jwt_user = _load_user(jwt_header, jwt_data)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 182, in _load_user
    user = user_lookup(jwt_header, jwt_data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\internal_utils.py", line 44, in user_lookup
    return jwt_manager._user_lookup_callback and jwt_manager._user_lookup_callback(
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 21, in user_loader_callback
    user = user_service.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 26, in get_user_by_id
    user = User(**user_dict)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...57e170284156d4af7a3b327', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322313, 'jti': 'ef080ace-0f7c-46f4-9be5-427a13f1fd2f', 'type': 'access', 'sub': '666b84893160a055cbe841bb', 'nbf': 1718322313, 'csrf': 'c0573f20-2d29-4a5e-8bb7-e8c2d8fa53bf', 'exp': 1718323213}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app:Exception on /auth/logout [POST]
Traceback (most recent call last):
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 869, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 167, in decorator
    verify_jwt_in_request(
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 113, in verify_jwt_in_request
    g._jwt_extended_jwt_user = _load_user(jwt_header, jwt_data)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\view_decorators.py", line 182, in _load_user
    user = user_lookup(jwt_header, jwt_data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask_jwt_extended\internal_utils.py", line 44, in user_lookup
    return jwt_manager._user_lookup_callback and jwt_manager._user_lookup_callback(
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 21, in user_loader_callback
    user = user_service.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 26, in get_user_by_id
    user = User(**user_dict)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  Assertion failed, must be alphanumeric [type=assertion_error, input_value='__hash__scrypt:32768:8:1...b6507ce01d33deac3c064b2', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
ERROR:app.extensions:'User' object has no attribute 'password_hash'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 82, in login
    if user and user.check_password(login_data['password']):
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\models\user.py", line 40, in check_password
    return check_password_hash(self.password_hash.removeprefix('__hash__'), password_plaintext)
                               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'password_hash'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:'User' object has no attribute 'password_hash'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 82, in login
    if user and user.check_password(login_data['password']):
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\models\user.py", line 40, in check_password
    return check_password_hash(self.password_hash.removeprefix('__hash__'), password_plaintext)
                               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'password_hash'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322378, 'jti': 'a4bc1271-7559-4a8e-9fd1-fc8238dd1e8c', 'type': 'access', 'sub': '666b84ca2a0f6d5efc0ec6fb', 'nbf': 1718322378, 'csrf': '8158870c-fb8c-42f4-b298-6898faa1b813', 'exp': 1718323278}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b84ca2a0f6d5efc0ec6fb') email='test@test.com' password='__hash__scrypt:32768:8:1$aLlES4q2ppO6zdLJ$7dfd7c2b3aa21560dcbb2e18fa1b31495dda9de590da4503b2a2a58756eb5acca50c76f369b7222c3cafc365d7728d8d383e5f07ad0618493fedf4216ecf00d3' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322379, 'jti': '2523a629-8657-4c6c-9598-71a75af0b116', 'type': 'access', 'sub': '666b84cb2a0f6d5efc0ec700', 'nbf': 1718322379, 'csrf': '81685ccd-6725-4ef1-88eb-b06d95943512', 'exp': 1718323279}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b84cb2a0f6d5efc0ec700') email='test@test.com' password='__hash__scrypt:32768:8:1$BtiFZTuyKDTI5NnS$b583f5ad3bfe3f44b74058dc965621e54f7a46ea118d9d0756dfed621662f90ca8955cfe6e72260ffe549baeabc82a729e9a45cb7db4d4172499fa335f7946a6' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322379, 'jti': 'a43ee0b6-41a0-461c-b0ab-b2574fe0a334', 'type': 'access', 'sub': '666b84cb2a0f6d5efc0ec703', 'nbf': 1718322379, 'csrf': '7b3f8f9c-745f-44e9-acc1-aea8d7860e56', 'exp': 1718323279}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b84cb2a0f6d5efc0ec703') email='test@test.com' password='__hash__scrypt:32768:8:1$eswiSq0nCSFB4ec0$96ee115844b83632e86c85b03e2d08eb700c996fa6770e7ed5cf943d425b8ef4c6408b3d973803f8b2011ecae1b34cb15384eadee19825473ddd3f90ff3c5bac' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
ERROR:app.extensions:'User' object has no attribute 'password_hash'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 82, in login
    if user and user.check_password(login_data['password']):
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\models\user.py", line 40, in check_password
    return check_password_hash(self.password_hash.removeprefix('__hash__'), password_plaintext)
                               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'password_hash'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
ERROR:app.extensions:'User' object has no attribute 'password_hash'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 82, in login
    if user and user.check_password(login_data['password']):
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\models\user.py", line 40, in check_password
    return check_password_hash(self.password_hash.removeprefix('__hash__'), password_plaintext)
                               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'password_hash'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:'User' object has no attribute 'password_hash'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 82, in login
    if user and user.check_password(login_data['password']):
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\models\user.py", line 40, in check_password
    return check_password_hash(self.password_hash.removeprefix('__hash__'), password_plaintext)
                               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'password_hash'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
ERROR:app.extensions:'User' object has no attribute 'password_hash'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 82, in login
    if user and user.check_password(login_data['password']):
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\models\user.py", line 40, in check_password
    return check_password_hash(self.password_hash.removeprefix('__hash__'), password_plaintext)
                               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'password_hash'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:'User' object has no attribute 'password_hash'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 82, in login
    if user and user.check_password(login_data['password']):
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\models\user.py", line 40, in check_password
    return check_password_hash(self.password_hash.removeprefix('__hash__'), password_plaintext)
                               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'password_hash'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322484, 'jti': 'f0c8b0d1-8429-4230-870e-94d1e2e9e551', 'type': 'access', 'sub': '666b8534d4cd2590edd89e77', 'nbf': 1718322484, 'csrf': 'a2c6d5de-62c3-4cd2-9c71-3a4167481166', 'exp': 1718323384}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8534d4cd2590edd89e77') email='test@test.com' password='__hash__scrypt:32768:8:1$UakNlgnr4glKVcJv$15cf292b9f57fc3c5cac399c6a8d957ab8844eb4e3f46f2bf2a40defa3a7f5da853cc6e086ca64e1d4040a27e220ecd355a565aa361bc6fddfefbc66f188ce58' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322484, 'jti': 'fc44fca3-f21e-470f-b254-56797803cd64', 'type': 'access', 'sub': '666b8534d4cd2590edd89e7c', 'nbf': 1718322484, 'csrf': '27f0ed89-64a3-42d4-9ad5-13236e18d40b', 'exp': 1718323384}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8534d4cd2590edd89e7c') email='test@test.com' password='__hash__scrypt:32768:8:1$kbLlLwqyrwPCtT8c$1e2fcf9ccf0a4489acc99cd97a03915c3f48a29dae089d7e964f2d3fcd5d67d936f6cd0a898734460a541842b4c3b2faf0b9784ab641e70e893086aa45a690f9' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322484, 'jti': '03f2d9d8-047a-40ad-8015-b36fdada4590', 'type': 'access', 'sub': '666b8534d4cd2590edd89e7f', 'nbf': 1718322484, 'csrf': '3573d4ca-6963-4953-a263-85caca2a0a1b', 'exp': 1718323384}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8534d4cd2590edd89e7f') email='test@test.com' password='__hash__scrypt:32768:8:1$kDUvxTQd5qa624nI$9ea7e3fe9e8c6c8ff7a15f1f0f6f45ba7967e39dffd3880fdf50fd7b84fb3380a14a8cafbf289a751d936e25129d39df4492580671fab995d7d137125eb924dc' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322776, 'jti': '8c7c1a9a-4216-49e1-a316-e436f52da602', 'type': 'access', 'sub': '666b865879e0f19fbbfe9a81', 'nbf': 1718322776, 'csrf': 'd3fb133c-0f50-41a5-9538-a28cf96a1abb', 'exp': 1718323676}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b865879e0f19fbbfe9a81') email='test@test.com' password='__hash__scrypt:32768:8:1$8RX9d32PSA1dVoyg$3737c653e384463826d513fb49c97ca418e1d915732c933292493c63be108c7d2c569869c59cbd7477f5a55b89cfdc4312ab0649e7dfcf0f108dd10f3f422fe6' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322777, 'jti': '7d327bd3-b0e0-4fe1-aeb8-a6c977bbdf0f', 'type': 'access', 'sub': '666b865979e0f19fbbfe9a86', 'nbf': 1718322777, 'csrf': '92d3d6c5-c43f-491c-a57e-b9afca66358a', 'exp': 1718323677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b865979e0f19fbbfe9a86') email='test@test.com' password='__hash__scrypt:32768:8:1$gO9j6GFlpIjEap51$6ba55ac40de2b6ee35f4b915fa25b0bb98b4dbaf74f50f45e2c7e7060f99eb44c24d15d289017acc1d08575498b6a3729fd1ae3b37d011f7bd6277db224af51c' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322777, 'jti': '3f3fc8c6-9692-4742-aaaf-2f785f280fd3', 'type': 'access', 'sub': '666b865979e0f19fbbfe9a89', 'nbf': 1718322777, 'csrf': '8cb3b561-7858-4ccf-8109-e1b7317fb666', 'exp': 1718323677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b865979e0f19fbbfe9a89') email='test@test.com' password='__hash__scrypt:32768:8:1$3CGTY3xytO80IB5Y$764ee70b756ee5ebaa2e5d70a2519443df9112fe71cca3d3f7ee5ab849f91c5287d2efaa7d46dafa24bb6eb23678334357cc47e0222212f997d16d20914c910a' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 51, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 50, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322883, 'jti': '85e38e91-ff82-435e-9d32-2920a67aa4ff', 'type': 'access', 'sub': '666b86c3badc81247e1ec571', 'nbf': 1718322883, 'csrf': 'c210ed33-4203-4c92-b5e1-b4d0810c4862', 'exp': 1718323783}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b86c3badc81247e1ec571') email='test@test.com' password='__hash__scrypt:32768:8:1$dLmT622WPJnu6JTp$4e87712496db417a9c0f247264d51c959b9da4ed9f3fcf80c136a10ffba8070eb846446c3e4c96479a32cf93991e76b0bd19ebbd355feb0ebc4675335dd0df74' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322883, 'jti': 'aa4cff79-46e1-4c11-b9be-a4a17a46d00b', 'type': 'access', 'sub': '666b86c3badc81247e1ec576', 'nbf': 1718322883, 'csrf': 'c3aacb0d-5cb9-4f3c-acad-53986a34e01e', 'exp': 1718323783}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b86c3badc81247e1ec576') email='test@test.com' password='__hash__scrypt:32768:8:1$E2qHewzQgzOouDWv$1781aca29cf0d1d67f0f6491635b28de25223c71f3ac7a2e00d20c0de5830a6cde6f586093c3418ff48a8405aa48dd10ffcbea575067c32ecc8a8ff51dc121d9' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322883, 'jti': '4ca0a443-74af-47ca-af1d-85bb817b0964', 'type': 'access', 'sub': '666b86c3badc81247e1ec579', 'nbf': 1718322883, 'csrf': '1aa79ff9-a405-421d-8e05-48ba9b667d9f', 'exp': 1718323783}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b86c3badc81247e1ec579') email='test@test.com' password='__hash__scrypt:32768:8:1$9vWvCPECoRXbM9Ss$052d8234f2036a9d75ab6011e5895467eeeee9adbeb0d224dd4829b5087c9f0b927004b96a784cd7ab6bb143332a208ddcd7648f6aab3cabbed8c5b365b8107e' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 55, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322884, 'jti': 'bec244ff-827f-41b3-aed1-4875b85512a6', 'type': 'access', 'sub': '666b86c4badc81247e1ec589', 'nbf': 1718322884, 'csrf': 'aa70b997-e719-4f36-82c6-dd55f7345bc2', 'exp': 1718323784}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322885, 'jti': 'b135b119-b44b-4b0a-a3d9-f0a3ee00083e', 'type': 'access', 'sub': '666b86c5badc81247e1ec58b', 'nbf': 1718322885, 'csrf': '924ea149-9af1-443d-9526-4ff6e2f9cefa', 'exp': 1718323785}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322885, 'jti': 'f8a51715-46dd-4fce-97d5-2458ffdd4231', 'type': 'access', 'sub': '666b86c5badc81247e1ec58d', 'nbf': 1718322885, 'csrf': 'c0b99330-c1d6-4012-a118-a945f54ada02', 'exp': 1718323785}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322885, 'jti': '208073ee-8acf-455e-afd3-a726a50f4f6d', 'type': 'access', 'sub': '666b86c5badc81247e1ec58f', 'nbf': 1718322885, 'csrf': '60b5d797-2285-48d4-8946-4a2e35d9c85c', 'exp': 1718323785}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'test', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
password
  String should have at least 8 characters [type=string_too_short, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322932, 'jti': '6b3e17e3-807b-4a8f-b329-3f00d7d03894', 'type': 'access', 'sub': '666b86f4a945ce6904864abb', 'nbf': 1718322932, 'csrf': 'ca505b6f-9541-49fb-8c46-13e26cda2d12', 'exp': 1718323832}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b86f4a945ce6904864abb') email='test@test.com' password='__hash__scrypt:32768:8:1$Ny1pxQ4gD2cxEXJ0$4eb13de57f85af0654d9e533ee0ece82a81f5ec3325db14b3f71f310a7cae0ef8d03e156c4a8027f6f664b4f1abc5defe7214246177761a7aad68fdd80c67f73' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322932, 'jti': 'c5eb92cb-4f8b-4ae5-833f-5be28275e043', 'type': 'access', 'sub': '666b86f4a945ce6904864ac0', 'nbf': 1718322932, 'csrf': '81394d81-3356-4513-b39c-625542558a61', 'exp': 1718323832}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b86f4a945ce6904864ac0') email='test@test.com' password='__hash__scrypt:32768:8:1$ZXnMXJ3iwYQsoejC$9cb0296e72dededce4c845d0b251e85ff5b441487bae30a4eae2272475be48ed07d781254e08d69d7e78e8b91696d51f5ca07436268aa216fcb6cd761740aeed' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322932, 'jti': 'ee18f653-1069-43d3-a2a9-bc87fb1b4c6d', 'type': 'access', 'sub': '666b86f4a945ce6904864ac3', 'nbf': 1718322932, 'csrf': 'cd877443-6cf9-4d56-83ed-350e28ced3fb', 'exp': 1718323832}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b86f4a945ce6904864ac3') email='test@test.com' password='__hash__scrypt:32768:8:1$igSbw4BSnfx1Kc7R$3630c321f49e91432c230745913dce6afcbf6eb2e2f75fd18086806ef327bb5bf27f654764781f7835229e6fc478fadb68df3ac2821ff0cb5767ef3a300870a5' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 55, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322933, 'jti': '00f0c1ce-a3b1-4e16-85a3-5831ce0e4aa6', 'type': 'access', 'sub': '666b86f5a945ce6904864ad3', 'nbf': 1718322933, 'csrf': 'c44967ed-e9d2-42e6-99b0-0c3420d8ed8a', 'exp': 1718323833}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322933, 'jti': 'd951b6af-03a0-4a2f-82ae-ea0052fbdbec', 'type': 'access', 'sub': '666b86f5a945ce6904864ad5', 'nbf': 1718322933, 'csrf': 'ab4ef864-f5a5-46da-8664-5ee03c2dc3cb', 'exp': 1718323833}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322933, 'jti': '28c79978-4092-4955-8d49-03a77ceed451', 'type': 'access', 'sub': '666b86f5a945ce6904864ad7', 'nbf': 1718322933, 'csrf': '97230024-81a3-4917-a20d-22a31049c7eb', 'exp': 1718323833}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322933, 'jti': '88f5d090-e417-4e61-aafa-ca5fce6afb18', 'type': 'access', 'sub': '666b86f5a945ce6904864ad9', 'nbf': 1718322933, 'csrf': '4b9d08af-a8d5-4337-bd65-1e472740ade9', 'exp': 1718323833}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322933, 'jti': '51262336-8618-4423-b196-57f69780cab6', 'type': 'access', 'sub': '666b86f5a945ce6904864adb', 'nbf': 1718322933, 'csrf': 'ae1a77d5-3f41-4e8a-bd88-0fdb64f4a87e', 'exp': 1718323833}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322933, 'jti': '8afad8af-6651-4346-9b49-7c9d9e9516de', 'type': 'access', 'sub': '666b86f5a945ce6904864add', 'nbf': 1718322933, 'csrf': '277ba9e9-23fe-4862-8dd1-e811f181e7e4', 'exp': 1718323833}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Email cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322934, 'jti': 'c247ac38-cbb1-4f4d-970d-0a716f2dfe06', 'type': 'access', 'sub': '666b86f6a945ce6904864adf', 'nbf': 1718322934, 'csrf': 'ae47f444-094d-48cf-9d18-73dfa1c506f9', 'exp': 1718323834}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Role cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322945, 'jti': '6445ea47-c234-43bc-89f2-7bd2aac05900', 'type': 'access', 'sub': '666b87015125a90f17b6b4f8', 'nbf': 1718322945, 'csrf': '1f351ad7-0ec4-45b7-8678-e9108547b997', 'exp': 1718323845}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322945, 'jti': '863ce08f-4d0d-48f8-9a2a-95c58456f8ff', 'type': 'access', 'sub': '666b87015125a90f17b6b4fa', 'nbf': 1718322945, 'csrf': 'af6d7bf4-1a4a-4c6e-a080-2e3e2c4d65d7', 'exp': 1718323845}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322946, 'jti': 'd3c6f202-07a2-46fb-81dc-33685ff05803', 'type': 'access', 'sub': '666b87025125a90f17b6b4fc', 'nbf': 1718322946, 'csrf': '3ad6afb5-0197-4128-9ad6-014334d01d45', 'exp': 1718323846}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322946, 'jti': '15358abc-8678-479a-af09-b7fdfa302c04', 'type': 'access', 'sub': '666b87025125a90f17b6b4fe', 'nbf': 1718322946, 'csrf': 'eb8e2c54-555d-482e-a832-f3adb7d484cd', 'exp': 1718323846}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322946, 'jti': '1b9df9a5-ade1-4909-bb68-72d5ad50d0cd', 'type': 'access', 'sub': '666b87025125a90f17b6b500', 'nbf': 1718322946, 'csrf': '254a8008-58c2-4cdb-a51c-632d69577d53', 'exp': 1718323846}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:'role'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 31, in update_user
    if user.role != user_data['role']:
                    ~~~~~~~~~^^^^^^^^
KeyError: 'role'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322946, 'jti': 'd13ee687-1d65-40ac-aa63-577290f76eb8', 'type': 'access', 'sub': '666b87025125a90f17b6b502', 'nbf': 1718322946, 'csrf': 'f2db058d-1665-4107-a904-949d7c9be065', 'exp': 1718323846}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Email cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718322946, 'jti': 'cf1a8706-757b-4afb-96c9-b59f1fd48f8a', 'type': 'access', 'sub': '666b87025125a90f17b6b504', 'nbf': 1718322946, 'csrf': '8c4fe742-99bb-4d1b-9cd1-627a17229bc0', 'exp': 1718323846}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Role cannot be changed
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': 'e0d7073b-bc03-46f5-b944-e94a5d0e2e95', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf66', 'nbf': 1718323051, 'csrf': 'ee1cfc5d-6970-4844-9961-de9b661993de', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': 'b3325b9e-a956-46e9-af11-537a569dd78f', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf68', 'nbf': 1718323051, 'csrf': 'b4a90566-0cd7-490b-86ab-2d522bacc93b', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': '5c07c606-20a1-4446-91c5-ff7530a87e7b', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6a', 'nbf': 1718323051, 'csrf': '94a0beac-ac8a-4139-810c-585b9ab4bdea', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': '61e0591f-3570-4c07-8215-81866051b0cc', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6c', 'nbf': 1718323051, 'csrf': '474820d3-8344-4e66-b890-7faaadd95e85', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': '61e0591f-3570-4c07-8215-81866051b0cc', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6c', 'nbf': 1718323051, 'csrf': '474820d3-8344-4e66-b890-7faaadd95e85', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': '61e0591f-3570-4c07-8215-81866051b0cc', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6c', 'nbf': 1718323051, 'csrf': '474820d3-8344-4e66-b890-7faaadd95e85', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': '61e0591f-3570-4c07-8215-81866051b0cc', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6c', 'nbf': 1718323051, 'csrf': '474820d3-8344-4e66-b890-7faaadd95e85', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': '61e0591f-3570-4c07-8215-81866051b0cc', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6c', 'nbf': 1718323051, 'csrf': '474820d3-8344-4e66-b890-7faaadd95e85', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': '61e0591f-3570-4c07-8215-81866051b0cc', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6c', 'nbf': 1718323051, 'csrf': '474820d3-8344-4e66-b890-7faaadd95e85', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': 'e58fbf58-9132-48f7-81a2-cc1e129d547a', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6e', 'nbf': 1718323051, 'csrf': 'e359cda8-ddcc-4f79-b248-9f8965173c4f', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': 'e58fbf58-9132-48f7-81a2-cc1e129d547a', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6e', 'nbf': 1718323051, 'csrf': 'e359cda8-ddcc-4f79-b248-9f8965173c4f', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': 'e58fbf58-9132-48f7-81a2-cc1e129d547a', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6e', 'nbf': 1718323051, 'csrf': 'e359cda8-ddcc-4f79-b248-9f8965173c4f', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': 'e58fbf58-9132-48f7-81a2-cc1e129d547a', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6e', 'nbf': 1718323051, 'csrf': 'e359cda8-ddcc-4f79-b248-9f8965173c4f', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': 'e58fbf58-9132-48f7-81a2-cc1e129d547a', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6e', 'nbf': 1718323051, 'csrf': 'e359cda8-ddcc-4f79-b248-9f8965173c4f', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': 'e58fbf58-9132-48f7-81a2-cc1e129d547a', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf6e', 'nbf': 1718323051, 'csrf': 'e359cda8-ddcc-4f79-b248-9f8965173c4f', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': '948972b2-ebe8-46ac-8719-6b798bb56095', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf70', 'nbf': 1718323051, 'csrf': '00d4e4de-9194-4f58-8de7-abd7caa2a357', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323051, 'jti': '88428fb7-2402-440f-a45e-1847c30cc06d', 'type': 'access', 'sub': '666b876bbfb483bb13ebdf72', 'nbf': 1718323051, 'csrf': 'da4e69bf-6018-4d54-b0f5-4170a108f685', 'exp': 1718323951}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323083, 'jti': 'd9577367-dbef-4b9a-bb75-b3e73837cb3f', 'type': 'access', 'sub': '666b878bdd07079083d46d9a', 'nbf': 1718323083, 'csrf': 'f3eae3e8-846f-4650-ad42-3011b2627bb7', 'exp': 1718323983}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323083, 'jti': 'e2284367-b14a-47eb-9b92-d89f1afa32e7', 'type': 'access', 'sub': '666b878bdd07079083d46d9c', 'nbf': 1718323083, 'csrf': 'ece21bf2-d8b2-4de1-b6b7-74d2328ac996', 'exp': 1718323983}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': 'a07f09f0-b09c-4a9e-9efc-d70dd31df871', 'type': 'access', 'sub': '666b878cdd07079083d46d9e', 'nbf': 1718323084, 'csrf': 'faf78bbf-d16d-472d-8870-214fdd144060', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '4f7df2f8-e663-43da-b0db-990aa67f7998', 'type': 'access', 'sub': '666b878cdd07079083d46da0', 'nbf': 1718323084, 'csrf': '610653fc-90e6-41a6-be83-3af479d2d118', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '4f7df2f8-e663-43da-b0db-990aa67f7998', 'type': 'access', 'sub': '666b878cdd07079083d46da0', 'nbf': 1718323084, 'csrf': '610653fc-90e6-41a6-be83-3af479d2d118', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '4f7df2f8-e663-43da-b0db-990aa67f7998', 'type': 'access', 'sub': '666b878cdd07079083d46da0', 'nbf': 1718323084, 'csrf': '610653fc-90e6-41a6-be83-3af479d2d118', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '4f7df2f8-e663-43da-b0db-990aa67f7998', 'type': 'access', 'sub': '666b878cdd07079083d46da0', 'nbf': 1718323084, 'csrf': '610653fc-90e6-41a6-be83-3af479d2d118', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '4f7df2f8-e663-43da-b0db-990aa67f7998', 'type': 'access', 'sub': '666b878cdd07079083d46da0', 'nbf': 1718323084, 'csrf': '610653fc-90e6-41a6-be83-3af479d2d118', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '4f7df2f8-e663-43da-b0db-990aa67f7998', 'type': 'access', 'sub': '666b878cdd07079083d46da0', 'nbf': 1718323084, 'csrf': '610653fc-90e6-41a6-be83-3af479d2d118', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '8eb416a3-61f0-44ad-b8bf-af8195611b0b', 'type': 'access', 'sub': '666b878cdd07079083d46da2', 'nbf': 1718323084, 'csrf': '045f31c2-7e14-44ad-90bd-696e5de52a21', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '8eb416a3-61f0-44ad-b8bf-af8195611b0b', 'type': 'access', 'sub': '666b878cdd07079083d46da2', 'nbf': 1718323084, 'csrf': '045f31c2-7e14-44ad-90bd-696e5de52a21', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '8eb416a3-61f0-44ad-b8bf-af8195611b0b', 'type': 'access', 'sub': '666b878cdd07079083d46da2', 'nbf': 1718323084, 'csrf': '045f31c2-7e14-44ad-90bd-696e5de52a21', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '8eb416a3-61f0-44ad-b8bf-af8195611b0b', 'type': 'access', 'sub': '666b878cdd07079083d46da2', 'nbf': 1718323084, 'csrf': '045f31c2-7e14-44ad-90bd-696e5de52a21', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '8eb416a3-61f0-44ad-b8bf-af8195611b0b', 'type': 'access', 'sub': '666b878cdd07079083d46da2', 'nbf': 1718323084, 'csrf': '045f31c2-7e14-44ad-90bd-696e5de52a21', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '8eb416a3-61f0-44ad-b8bf-af8195611b0b', 'type': 'access', 'sub': '666b878cdd07079083d46da2', 'nbf': 1718323084, 'csrf': '045f31c2-7e14-44ad-90bd-696e5de52a21', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': '12afe7a8-9c0b-41e2-b4d8-29e4cf19952a', 'type': 'access', 'sub': '666b878cdd07079083d46da4', 'nbf': 1718323084, 'csrf': '62a7e4b5-b7de-4820-81a6-09baea3e63ee', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323084, 'jti': 'ce3dcb82-2e61-4f60-ac98-9f81bd455e77', 'type': 'access', 'sub': '666b878cdd07079083d46da6', 'nbf': 1718323084, 'csrf': '754e7e31-e048-493b-88b7-abe4998d3360', 'exp': 1718323984}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323116, 'jti': '429bad90-b614-4898-8302-3d1c5bd10216', 'type': 'access', 'sub': '666b87ac7bacbd634166dc28', 'nbf': 1718323116, 'csrf': 'ac46205d-aeca-48cd-8b01-ed3cc4f2863a', 'exp': 1718324016}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
ERROR:app.extensions:'User' object is not subscriptable
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user[invalid_key]:
                                                                     ~~~~^^^^^^^^^^^^^
TypeError: 'User' object is not subscriptable
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323117, 'jti': 'd91113a8-f7fa-4fb9-8b10-686647d5f340', 'type': 'access', 'sub': '666b87ad7bacbd634166dc2a', 'nbf': 1718323117, 'csrf': '9c03ff90-95c8-401e-b964-9f2b05f91eae', 'exp': 1718324017}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
ERROR:app.extensions:'User' object is not subscriptable
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user[invalid_key]:
                                                                     ~~~~^^^^^^^^^^^^^
TypeError: 'User' object is not subscriptable
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323117, 'jti': '61b2674d-2410-4ce0-9c96-f878d142b574', 'type': 'access', 'sub': '666b87ad7bacbd634166dc2c', 'nbf': 1718323117, 'csrf': '6a873c89-001f-4b61-936c-21502fc9be2f', 'exp': 1718324017}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:'User' object is not subscriptable
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user[invalid_key]:
                                                                     ~~~~^^^^^^^^^^^^^
TypeError: 'User' object is not subscriptable
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323117, 'jti': 'fed0c09b-e2ec-4b9f-9768-c97385bc2fb0', 'type': 'access', 'sub': '666b87ad7bacbd634166dc2e', 'nbf': 1718323117, 'csrf': 'b49e416a-d5e2-4034-b972-b8794deaf266', 'exp': 1718324017}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:'User' object is not subscriptable
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user[invalid_key]:
                                                                     ~~~~^^^^^^^^^^^^^
TypeError: 'User' object is not subscriptable
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323117, 'jti': 'd4b76793-f316-4014-9e73-aa32f82decbc', 'type': 'access', 'sub': '666b87ad7bacbd634166dc30', 'nbf': 1718323117, 'csrf': 'dd4efb8b-74cc-4aca-a252-70770363ab2f', 'exp': 1718324017}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:'User' object is not subscriptable
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user[invalid_key]:
                                                                     ~~~~^^^^^^^^^^^^^
TypeError: 'User' object is not subscriptable
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323117, 'jti': '2974273d-6485-4c89-9ad8-7d0b369fdd2e', 'type': 'access', 'sub': '666b87ad7bacbd634166dc32', 'nbf': 1718323117, 'csrf': '5a5d1c2e-954d-4251-bf91-3f88fed184f7', 'exp': 1718324017}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:'User' object is not subscriptable
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user[invalid_key]:
                                                                     ~~~~^^^^^^^^^^^^^
TypeError: 'User' object is not subscriptable
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323117, 'jti': 'e3fb7b69-b363-40e6-8af2-0687e3d89017', 'type': 'access', 'sub': '666b87ad7bacbd634166dc34', 'nbf': 1718323117, 'csrf': '67096bd8-cfcc-4915-8370-1170a6c28338', 'exp': 1718324017}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:'User' object is not subscriptable
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user[invalid_key]:
                                                                     ~~~~^^^^^^^^^^^^^
TypeError: 'User' object is not subscriptable
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323141, 'jti': '0c91ad9a-ca03-47c8-be72-0116fa5896eb', 'type': 'access', 'sub': '666b87c5998bcf487b4db36d', 'nbf': 1718323141, 'csrf': '73d8fdfe-8650-4964-8faa-40345a20c281', 'exp': 1718324041}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
ERROR:app.extensions:'User' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user.get(invalid_key):
                                                                     ^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'get'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323141, 'jti': '9231827c-9296-4693-a30f-76c47bfafac9', 'type': 'access', 'sub': '666b87c5998bcf487b4db36f', 'nbf': 1718323141, 'csrf': '9eaac42d-30d4-4266-9c3b-0ac233190fc5', 'exp': 1718324041}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
ERROR:app.extensions:'User' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user.get(invalid_key):
                                                                     ^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'get'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323141, 'jti': 'e96b1c57-ffd4-4904-9d43-fdd970355d6e', 'type': 'access', 'sub': '666b87c5998bcf487b4db371', 'nbf': 1718323141, 'csrf': '0b2893a6-0d61-4072-a07f-25b9560594ed', 'exp': 1718324041}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:'User' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user.get(invalid_key):
                                                                     ^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'get'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323141, 'jti': '39166dd7-82e3-4920-a1d3-d715409aa87b', 'type': 'access', 'sub': '666b87c5998bcf487b4db373', 'nbf': 1718323141, 'csrf': 'f505955c-1ac2-42a8-94e7-e29b7113af53', 'exp': 1718324041}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:'User' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user.get(invalid_key):
                                                                     ^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'get'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323141, 'jti': '86d9f942-2d3e-48aa-8d06-ee20f0e5ea6f', 'type': 'access', 'sub': '666b87c5998bcf487b4db375', 'nbf': 1718323141, 'csrf': 'c7cfca73-ac78-4b87-b137-2f4273f6cac5', 'exp': 1718324041}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:'User' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user.get(invalid_key):
                                                                     ^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'get'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323141, 'jti': '73e9d6c0-ea8c-4834-b5f6-25d0ac5f70fa', 'type': 'access', 'sub': '666b87c5998bcf487b4db377', 'nbf': 1718323141, 'csrf': '3bdbea1e-e991-4d12-ba81-d9531bbfdf07', 'exp': 1718324041}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:'User' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user.get(invalid_key):
                                                                     ^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'get'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323141, 'jti': '60217ec1-0768-47e1-b9cc-98bed24ca051', 'type': 'access', 'sub': '666b87c5998bcf487b4db379', 'nbf': 1718323141, 'csrf': '4caeceb1-1a2b-4e1a-a7dc-ca469eec01bb', 'exp': 1718324041}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:'User' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 28, in update_user
    if invalid_key in user_data.keys() and user_data[invalid_key] != user.get(invalid_key):
                                                                     ^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 761, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'User' object has no attribute 'get'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323184, 'jti': 'f902a734-0d77-4344-9ab1-678914b1a1ec', 'type': 'access', 'sub': '666b87f01dbb4e97b9832209', 'nbf': 1718323184, 'csrf': 'ce479eea-5e52-4c3e-94f4-69489d3324ce', 'exp': 1718324084}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323184, 'jti': '9accfae6-b6bf-4b9f-9c14-34007af36b84', 'type': 'access', 'sub': '666b87f01dbb4e97b983220b', 'nbf': 1718323184, 'csrf': '06124fcf-a790-4663-9681-26ed85b9c935', 'exp': 1718324084}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323184, 'jti': '82ab1fe4-5f06-4c4d-9784-2c8b6b47f0f0', 'type': 'access', 'sub': '666b87f01dbb4e97b983220d', 'nbf': 1718323184, 'csrf': 'f349870f-cc14-4af0-a60b-ea6d886ec24d', 'exp': 1718324084}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323184, 'jti': '105e0487-2fa8-41b2-bfb0-9e3f1d77ad01', 'type': 'access', 'sub': '666b87f01dbb4e97b983220f', 'nbf': 1718323184, 'csrf': 'ee73ac6f-573e-484d-b2d1-18533276a8a8', 'exp': 1718324084}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323184, 'jti': '105e0487-2fa8-41b2-bfb0-9e3f1d77ad01', 'type': 'access', 'sub': '666b87f01dbb4e97b983220f', 'nbf': 1718323184, 'csrf': 'ee73ac6f-573e-484d-b2d1-18533276a8a8', 'exp': 1718324084}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323184, 'jti': '105e0487-2fa8-41b2-bfb0-9e3f1d77ad01', 'type': 'access', 'sub': '666b87f01dbb4e97b983220f', 'nbf': 1718323184, 'csrf': 'ee73ac6f-573e-484d-b2d1-18533276a8a8', 'exp': 1718324084}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323184, 'jti': '105e0487-2fa8-41b2-bfb0-9e3f1d77ad01', 'type': 'access', 'sub': '666b87f01dbb4e97b983220f', 'nbf': 1718323184, 'csrf': 'ee73ac6f-573e-484d-b2d1-18533276a8a8', 'exp': 1718324084}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323184, 'jti': '105e0487-2fa8-41b2-bfb0-9e3f1d77ad01', 'type': 'access', 'sub': '666b87f01dbb4e97b983220f', 'nbf': 1718323184, 'csrf': 'ee73ac6f-573e-484d-b2d1-18533276a8a8', 'exp': 1718324084}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323184, 'jti': '105e0487-2fa8-41b2-bfb0-9e3f1d77ad01', 'type': 'access', 'sub': '666b87f01dbb4e97b983220f', 'nbf': 1718323184, 'csrf': 'ee73ac6f-573e-484d-b2d1-18533276a8a8', 'exp': 1718324084}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323185, 'jti': '9cc89e3d-4184-4225-a2e3-ca9d8ee1ff4c', 'type': 'access', 'sub': '666b87f11dbb4e97b9832211', 'nbf': 1718323185, 'csrf': 'bbf9121c-57a8-4cfe-acd1-026338097b42', 'exp': 1718324085}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323185, 'jti': '9cc89e3d-4184-4225-a2e3-ca9d8ee1ff4c', 'type': 'access', 'sub': '666b87f11dbb4e97b9832211', 'nbf': 1718323185, 'csrf': 'bbf9121c-57a8-4cfe-acd1-026338097b42', 'exp': 1718324085}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323185, 'jti': '9cc89e3d-4184-4225-a2e3-ca9d8ee1ff4c', 'type': 'access', 'sub': '666b87f11dbb4e97b9832211', 'nbf': 1718323185, 'csrf': 'bbf9121c-57a8-4cfe-acd1-026338097b42', 'exp': 1718324085}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323185, 'jti': '9cc89e3d-4184-4225-a2e3-ca9d8ee1ff4c', 'type': 'access', 'sub': '666b87f11dbb4e97b9832211', 'nbf': 1718323185, 'csrf': 'bbf9121c-57a8-4cfe-acd1-026338097b42', 'exp': 1718324085}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323185, 'jti': '9cc89e3d-4184-4225-a2e3-ca9d8ee1ff4c', 'type': 'access', 'sub': '666b87f11dbb4e97b9832211', 'nbf': 1718323185, 'csrf': 'bbf9121c-57a8-4cfe-acd1-026338097b42', 'exp': 1718324085}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323185, 'jti': '9cc89e3d-4184-4225-a2e3-ca9d8ee1ff4c', 'type': 'access', 'sub': '666b87f11dbb4e97b9832211', 'nbf': 1718323185, 'csrf': 'bbf9121c-57a8-4cfe-acd1-026338097b42', 'exp': 1718324085}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323186, 'jti': 'f7ca1606-a568-4953-864e-dd5bde0193b9', 'type': 'access', 'sub': '666b87f21dbb4e97b9832213', 'nbf': 1718323186, 'csrf': '922e1778-ef29-470f-bab4-449751a274a4', 'exp': 1718324086}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323186, 'jti': '272bc030-004c-40df-bad0-77459cdfbde8', 'type': 'access', 'sub': '666b87f21dbb4e97b9832215', 'nbf': 1718323186, 'csrf': '4f36fe03-a8ee-4eac-837d-8b3a0d8dda89', 'exp': 1718324086}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323192, 'jti': '9aee371e-1679-4ddf-9b89-88081edde2ee', 'type': 'access', 'sub': '666b87f845e12db2d8d3d17d', 'nbf': 1718323192, 'csrf': '71eb0faa-4480-4435-9d23-ed46b573465f', 'exp': 1718324092}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b87f845e12db2d8d3d17d') email='test@test.com' password='__hash__scrypt:32768:8:1$OkJsaJ1PFlev2hB6$44fbab54f1e852377e7dab005333a099e13d26cc78ed0e25cd8d186522680bf754ee3f17daee2d8b94fdcddce9460e46824cebbbd0fec50c4abfb308f2b7dd8e' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323192, 'jti': '7f42b0d1-cd28-43f1-b2d7-25e37b771f54', 'type': 'access', 'sub': '666b87f845e12db2d8d3d182', 'nbf': 1718323192, 'csrf': '37263f56-eddc-4b30-aa7c-55c55ba8c29c', 'exp': 1718324092}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b87f845e12db2d8d3d182') email='test@test.com' password='__hash__scrypt:32768:8:1$q0iVv3mJokFlYxxF$749619e64a43694c5dea3e84bc5eaeeb2e19b4ed7c3ef28c34a1aea9e67cd2731dcac711342ec5e013756d0877f5385e44dfc43f03163b513186676343bda664' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323192, 'jti': 'a12a902d-b880-41b7-b30d-d1b2e94cbe3e', 'type': 'access', 'sub': '666b87f845e12db2d8d3d185', 'nbf': 1718323192, 'csrf': '5ecd7f53-f641-40ee-983d-0cc791f1e11e', 'exp': 1718324092}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b87f845e12db2d8d3d185') email='test@test.com' password='__hash__scrypt:32768:8:1$5SWL3KAvBfD95kUp$e0a7d1dd15c8b90c953e82da6aaf0bc5e7a2fba1bdccebce54c7987d0a2bd7616b5aaebd4235c3c093400e1bbc1ba5736df18118a2e490c31d109030f2699cf1' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 55, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323193, 'jti': 'cbe717b5-1a09-4562-81fa-0bc94fed90ce', 'type': 'access', 'sub': '666b87f945e12db2d8d3d195', 'nbf': 1718323193, 'csrf': '6d3de469-4de6-46d8-a958-59e879ed8045', 'exp': 1718324093}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323193, 'jti': '533ec987-145c-4678-bf48-41116671ff6b', 'type': 'access', 'sub': '666b87f945e12db2d8d3d197', 'nbf': 1718323193, 'csrf': '262582bf-1cbf-495d-8e9c-6e3aba6278cc', 'exp': 1718324093}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': '38265d41-d9dd-44e7-aa1c-f906269cff3e', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d199', 'nbf': 1718323194, 'csrf': '0cd35432-3415-494f-a182-6f7c8c4baf89', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': '6e044c67-6f44-4ae8-b63b-9797e18f7488', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19b', 'nbf': 1718323194, 'csrf': '0fe4124f-4b2b-4140-bab6-35f3cd38603c', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': '6e044c67-6f44-4ae8-b63b-9797e18f7488', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19b', 'nbf': 1718323194, 'csrf': '0fe4124f-4b2b-4140-bab6-35f3cd38603c', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': '6e044c67-6f44-4ae8-b63b-9797e18f7488', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19b', 'nbf': 1718323194, 'csrf': '0fe4124f-4b2b-4140-bab6-35f3cd38603c', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': '6e044c67-6f44-4ae8-b63b-9797e18f7488', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19b', 'nbf': 1718323194, 'csrf': '0fe4124f-4b2b-4140-bab6-35f3cd38603c', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': '6e044c67-6f44-4ae8-b63b-9797e18f7488', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19b', 'nbf': 1718323194, 'csrf': '0fe4124f-4b2b-4140-bab6-35f3cd38603c', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': '6e044c67-6f44-4ae8-b63b-9797e18f7488', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19b', 'nbf': 1718323194, 'csrf': '0fe4124f-4b2b-4140-bab6-35f3cd38603c', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': 'e6b02123-fef9-4884-8d0b-60fa516753d0', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19d', 'nbf': 1718323194, 'csrf': '3c4d97c9-d6bb-42fe-9727-d907803cbe5e', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': 'e6b02123-fef9-4884-8d0b-60fa516753d0', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19d', 'nbf': 1718323194, 'csrf': '3c4d97c9-d6bb-42fe-9727-d907803cbe5e', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': 'e6b02123-fef9-4884-8d0b-60fa516753d0', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19d', 'nbf': 1718323194, 'csrf': '3c4d97c9-d6bb-42fe-9727-d907803cbe5e', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': 'e6b02123-fef9-4884-8d0b-60fa516753d0', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19d', 'nbf': 1718323194, 'csrf': '3c4d97c9-d6bb-42fe-9727-d907803cbe5e', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': 'e6b02123-fef9-4884-8d0b-60fa516753d0', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19d', 'nbf': 1718323194, 'csrf': '3c4d97c9-d6bb-42fe-9727-d907803cbe5e', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323194, 'jti': 'e6b02123-fef9-4884-8d0b-60fa516753d0', 'type': 'access', 'sub': '666b87fa45e12db2d8d3d19d', 'nbf': 1718323194, 'csrf': '3c4d97c9-d6bb-42fe-9727-d907803cbe5e', 'exp': 1718324094}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323195, 'jti': 'f7e8b5b5-6cb0-4b88-9846-186a6054c8b5', 'type': 'access', 'sub': '666b87fb45e12db2d8d3d19f', 'nbf': 1718323195, 'csrf': '7c8d69fb-cf4b-4f18-9843-3ce107a75c3b', 'exp': 1718324095}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323195, 'jti': '973a9584-f1f3-4b3a-ab67-e6684f94345f', 'type': 'access', 'sub': '666b87fb45e12db2d8d3d1a1', 'nbf': 1718323195, 'csrf': '24d924de-e49f-4afe-8951-6fa7998a0dfe', 'exp': 1718324095}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323532, 'jti': 'f02a5179-9a15-4465-ac8d-ec69b2df287a', 'type': 'access', 'sub': '666b894c0ee7865be1d299d3', 'nbf': 1718323532, 'csrf': '5c0e5f79-e3fc-4dd0-959f-db058f693c66', 'exp': 1718324432}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b894c0ee7865be1d299d3') email='test@test.com' password='__hash__scrypt:32768:8:1$5BrsZ9MKnSaLdSYn$51dec77ec9cc6eb62dc09a63812db3eed0f742b616324c6e6d6f4292d845a381537c50ef0ed293e257cf18c62a6545f196b0213d3901a8e5013a264b70f29e2a' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323532, 'jti': '37e41a69-d26b-422a-8ae8-aa89865da7a6', 'type': 'access', 'sub': '666b894c0ee7865be1d299d8', 'nbf': 1718323532, 'csrf': 'becf907a-17f9-4e04-b69b-2c24c33f2493', 'exp': 1718324432}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b894c0ee7865be1d299d8') email='test@test.com' password='__hash__scrypt:32768:8:1$MJTHY0WsW31AWh89$e84407356e89814bb5735549e528b93c86629ee170d19f5a6a067c419f37a23dd742e16e14ee4e2bdb28d431d8cda80d9caa1f03f157e060cf729eb874d50b8c' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323532, 'jti': 'bde6ab99-69c1-4484-a34b-a98d8eab6c71', 'type': 'access', 'sub': '666b894c0ee7865be1d299db', 'nbf': 1718323532, 'csrf': '80da426e-2259-4b0b-a300-be5ffa81aa70', 'exp': 1718324432}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b894c0ee7865be1d299db') email='test@test.com' password='__hash__scrypt:32768:8:1$r14vCEi6rGJd3aIi$33fced0eb07bd4ff980d49e775440c57f9e6c53df01bbcf9f32ae465f0565e9a2de405b0c7ce218eb4b6d2afb2d0e4e61eadf83074ea2ea8c193371940f4bfd3' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 55, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323534, 'jti': '65d82550-5bb0-40a4-9f48-0bf86da4355a', 'type': 'access', 'sub': '666b894e0ee7865be1d299ee', 'nbf': 1718323534, 'csrf': '48f35be4-815d-4f0a-9113-5fd60156b616', 'exp': 1718324434}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323534, 'jti': '47cfb056-dc45-47a2-b6f1-f5b2b9624886', 'type': 'access', 'sub': '666b894e0ee7865be1d299f0', 'nbf': 1718323534, 'csrf': '4797ee92-6ba2-4ab7-8259-9c6735910506', 'exp': 1718324434}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323534, 'jti': '2bdad762-9f0e-49d4-abfa-bb411683640c', 'type': 'access', 'sub': '666b894e0ee7865be1d299f2', 'nbf': 1718323534, 'csrf': 'c7ad7619-c3cc-44fb-970a-aaad755df987', 'exp': 1718324434}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323534, 'jti': '1b70e823-5998-4d3e-a8ca-95d56d56020a', 'type': 'access', 'sub': '666b894e0ee7865be1d299f4', 'nbf': 1718323534, 'csrf': '37ea711c-ac8e-44ca-9141-e389d5631d9c', 'exp': 1718324434}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323534, 'jti': '1b70e823-5998-4d3e-a8ca-95d56d56020a', 'type': 'access', 'sub': '666b894e0ee7865be1d299f4', 'nbf': 1718323534, 'csrf': '37ea711c-ac8e-44ca-9141-e389d5631d9c', 'exp': 1718324434}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323534, 'jti': '1b70e823-5998-4d3e-a8ca-95d56d56020a', 'type': 'access', 'sub': '666b894e0ee7865be1d299f4', 'nbf': 1718323534, 'csrf': '37ea711c-ac8e-44ca-9141-e389d5631d9c', 'exp': 1718324434}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323534, 'jti': '1b70e823-5998-4d3e-a8ca-95d56d56020a', 'type': 'access', 'sub': '666b894e0ee7865be1d299f4', 'nbf': 1718323534, 'csrf': '37ea711c-ac8e-44ca-9141-e389d5631d9c', 'exp': 1718324434}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323534, 'jti': '1b70e823-5998-4d3e-a8ca-95d56d56020a', 'type': 'access', 'sub': '666b894e0ee7865be1d299f4', 'nbf': 1718323534, 'csrf': '37ea711c-ac8e-44ca-9141-e389d5631d9c', 'exp': 1718324434}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323534, 'jti': '1b70e823-5998-4d3e-a8ca-95d56d56020a', 'type': 'access', 'sub': '666b894e0ee7865be1d299f4', 'nbf': 1718323534, 'csrf': '37ea711c-ac8e-44ca-9141-e389d5631d9c', 'exp': 1718324434}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323535, 'jti': '904d9da4-6fbc-47d7-8036-f214ef776b1b', 'type': 'access', 'sub': '666b894f0ee7865be1d299f6', 'nbf': 1718323535, 'csrf': '13f4926e-7ee5-49dc-8d7d-f45df1b6ce4a', 'exp': 1718324435}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323535, 'jti': '904d9da4-6fbc-47d7-8036-f214ef776b1b', 'type': 'access', 'sub': '666b894f0ee7865be1d299f6', 'nbf': 1718323535, 'csrf': '13f4926e-7ee5-49dc-8d7d-f45df1b6ce4a', 'exp': 1718324435}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323535, 'jti': '904d9da4-6fbc-47d7-8036-f214ef776b1b', 'type': 'access', 'sub': '666b894f0ee7865be1d299f6', 'nbf': 1718323535, 'csrf': '13f4926e-7ee5-49dc-8d7d-f45df1b6ce4a', 'exp': 1718324435}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323535, 'jti': '904d9da4-6fbc-47d7-8036-f214ef776b1b', 'type': 'access', 'sub': '666b894f0ee7865be1d299f6', 'nbf': 1718323535, 'csrf': '13f4926e-7ee5-49dc-8d7d-f45df1b6ce4a', 'exp': 1718324435}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323535, 'jti': '904d9da4-6fbc-47d7-8036-f214ef776b1b', 'type': 'access', 'sub': '666b894f0ee7865be1d299f6', 'nbf': 1718323535, 'csrf': '13f4926e-7ee5-49dc-8d7d-f45df1b6ce4a', 'exp': 1718324435}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323535, 'jti': '904d9da4-6fbc-47d7-8036-f214ef776b1b', 'type': 'access', 'sub': '666b894f0ee7865be1d299f6', 'nbf': 1718323535, 'csrf': '13f4926e-7ee5-49dc-8d7d-f45df1b6ce4a', 'exp': 1718324435}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323536, 'jti': 'c2c91c6d-82d1-42cb-a28d-7d714a8b304d', 'type': 'access', 'sub': '666b89500ee7865be1d299f8', 'nbf': 1718323536, 'csrf': 'e6dc824e-6a65-4088-b18b-de8615efefc4', 'exp': 1718324436}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323536, 'jti': 'd218e0cf-7358-43e4-b3ca-6ef376069639', 'type': 'access', 'sub': '666b89500ee7865be1d299fa', 'nbf': 1718323536, 'csrf': 'dec33bda-242a-42fc-9b93-fc3e19a7dff3', 'exp': 1718324436}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323577, 'jti': '9b4c0ce7-601e-49d5-aa3a-3bbc1e9fb5d4', 'type': 'access', 'sub': '666b8979dbe4265f7ad8d05f', 'nbf': 1718323577, 'csrf': '8a6928b4-5c4b-4d98-a0c1-6f67bd4d812e', 'exp': 1718324477}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8979dbe4265f7ad8d05f') email='test@test.com' password='__hash__scrypt:32768:8:1$PgTcTMK7ImDSW9YV$430641032155aa495c64ff6d9e37b4d32a5cff025a83162ae7a9ad5e45a72905e80b97b9223e1b4fe9b46f21f5957c8f94c5ac1fe2f723b8c9c292d43a913b99' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323578, 'jti': '9dd1ab13-0371-43bd-bc26-8e45cc493a0c', 'type': 'access', 'sub': '666b897adbe4265f7ad8d064', 'nbf': 1718323578, 'csrf': '96521699-f900-415e-a54d-75504c22f9de', 'exp': 1718324478}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b897adbe4265f7ad8d064') email='test@test.com' password='__hash__scrypt:32768:8:1$FvaHJ9TGUYLtaUEs$1d074bddb497ff6566fd5a24278277d4266fbca53916ce1b24896b6d7f4b5dd4f6524ac4f0cfe037fb5ad20ef0e268e7ea6533e1e4874bdbefbb368e0eab7c27' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323578, 'jti': 'ce5437c7-27ca-4ea1-9d81-11f8d2041fe2', 'type': 'access', 'sub': '666b897adbe4265f7ad8d067', 'nbf': 1718323578, 'csrf': 'bca62564-950c-4119-9932-a56154643f13', 'exp': 1718324478}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b897adbe4265f7ad8d067') email='test@test.com' password='__hash__scrypt:32768:8:1$wqi5tXaFYr4gdRLT$79b00014219ed593056816407dfb4b0568ebafac36fbd5df51341ad3e2a19a48726b0105cfc4059ca626dd68495fcd83e8a4c2177bfe65483c5b9d214848c7e9' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:Registering user
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:Registering user
INFO:app.extensions:Registering user
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323579, 'jti': '71d5730d-1645-4a5f-b1d3-93705220a88b', 'type': 'access', 'sub': '666b897bdbe4265f7ad8d076', 'nbf': 1718323579, 'csrf': 'a33ddc2a-c375-4711-a79e-a9dabbc430d7', 'exp': 1718324479}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323579, 'jti': '24cbbbe6-fcd4-4a14-871d-96c8e34f6f40', 'type': 'access', 'sub': '666b897bdbe4265f7ad8d078', 'nbf': 1718323579, 'csrf': '67133ca8-5031-4114-b3b4-d3fd26386cc8', 'exp': 1718324479}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323579, 'jti': '3732a80e-db34-43f0-8d8b-496d7ba10d5d', 'type': 'access', 'sub': '666b897bdbe4265f7ad8d07a', 'nbf': 1718323579, 'csrf': '735104d1-6885-4c3f-8ce1-85016bb93831', 'exp': 1718324479}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323579, 'jti': '443a42d6-8ad7-43ab-8e5a-165f0921d7b0', 'type': 'access', 'sub': '666b897bdbe4265f7ad8d07c', 'nbf': 1718323579, 'csrf': 'cd3d012c-0848-4df6-a9fd-1023bb768542', 'exp': 1718324479}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': '7945b259-b2b4-409b-b0d9-73945b5ae1d3', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d07e', 'nbf': 1718323580, 'csrf': 'fb425e70-106c-4d3e-9ce2-cd1d4021a6cb', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': 'dc053828-5952-4e7c-8993-826ac110fcc0', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d080', 'nbf': 1718323580, 'csrf': '51fdc6c3-986a-4a90-9e7a-e3eeb35f4c66', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': 'dc053828-5952-4e7c-8993-826ac110fcc0', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d080', 'nbf': 1718323580, 'csrf': '51fdc6c3-986a-4a90-9e7a-e3eeb35f4c66', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': 'dc053828-5952-4e7c-8993-826ac110fcc0', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d080', 'nbf': 1718323580, 'csrf': '51fdc6c3-986a-4a90-9e7a-e3eeb35f4c66', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': 'dc053828-5952-4e7c-8993-826ac110fcc0', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d080', 'nbf': 1718323580, 'csrf': '51fdc6c3-986a-4a90-9e7a-e3eeb35f4c66', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': 'dc053828-5952-4e7c-8993-826ac110fcc0', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d080', 'nbf': 1718323580, 'csrf': '51fdc6c3-986a-4a90-9e7a-e3eeb35f4c66', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': 'dc053828-5952-4e7c-8993-826ac110fcc0', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d080', 'nbf': 1718323580, 'csrf': '51fdc6c3-986a-4a90-9e7a-e3eeb35f4c66', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': '93754c0d-3911-4d9f-a56e-07b2b0eb2420', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d082', 'nbf': 1718323580, 'csrf': '9fb20f1e-f839-4c85-8045-f65ec36fc682', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': '93754c0d-3911-4d9f-a56e-07b2b0eb2420', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d082', 'nbf': 1718323580, 'csrf': '9fb20f1e-f839-4c85-8045-f65ec36fc682', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': '93754c0d-3911-4d9f-a56e-07b2b0eb2420', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d082', 'nbf': 1718323580, 'csrf': '9fb20f1e-f839-4c85-8045-f65ec36fc682', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': '93754c0d-3911-4d9f-a56e-07b2b0eb2420', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d082', 'nbf': 1718323580, 'csrf': '9fb20f1e-f839-4c85-8045-f65ec36fc682', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': '93754c0d-3911-4d9f-a56e-07b2b0eb2420', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d082', 'nbf': 1718323580, 'csrf': '9fb20f1e-f839-4c85-8045-f65ec36fc682', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323580, 'jti': '93754c0d-3911-4d9f-a56e-07b2b0eb2420', 'type': 'access', 'sub': '666b897cdbe4265f7ad8d082', 'nbf': 1718323580, 'csrf': '9fb20f1e-f839-4c85-8045-f65ec36fc682', 'exp': 1718324480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323581, 'jti': '90e7c19f-75cb-4ec4-9c3c-8a0b66fc77ca', 'type': 'access', 'sub': '666b897ddbe4265f7ad8d084', 'nbf': 1718323581, 'csrf': '9103d714-3868-4ebb-9822-12b082d05705', 'exp': 1718324481}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323581, 'jti': '977995aa-c709-4b9a-8d9c-17a806e0ce25', 'type': 'access', 'sub': '666b897ddbe4265f7ad8d086', 'nbf': 1718323581, 'csrf': '4d98b551-07e5-4d2b-bffa-a3bb85abb1ed', 'exp': 1718324481}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323728, 'jti': '9880db5d-3cf3-412a-a747-0758c1fb1c91', 'type': 'access', 'sub': '666b8a10b2186de16c8314bc', 'nbf': 1718323728, 'csrf': '5963d51d-42b0-4c3c-8d1b-9c1d3e5255a9', 'exp': 1718324628}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a10b2186de16c8314bc') email='test@test.com' password='__hash__scrypt:32768:8:1$rsbo14jtiUPhmebQ$b8b34b45d82eb1e73d4d2b45fac9ed77c4385684641aff4d5479f2366dae0764b584e48f015eff8eb6885a38f71a5a48d31a94a7af38c9258766bb330c4fc1b7' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323728, 'jti': '4e7baccc-a76b-46a3-86ab-326df6b08cec', 'type': 'access', 'sub': '666b8a10b2186de16c8314c1', 'nbf': 1718323728, 'csrf': '9ef1ae55-98eb-42c2-a2d3-5163381305fc', 'exp': 1718324628}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a10b2186de16c8314c1') email='test@test.com' password='__hash__scrypt:32768:8:1$57OCRmjm46cZInG8$1e1efdc091db811314b40284e4fcfdc6193bd8b82dbba342d535a2b77c7c9a866b1d179b9ccd615baa4fdd164041e7460c78c0f9f55746f5517e4607ce388279' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323728, 'jti': 'e7c8b12b-4882-4a37-a054-4ac0958c93a4', 'type': 'access', 'sub': '666b8a10b2186de16c8314c4', 'nbf': 1718323728, 'csrf': '8f9ff669-2260-4660-9dab-82f09abb5aad', 'exp': 1718324628}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a10b2186de16c8314c4') email='test@test.com' password='__hash__scrypt:32768:8:1$IaP77jc442JmptwN$e4f4ccdb88c0892a36e66f7c613df33247cd0ed664145be6189af2af38b6808e369d28eff472a14b45c6a3db047f3efdae3c17b093b0ac072260c835aa864f13' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323729, 'jti': '614ec82d-9a70-4cf9-bee9-32b5d95d99fc', 'type': 'access', 'sub': '666b8a11b2186de16c8314d3', 'nbf': 1718323729, 'csrf': '2310f3d7-b198-461b-84e3-5b0f8e999589', 'exp': 1718324629}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323729, 'jti': 'c703cd82-6d4b-4ca8-8fcd-a9dfeefe701e', 'type': 'access', 'sub': '666b8a11b2186de16c8314d5', 'nbf': 1718323729, 'csrf': '6b09a772-7c48-49be-9bca-e1cb280b5b57', 'exp': 1718324629}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323729, 'jti': '3696aa6e-773f-47a6-9aea-5d8ae0b45b9b', 'type': 'access', 'sub': '666b8a11b2186de16c8314d7', 'nbf': 1718323729, 'csrf': 'dece1ce9-f37b-4d61-9e99-6d949986af8d', 'exp': 1718324629}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': 'f7d42b9f-d811-42d7-8173-93ec6b436bac', 'type': 'access', 'sub': '666b8a12b2186de16c8314d9', 'nbf': 1718323730, 'csrf': '1b868335-14ea-48d8-9c7b-736ea439dceb', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': '49998151-d8f5-4bda-8f34-d7e9a1fb6f35', 'type': 'access', 'sub': '666b8a12b2186de16c8314db', 'nbf': 1718323730, 'csrf': '68923efe-5875-4d78-a4ef-9805164a407c', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': 'a3a28cc6-7b50-4ed6-b130-560cf5de2fcd', 'type': 'access', 'sub': '666b8a12b2186de16c8314dd', 'nbf': 1718323730, 'csrf': 'cd49775f-e57f-426a-97e0-a9c00af346f6', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': 'a3a28cc6-7b50-4ed6-b130-560cf5de2fcd', 'type': 'access', 'sub': '666b8a12b2186de16c8314dd', 'nbf': 1718323730, 'csrf': 'cd49775f-e57f-426a-97e0-a9c00af346f6', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': 'a3a28cc6-7b50-4ed6-b130-560cf5de2fcd', 'type': 'access', 'sub': '666b8a12b2186de16c8314dd', 'nbf': 1718323730, 'csrf': 'cd49775f-e57f-426a-97e0-a9c00af346f6', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': 'a3a28cc6-7b50-4ed6-b130-560cf5de2fcd', 'type': 'access', 'sub': '666b8a12b2186de16c8314dd', 'nbf': 1718323730, 'csrf': 'cd49775f-e57f-426a-97e0-a9c00af346f6', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': 'a3a28cc6-7b50-4ed6-b130-560cf5de2fcd', 'type': 'access', 'sub': '666b8a12b2186de16c8314dd', 'nbf': 1718323730, 'csrf': 'cd49775f-e57f-426a-97e0-a9c00af346f6', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': 'a3a28cc6-7b50-4ed6-b130-560cf5de2fcd', 'type': 'access', 'sub': '666b8a12b2186de16c8314dd', 'nbf': 1718323730, 'csrf': 'cd49775f-e57f-426a-97e0-a9c00af346f6', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': '31dec85a-81bb-4a87-9386-792cdf6744ad', 'type': 'access', 'sub': '666b8a12b2186de16c8314df', 'nbf': 1718323730, 'csrf': 'c5dc63e1-7668-4398-bf3e-30972bbf8032', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': '31dec85a-81bb-4a87-9386-792cdf6744ad', 'type': 'access', 'sub': '666b8a12b2186de16c8314df', 'nbf': 1718323730, 'csrf': 'c5dc63e1-7668-4398-bf3e-30972bbf8032', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': '31dec85a-81bb-4a87-9386-792cdf6744ad', 'type': 'access', 'sub': '666b8a12b2186de16c8314df', 'nbf': 1718323730, 'csrf': 'c5dc63e1-7668-4398-bf3e-30972bbf8032', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': '31dec85a-81bb-4a87-9386-792cdf6744ad', 'type': 'access', 'sub': '666b8a12b2186de16c8314df', 'nbf': 1718323730, 'csrf': 'c5dc63e1-7668-4398-bf3e-30972bbf8032', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': '31dec85a-81bb-4a87-9386-792cdf6744ad', 'type': 'access', 'sub': '666b8a12b2186de16c8314df', 'nbf': 1718323730, 'csrf': 'c5dc63e1-7668-4398-bf3e-30972bbf8032', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323730, 'jti': '31dec85a-81bb-4a87-9386-792cdf6744ad', 'type': 'access', 'sub': '666b8a12b2186de16c8314df', 'nbf': 1718323730, 'csrf': 'c5dc63e1-7668-4398-bf3e-30972bbf8032', 'exp': 1718324630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323731, 'jti': '06090e17-0156-49e3-8341-fa8853b04179', 'type': 'access', 'sub': '666b8a13b2186de16c8314e1', 'nbf': 1718323731, 'csrf': '00821f7a-a528-4784-ba02-c1bc5b9bc87b', 'exp': 1718324631}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323731, 'jti': '6b2cdcff-5fb4-4e45-9613-b8da3348a7bc', 'type': 'access', 'sub': '666b8a13b2186de16c8314e3', 'nbf': 1718323731, 'csrf': 'd654ea47-caf3-41dd-8bc1-292c846379d0', 'exp': 1718324631}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323750, 'jti': '4e9aaf5b-e7f8-4167-9b8e-68ad6a0a81f1', 'type': 'access', 'sub': '666b8a26378539955462f90b', 'nbf': 1718323750, 'csrf': '90ac578e-dd22-453f-9f30-9c3654bd42db', 'exp': 1718324650}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a26378539955462f90b') email='test@test.com' password='__hash__scrypt:32768:8:1$aKI8Fwu293W3oMNE$8a0d81cd60ba2950983fc5ace5849cf2000d4b55f0d61437102a82d4dd0d6940b7f644b4f419366c08f01be57dcdb55ea125fcaf9da14a5bade3828c24b927b8' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323750, 'jti': '4ee9575c-78fc-4248-894b-808fca04ce52', 'type': 'access', 'sub': '666b8a26378539955462f910', 'nbf': 1718323750, 'csrf': '1ffb1113-f73d-4dd8-9b8c-f7b8e6bce56e', 'exp': 1718324650}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a26378539955462f910') email='test@test.com' password='__hash__scrypt:32768:8:1$1vJ1vlsNW3mJe0fb$01c5d1bdf4d08e33ccd1ba78bf749cdbe1b2ba6a1616756a01c6855474641df551c91c0a1db37df9bf7666277cd297e21e91fc258c94c8e379a4fbf90556c812' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323750, 'jti': '2efa458e-0caa-456a-9f6e-4361d88f6fe0', 'type': 'access', 'sub': '666b8a26378539955462f913', 'nbf': 1718323750, 'csrf': '965e7fa9-b3c9-4623-8b72-5847d9c0c16c', 'exp': 1718324650}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a26378539955462f913') email='test@test.com' password='__hash__scrypt:32768:8:1$st3Ey2xfwNchYRMd$a52608589bb83b868973d795c46a5247532ba16636e8a19e472a70abe4448ad2d7bb8237800bb65e5a9d035a1c9cecba10e11b63cefc86a61f44890f43a7eb5d' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323751, 'jti': '0bb76c2b-7d40-4f16-bbbd-0b606d4b7288', 'type': 'access', 'sub': '666b8a27378539955462f922', 'nbf': 1718323751, 'csrf': '793fcb82-350a-462e-a28e-92783dd7cb03', 'exp': 1718324651}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323751, 'jti': '4af55b00-9df6-45f4-8983-c94694404a3d', 'type': 'access', 'sub': '666b8a27378539955462f924', 'nbf': 1718323751, 'csrf': '249f5e63-06c1-4f8b-b1e4-49eae0d53959', 'exp': 1718324651}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323751, 'jti': '306b54d6-df9a-4c4a-944e-be50c89d407c', 'type': 'access', 'sub': '666b8a27378539955462f926', 'nbf': 1718323751, 'csrf': '83c2575e-c74f-4342-8394-148f4fa5f051', 'exp': 1718324651}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323751, 'jti': '14c1eaf9-dcfc-4c1e-b58b-96d80470516c', 'type': 'access', 'sub': '666b8a27378539955462f928', 'nbf': 1718323751, 'csrf': '14c059d3-0f86-4ca4-a9d3-1b527125369d', 'exp': 1718324651}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': 'ef72fef3-2662-49bd-a84b-684707740967', 'type': 'access', 'sub': '666b8a28378539955462f92a', 'nbf': 1718323752, 'csrf': '298cea82-907f-423e-bb35-2e0172b69dfd', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': '77fff9ee-c165-4506-af16-b9ed2abf4226', 'type': 'access', 'sub': '666b8a28378539955462f92c', 'nbf': 1718323752, 'csrf': '8f526604-f444-4800-a11b-2c942d7b4b7f', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': '77fff9ee-c165-4506-af16-b9ed2abf4226', 'type': 'access', 'sub': '666b8a28378539955462f92c', 'nbf': 1718323752, 'csrf': '8f526604-f444-4800-a11b-2c942d7b4b7f', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': '77fff9ee-c165-4506-af16-b9ed2abf4226', 'type': 'access', 'sub': '666b8a28378539955462f92c', 'nbf': 1718323752, 'csrf': '8f526604-f444-4800-a11b-2c942d7b4b7f', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': '77fff9ee-c165-4506-af16-b9ed2abf4226', 'type': 'access', 'sub': '666b8a28378539955462f92c', 'nbf': 1718323752, 'csrf': '8f526604-f444-4800-a11b-2c942d7b4b7f', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': '77fff9ee-c165-4506-af16-b9ed2abf4226', 'type': 'access', 'sub': '666b8a28378539955462f92c', 'nbf': 1718323752, 'csrf': '8f526604-f444-4800-a11b-2c942d7b4b7f', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': '77fff9ee-c165-4506-af16-b9ed2abf4226', 'type': 'access', 'sub': '666b8a28378539955462f92c', 'nbf': 1718323752, 'csrf': '8f526604-f444-4800-a11b-2c942d7b4b7f', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': 'c261ca05-6ecd-4285-a673-85f63363c2d1', 'type': 'access', 'sub': '666b8a28378539955462f92e', 'nbf': 1718323752, 'csrf': '85d9cbc8-4a5b-4033-bc50-29d47f57c0de', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': 'c261ca05-6ecd-4285-a673-85f63363c2d1', 'type': 'access', 'sub': '666b8a28378539955462f92e', 'nbf': 1718323752, 'csrf': '85d9cbc8-4a5b-4033-bc50-29d47f57c0de', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': 'c261ca05-6ecd-4285-a673-85f63363c2d1', 'type': 'access', 'sub': '666b8a28378539955462f92e', 'nbf': 1718323752, 'csrf': '85d9cbc8-4a5b-4033-bc50-29d47f57c0de', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': 'c261ca05-6ecd-4285-a673-85f63363c2d1', 'type': 'access', 'sub': '666b8a28378539955462f92e', 'nbf': 1718323752, 'csrf': '85d9cbc8-4a5b-4033-bc50-29d47f57c0de', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': 'c261ca05-6ecd-4285-a673-85f63363c2d1', 'type': 'access', 'sub': '666b8a28378539955462f92e', 'nbf': 1718323752, 'csrf': '85d9cbc8-4a5b-4033-bc50-29d47f57c0de', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323752, 'jti': 'c261ca05-6ecd-4285-a673-85f63363c2d1', 'type': 'access', 'sub': '666b8a28378539955462f92e', 'nbf': 1718323752, 'csrf': '85d9cbc8-4a5b-4033-bc50-29d47f57c0de', 'exp': 1718324652}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323753, 'jti': '61fc9684-1f28-472b-ad98-cf10e9b8b944', 'type': 'access', 'sub': '666b8a29378539955462f930', 'nbf': 1718323753, 'csrf': '23485734-c3b5-47b0-bd70-e123c1adf17e', 'exp': 1718324653}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323753, 'jti': 'c7f7ebd7-8de0-470d-83b3-253e600b2a03', 'type': 'access', 'sub': '666b8a29378539955462f932', 'nbf': 1718323753, 'csrf': '6b7c666a-6759-4b27-a242-f0b819edb36c', 'exp': 1718324653}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323775, 'jti': '400c8f20-e1d9-4d28-9512-970df8fe7a7c', 'type': 'access', 'sub': '666b8a3f0c99df397dc8bf1b', 'nbf': 1718323775, 'csrf': '433f0e7a-4c9b-49b6-bef3-93e09fea4449', 'exp': 1718324675}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a3f0c99df397dc8bf1b') email='test@test.com' password='__hash__scrypt:32768:8:1$CrCOStUk6SxUg0x9$1f5170ef23697f78a7ae6b03c837b09f786c140edbb730049e29963b84a4e8349f1ab9f70930ab913711a260a8da63b96d9baa9341036f82f252126d89f8226f' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323775, 'jti': 'baa723f5-b680-47ba-93a7-67ac0d3d7dca', 'type': 'access', 'sub': '666b8a3f0c99df397dc8bf20', 'nbf': 1718323775, 'csrf': 'd116fc28-a9c1-4e20-b60d-aa034113623a', 'exp': 1718324675}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a3f0c99df397dc8bf20') email='test@test.com' password='__hash__scrypt:32768:8:1$HKgFn0ZhIKH9v9fv$1540e04e83ee816ab5f999b2621660a84eca21b1acaa49c178a3b5648d33df56ff74791050a1c88b8ba44c7c95716889335a5323f4ea4bab9ebc507ae16ab9da' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323775, 'jti': '91416eae-ee65-41b0-8d36-a6cc344510d5', 'type': 'access', 'sub': '666b8a3f0c99df397dc8bf23', 'nbf': 1718323775, 'csrf': '3cbca973-a8c6-43e8-8a53-a876d8fa6345', 'exp': 1718324675}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a3f0c99df397dc8bf23') email='test@test.com' password='__hash__scrypt:32768:8:1$fmSW1rjbMnhTyiN8$b5e85b3489f2eca00143e2b54d179849dc0a79ec69e66bb2b8f079c34eed63926aec151654f2617fa4f2797b165a42a2afc505e31ff79b3feafe69a42b85eb57' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323776, 'jti': 'cb2faed1-d582-4eae-ad14-16492ad4692e', 'type': 'access', 'sub': '666b8a400c99df397dc8bf32', 'nbf': 1718323776, 'csrf': '9975d363-9c7e-4920-bd14-425b8e476225', 'exp': 1718324676}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323777, 'jti': 'f39af562-1486-4852-a1ee-1c06fff04887', 'type': 'access', 'sub': '666b8a410c99df397dc8bf34', 'nbf': 1718323777, 'csrf': 'fbb1601a-3804-407b-b38c-43559bf251b3', 'exp': 1718324677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323777, 'jti': '8b095dbb-c7d7-484e-a4f0-22b616bfd753', 'type': 'access', 'sub': '666b8a410c99df397dc8bf36', 'nbf': 1718323777, 'csrf': 'b17a56ce-0126-4920-b165-47d9a6967a47', 'exp': 1718324677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323777, 'jti': '1c083051-e4ac-4c6f-8124-febb5a76cb33', 'type': 'access', 'sub': '666b8a410c99df397dc8bf38', 'nbf': 1718323777, 'csrf': '928de407-76f6-46bd-9da9-3f23673399fd', 'exp': 1718324677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323777, 'jti': '9a40a54f-9094-4a27-b64f-ef65911ed69b', 'type': 'access', 'sub': '666b8a410c99df397dc8bf3a', 'nbf': 1718323777, 'csrf': '7a3d8481-7d89-4e80-adb7-aa5e87ab283f', 'exp': 1718324677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323777, 'jti': 'b9aff141-9588-41d2-a610-107028ea2133', 'type': 'access', 'sub': '666b8a410c99df397dc8bf3c', 'nbf': 1718323777, 'csrf': '6e69af4b-c95f-46ef-b87f-37b3d0adbe34', 'exp': 1718324677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323777, 'jti': 'b9aff141-9588-41d2-a610-107028ea2133', 'type': 'access', 'sub': '666b8a410c99df397dc8bf3c', 'nbf': 1718323777, 'csrf': '6e69af4b-c95f-46ef-b87f-37b3d0adbe34', 'exp': 1718324677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323777, 'jti': 'b9aff141-9588-41d2-a610-107028ea2133', 'type': 'access', 'sub': '666b8a410c99df397dc8bf3c', 'nbf': 1718323777, 'csrf': '6e69af4b-c95f-46ef-b87f-37b3d0adbe34', 'exp': 1718324677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323777, 'jti': 'b9aff141-9588-41d2-a610-107028ea2133', 'type': 'access', 'sub': '666b8a410c99df397dc8bf3c', 'nbf': 1718323777, 'csrf': '6e69af4b-c95f-46ef-b87f-37b3d0adbe34', 'exp': 1718324677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323777, 'jti': 'b9aff141-9588-41d2-a610-107028ea2133', 'type': 'access', 'sub': '666b8a410c99df397dc8bf3c', 'nbf': 1718323777, 'csrf': '6e69af4b-c95f-46ef-b87f-37b3d0adbe34', 'exp': 1718324677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323777, 'jti': 'b9aff141-9588-41d2-a610-107028ea2133', 'type': 'access', 'sub': '666b8a410c99df397dc8bf3c', 'nbf': 1718323777, 'csrf': '6e69af4b-c95f-46ef-b87f-37b3d0adbe34', 'exp': 1718324677}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323778, 'jti': 'b588dda0-4d67-4aac-ae53-5bd124b0843b', 'type': 'access', 'sub': '666b8a420c99df397dc8bf3e', 'nbf': 1718323778, 'csrf': 'e8d7f131-6f9f-4c4d-b995-64eaca982150', 'exp': 1718324678}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323778, 'jti': 'b588dda0-4d67-4aac-ae53-5bd124b0843b', 'type': 'access', 'sub': '666b8a420c99df397dc8bf3e', 'nbf': 1718323778, 'csrf': 'e8d7f131-6f9f-4c4d-b995-64eaca982150', 'exp': 1718324678}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323778, 'jti': 'b588dda0-4d67-4aac-ae53-5bd124b0843b', 'type': 'access', 'sub': '666b8a420c99df397dc8bf3e', 'nbf': 1718323778, 'csrf': 'e8d7f131-6f9f-4c4d-b995-64eaca982150', 'exp': 1718324678}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323778, 'jti': 'b588dda0-4d67-4aac-ae53-5bd124b0843b', 'type': 'access', 'sub': '666b8a420c99df397dc8bf3e', 'nbf': 1718323778, 'csrf': 'e8d7f131-6f9f-4c4d-b995-64eaca982150', 'exp': 1718324678}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323778, 'jti': 'b588dda0-4d67-4aac-ae53-5bd124b0843b', 'type': 'access', 'sub': '666b8a420c99df397dc8bf3e', 'nbf': 1718323778, 'csrf': 'e8d7f131-6f9f-4c4d-b995-64eaca982150', 'exp': 1718324678}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323778, 'jti': 'b588dda0-4d67-4aac-ae53-5bd124b0843b', 'type': 'access', 'sub': '666b8a420c99df397dc8bf3e', 'nbf': 1718323778, 'csrf': 'e8d7f131-6f9f-4c4d-b995-64eaca982150', 'exp': 1718324678}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323778, 'jti': 'fe167212-5605-4e22-9965-e6adc221b17e', 'type': 'access', 'sub': '666b8a420c99df397dc8bf40', 'nbf': 1718323778, 'csrf': 'b156f372-2a99-44c0-acc2-0271e68bd73d', 'exp': 1718324678}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323779, 'jti': '98f74233-df2c-46ea-8ead-d703481d029d', 'type': 'access', 'sub': '666b8a430c99df397dc8bf42', 'nbf': 1718323779, 'csrf': '27061196-cf34-4901-ac79-b96eaf0cd4b5', 'exp': 1718324679}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323868, 'jti': '303880a9-bf02-4692-ba30-1d206807c09b', 'type': 'access', 'sub': '666b8a9cf355726a7c34ce43', 'nbf': 1718323868, 'csrf': 'd4deb98c-8446-450f-bfb5-b210304488dd', 'exp': 1718324768}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a9cf355726a7c34ce43') email='test@test.com' password='__hash__scrypt:32768:8:1$9yQ2iMZcrUEso5DY$cb262f2e0a4893994f98b0311528c6bcba7ae7db5890bb1efabc52ac392b87b1b73d1dca93a69aa0764a8962e62137e263f96fc3fbaa2349250f4d6d8c18fb81' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323869, 'jti': 'c6829590-a3fb-4f6a-b502-7c991fa28c91', 'type': 'access', 'sub': '666b8a9df355726a7c34ce48', 'nbf': 1718323869, 'csrf': '0679f545-0062-4a7f-89dd-cae792cb967d', 'exp': 1718324769}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a9df355726a7c34ce48') email='test@test.com' password='__hash__scrypt:32768:8:1$Nv9r8eweLg81qrnR$0e868c2acebb7e8a12f9ea221b740090acaf53e62d52db3d5cdfe3d0d38246ff6681f8ec7187aa0b0fae962540b52bc2a7cc9712e965ab02092152626080d23c' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323869, 'jti': '7773adb0-9c79-4e1f-8d0b-00068449c022', 'type': 'access', 'sub': '666b8a9df355726a7c34ce4b', 'nbf': 1718323869, 'csrf': '110afa38-424c-4bb7-8673-43b1419355c2', 'exp': 1718324769}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8a9df355726a7c34ce4b') email='test@test.com' password='__hash__scrypt:32768:8:1$9ADK5m0qbCY6A5ZE$992fa6298b27bcdd9d9e292c31dbd74260da1d30b1de1ff60175a0b9e232b06aac27ed0475bda76ac61f9c9aee6552a2ddaa84cf2f349061b4326d2ed7fee615' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323870, 'jti': 'a4f7d6c1-24c3-46ef-acd1-7c5023ecbd04', 'type': 'access', 'sub': '666b8a9ef355726a7c34ce5a', 'nbf': 1718323870, 'csrf': '15f78262-fc45-4ef1-99c9-af2dcdb367b3', 'exp': 1718324770}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323870, 'jti': '0d2bd043-0113-4c41-9a6c-0b6e1e600fa3', 'type': 'access', 'sub': '666b8a9ef355726a7c34ce5c', 'nbf': 1718323870, 'csrf': 'eaaaa223-d68b-47a2-8507-2efd7975e980', 'exp': 1718324770}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323870, 'jti': '7a25fb14-178b-4090-b178-ac567d376a4c', 'type': 'access', 'sub': '666b8a9ef355726a7c34ce5e', 'nbf': 1718323870, 'csrf': '2431cf4f-7e16-4c28-90fb-2fa55e065efe', 'exp': 1718324770}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323870, 'jti': '2eade654-8f37-4220-8dab-146eb472e7dd', 'type': 'access', 'sub': '666b8a9ef355726a7c34ce60', 'nbf': 1718323870, 'csrf': 'd6fad54a-522a-43c3-9608-cb0dd36605c9', 'exp': 1718324770}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': '005cac46-1197-4cd0-a2d8-3f8177267a98', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce62', 'nbf': 1718323871, 'csrf': '8b0eb32f-71da-43a3-a87a-da33681290e2', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': '92533dcd-5501-4618-a61a-afa8e12aa164', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce64', 'nbf': 1718323871, 'csrf': '36f605de-2eb4-4223-915b-765864e84212', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': '92533dcd-5501-4618-a61a-afa8e12aa164', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce64', 'nbf': 1718323871, 'csrf': '36f605de-2eb4-4223-915b-765864e84212', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': '92533dcd-5501-4618-a61a-afa8e12aa164', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce64', 'nbf': 1718323871, 'csrf': '36f605de-2eb4-4223-915b-765864e84212', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': '92533dcd-5501-4618-a61a-afa8e12aa164', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce64', 'nbf': 1718323871, 'csrf': '36f605de-2eb4-4223-915b-765864e84212', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': '92533dcd-5501-4618-a61a-afa8e12aa164', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce64', 'nbf': 1718323871, 'csrf': '36f605de-2eb4-4223-915b-765864e84212', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': '92533dcd-5501-4618-a61a-afa8e12aa164', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce64', 'nbf': 1718323871, 'csrf': '36f605de-2eb4-4223-915b-765864e84212', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': 'a6a7d95d-8a74-4c6e-81e8-42cacb9d7cf1', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce66', 'nbf': 1718323871, 'csrf': 'af5a39b2-d062-4727-9e86-f6be91c98e9f', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': 'a6a7d95d-8a74-4c6e-81e8-42cacb9d7cf1', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce66', 'nbf': 1718323871, 'csrf': 'af5a39b2-d062-4727-9e86-f6be91c98e9f', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': 'a6a7d95d-8a74-4c6e-81e8-42cacb9d7cf1', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce66', 'nbf': 1718323871, 'csrf': 'af5a39b2-d062-4727-9e86-f6be91c98e9f', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': 'a6a7d95d-8a74-4c6e-81e8-42cacb9d7cf1', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce66', 'nbf': 1718323871, 'csrf': 'af5a39b2-d062-4727-9e86-f6be91c98e9f', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': 'a6a7d95d-8a74-4c6e-81e8-42cacb9d7cf1', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce66', 'nbf': 1718323871, 'csrf': 'af5a39b2-d062-4727-9e86-f6be91c98e9f', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323871, 'jti': 'a6a7d95d-8a74-4c6e-81e8-42cacb9d7cf1', 'type': 'access', 'sub': '666b8a9ff355726a7c34ce66', 'nbf': 1718323871, 'csrf': 'af5a39b2-d062-4727-9e86-f6be91c98e9f', 'exp': 1718324771}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323872, 'jti': '6baebebb-9618-47e7-99fb-c126bf9e433f', 'type': 'access', 'sub': '666b8aa0f355726a7c34ce68', 'nbf': 1718323872, 'csrf': 'f889da6c-aa25-4d02-ba3a-2be9e412c4b0', 'exp': 1718324772}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323872, 'jti': '7f81c4c2-020c-405e-9238-dda1a7dd4c81', 'type': 'access', 'sub': '666b8aa0f355726a7c34ce6a', 'nbf': 1718323872, 'csrf': 'e523d252-ad3b-4bf2-a586-206a0fba0dd3', 'exp': 1718324772}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323890, 'jti': '9c2ca5eb-1de8-4e42-9b30-0eeaddc88efd', 'type': 'access', 'sub': '666b8ab2e05d865a0c166146', 'nbf': 1718323890, 'csrf': '50b5f863-46a1-41b0-927f-107dccee83a2', 'exp': 1718324790}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8ab2e05d865a0c166146') email='test@test.com' password='__hash__scrypt:32768:8:1$XYpx9ELtNM2D8xQt$9a22711f45ae0f5eca5c736595c98003a7eb0b4ab97bc50cb255edf5d5e76a211d320a5bcffc3d3c29cd41c1edd980b24b5cb644f3a4bfd75f426b5f00365449' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323891, 'jti': 'c4314200-09fc-4fe5-91c9-80311c90a0ef', 'type': 'access', 'sub': '666b8ab3e05d865a0c16614b', 'nbf': 1718323891, 'csrf': 'ccc7ee1f-038f-4c4d-93fa-e9eb3c96bc63', 'exp': 1718324791}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8ab3e05d865a0c16614b') email='test@test.com' password='__hash__scrypt:32768:8:1$l8DgzmFE7q9RdnEZ$85a603200a9dd71e7fe4e799e5a7f084e2940f2e9553b62b6326a6380bf1310eb109f45d764f20a85e614bc827d1746eab677b5becdf03fd1fdee40155b3e9f0' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323891, 'jti': '10796265-e9c4-4286-a0fd-660db5cf7504', 'type': 'access', 'sub': '666b8ab3e05d865a0c16614e', 'nbf': 1718323891, 'csrf': '2f2f8dfc-4a69-4b02-a1b8-26ea4d1d2bd6', 'exp': 1718324791}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8ab3e05d865a0c16614e') email='test@test.com' password='__hash__scrypt:32768:8:1$XSQD5lWrXZsXhkuK$36e1538b1252f751a38d361c7efbecafeee44b98060ecf08ca1806c47523910b5f6397885f71a16d3b325e6e897042bcd674626397b4c6c8e7791e755c26dbf8' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323892, 'jti': '8620c31d-7233-4ef2-8e57-c9316c0cd376', 'type': 'access', 'sub': '666b8ab4e05d865a0c16615d', 'nbf': 1718323892, 'csrf': 'a0e615ea-bd88-43fc-a8ae-7c73dea445b6', 'exp': 1718324792}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323892, 'jti': 'a609646d-c0bf-465e-a93c-f5e131367ca1', 'type': 'access', 'sub': '666b8ab4e05d865a0c16615f', 'nbf': 1718323892, 'csrf': '2763c923-3ded-4bc5-949b-f454bfeafcf1', 'exp': 1718324792}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323892, 'jti': 'd638c98e-1531-4d2a-8459-efa438774ed0', 'type': 'access', 'sub': '666b8ab4e05d865a0c166161', 'nbf': 1718323892, 'csrf': 'c5be4721-23ee-414f-b903-f6f47983839d', 'exp': 1718324792}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323892, 'jti': '55feccb9-8a91-449b-a442-6762beb11f39', 'type': 'access', 'sub': '666b8ab4e05d865a0c166163', 'nbf': 1718323892, 'csrf': 'a7f1ab2c-cad9-4598-bd17-22530f786634', 'exp': 1718324792}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323892, 'jti': 'cfa085bc-d638-4c00-b929-57f7d51bce32', 'type': 'access', 'sub': '666b8ab4e05d865a0c166165', 'nbf': 1718323892, 'csrf': '49919638-9610-4cb2-920c-80beac99e404', 'exp': 1718324792}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323892, 'jti': 'cfa085bc-d638-4c00-b929-57f7d51bce32', 'type': 'access', 'sub': '666b8ab4e05d865a0c166165', 'nbf': 1718323892, 'csrf': '49919638-9610-4cb2-920c-80beac99e404', 'exp': 1718324792}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323892, 'jti': 'cfa085bc-d638-4c00-b929-57f7d51bce32', 'type': 'access', 'sub': '666b8ab4e05d865a0c166165', 'nbf': 1718323892, 'csrf': '49919638-9610-4cb2-920c-80beac99e404', 'exp': 1718324792}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323892, 'jti': 'cfa085bc-d638-4c00-b929-57f7d51bce32', 'type': 'access', 'sub': '666b8ab4e05d865a0c166165', 'nbf': 1718323892, 'csrf': '49919638-9610-4cb2-920c-80beac99e404', 'exp': 1718324792}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323892, 'jti': 'cfa085bc-d638-4c00-b929-57f7d51bce32', 'type': 'access', 'sub': '666b8ab4e05d865a0c166165', 'nbf': 1718323892, 'csrf': '49919638-9610-4cb2-920c-80beac99e404', 'exp': 1718324792}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323892, 'jti': 'cfa085bc-d638-4c00-b929-57f7d51bce32', 'type': 'access', 'sub': '666b8ab4e05d865a0c166165', 'nbf': 1718323892, 'csrf': '49919638-9610-4cb2-920c-80beac99e404', 'exp': 1718324792}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323893, 'jti': '60caba23-19c1-4297-bb48-7d805c985d02', 'type': 'access', 'sub': '666b8ab5e05d865a0c166167', 'nbf': 1718323893, 'csrf': '9776d6ed-cf2c-4150-9d8c-f518ce79670a', 'exp': 1718324793}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323893, 'jti': '60caba23-19c1-4297-bb48-7d805c985d02', 'type': 'access', 'sub': '666b8ab5e05d865a0c166167', 'nbf': 1718323893, 'csrf': '9776d6ed-cf2c-4150-9d8c-f518ce79670a', 'exp': 1718324793}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323893, 'jti': '60caba23-19c1-4297-bb48-7d805c985d02', 'type': 'access', 'sub': '666b8ab5e05d865a0c166167', 'nbf': 1718323893, 'csrf': '9776d6ed-cf2c-4150-9d8c-f518ce79670a', 'exp': 1718324793}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323893, 'jti': '60caba23-19c1-4297-bb48-7d805c985d02', 'type': 'access', 'sub': '666b8ab5e05d865a0c166167', 'nbf': 1718323893, 'csrf': '9776d6ed-cf2c-4150-9d8c-f518ce79670a', 'exp': 1718324793}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323893, 'jti': '60caba23-19c1-4297-bb48-7d805c985d02', 'type': 'access', 'sub': '666b8ab5e05d865a0c166167', 'nbf': 1718323893, 'csrf': '9776d6ed-cf2c-4150-9d8c-f518ce79670a', 'exp': 1718324793}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323893, 'jti': '60caba23-19c1-4297-bb48-7d805c985d02', 'type': 'access', 'sub': '666b8ab5e05d865a0c166167', 'nbf': 1718323893, 'csrf': '9776d6ed-cf2c-4150-9d8c-f518ce79670a', 'exp': 1718324793}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323894, 'jti': 'cb7659fe-4a64-4a92-9669-3b96f22a119f', 'type': 'access', 'sub': '666b8ab6e05d865a0c166169', 'nbf': 1718323894, 'csrf': '9afd3ee1-bd53-48a6-a985-c4d9b3478620', 'exp': 1718324794}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718323894, 'jti': '1a475c6c-0f43-48a0-9c78-dd799862d88d', 'type': 'access', 'sub': '666b8ab6e05d865a0c16616b', 'nbf': 1718323894, 'csrf': 'cbffe6d8-9c90-465f-b997-878c8b01f8c7', 'exp': 1718324794}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324011, 'jti': '16530806-0755-4a01-a3ef-c2846b93bcaf', 'type': 'access', 'sub': '666b8b2bcf408686397efde6', 'nbf': 1718324011, 'csrf': '11e615d6-0111-49e7-80ad-d0a12823cf86', 'exp': 1718324911}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8b2bcf408686397efde6') email='test@test.com' password='__hash__scrypt:32768:8:1$mROkDz3Mr5SQKWj0$7097658b6eedea16721d741242a845475b5a0a486d9265ce7576ca882c1f32694606f2e36b0a1504952daf7576c7e44a1a3a46d179d6bc95fedfbba85731bbfb' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324011, 'jti': '71896ff4-a927-446b-b4ef-b1528076eadd', 'type': 'access', 'sub': '666b8b2bcf408686397efdeb', 'nbf': 1718324011, 'csrf': '634dcdf1-0c82-401b-a32d-433629ecc784', 'exp': 1718324911}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8b2bcf408686397efdeb') email='test@test.com' password='__hash__scrypt:32768:8:1$vkrZyiwBOX983ZZe$b54ce4126932651120460bcebbd3ebc2fa539af13801ae3c91090ade938310c59aa9a9f0cbc4b197e034519eebb4e1463ba8e4dc9ecd3fde834de0fcc424b1d1' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324011, 'jti': '85a9a54a-4caf-4867-8089-635d9bb33d02', 'type': 'access', 'sub': '666b8b2bcf408686397efdee', 'nbf': 1718324011, 'csrf': 'c1ca5dfa-835e-4d79-a884-39693d2f17b2', 'exp': 1718324911}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666b8b2bcf408686397efdee') email='test@test.com' password='__hash__scrypt:32768:8:1$ccF0YnutmyerbEnZ$6a4dfeb6b980e2fd9b438502f73238c9ae5ac711e8af844898f412d5f93744aa6b01de804210b083136268932ae5cb4e77bfdb56a4f3ebb645f6a7ceb0b0c4c8' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324012, 'jti': 'd090f2b4-577f-44c9-be35-6cd43f6e58c6', 'type': 'access', 'sub': '666b8b2ccf408686397efdfd', 'nbf': 1718324012, 'csrf': '3c8c93a0-a02c-445f-a885-21bd03ce6fca', 'exp': 1718324912}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324012, 'jti': 'a366f10d-1393-4ebb-b906-0582edd605b5', 'type': 'access', 'sub': '666b8b2ccf408686397efe02', 'nbf': 1718324012, 'csrf': '83243a2e-fda3-4d01-8e4b-3b4a3c051e32', 'exp': 1718324912}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324013, 'jti': '0a5c8999-5b66-4632-bd81-3cf1ebcf8fd0', 'type': 'access', 'sub': '666b8b2dcf408686397efe04', 'nbf': 1718324013, 'csrf': 'aca1de6a-0277-4d28-b921-8bbe1f2676be', 'exp': 1718324913}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324013, 'jti': '1d188b0e-3727-4035-bc19-40468dc7ae45', 'type': 'access', 'sub': '666b8b2dcf408686397efe06', 'nbf': 1718324013, 'csrf': 'a46f2b5e-d6e3-45e4-a0b4-71b1b4c132c2', 'exp': 1718324913}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324013, 'jti': '060cc23f-602e-4a0a-bca4-3698cb6a6917', 'type': 'access', 'sub': '666b8b2dcf408686397efe08', 'nbf': 1718324013, 'csrf': 'dfb370e5-551e-4fc9-8c94-1da222a6e7e8', 'exp': 1718324913}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324013, 'jti': 'c60bf5fa-6796-4707-9b6d-b123b5fbda58', 'type': 'access', 'sub': '666b8b2dcf408686397efe0a', 'nbf': 1718324013, 'csrf': '48dc9bbf-8467-402e-9bc9-ca8ec96faf3d', 'exp': 1718324913}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324013, 'jti': 'c60bf5fa-6796-4707-9b6d-b123b5fbda58', 'type': 'access', 'sub': '666b8b2dcf408686397efe0a', 'nbf': 1718324013, 'csrf': '48dc9bbf-8467-402e-9bc9-ca8ec96faf3d', 'exp': 1718324913}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324013, 'jti': 'c60bf5fa-6796-4707-9b6d-b123b5fbda58', 'type': 'access', 'sub': '666b8b2dcf408686397efe0a', 'nbf': 1718324013, 'csrf': '48dc9bbf-8467-402e-9bc9-ca8ec96faf3d', 'exp': 1718324913}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324013, 'jti': 'c60bf5fa-6796-4707-9b6d-b123b5fbda58', 'type': 'access', 'sub': '666b8b2dcf408686397efe0a', 'nbf': 1718324013, 'csrf': '48dc9bbf-8467-402e-9bc9-ca8ec96faf3d', 'exp': 1718324913}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324013, 'jti': 'c60bf5fa-6796-4707-9b6d-b123b5fbda58', 'type': 'access', 'sub': '666b8b2dcf408686397efe0a', 'nbf': 1718324013, 'csrf': '48dc9bbf-8467-402e-9bc9-ca8ec96faf3d', 'exp': 1718324913}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324013, 'jti': 'c60bf5fa-6796-4707-9b6d-b123b5fbda58', 'type': 'access', 'sub': '666b8b2dcf408686397efe0a', 'nbf': 1718324013, 'csrf': '48dc9bbf-8467-402e-9bc9-ca8ec96faf3d', 'exp': 1718324913}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324014, 'jti': 'ce99a3f3-6ed2-4609-8cfb-a91476a3e1ae', 'type': 'access', 'sub': '666b8b2ecf408686397efe0c', 'nbf': 1718324014, 'csrf': '73a40919-2cf5-44a3-adb8-4210e97fea54', 'exp': 1718324914}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324014, 'jti': 'ce99a3f3-6ed2-4609-8cfb-a91476a3e1ae', 'type': 'access', 'sub': '666b8b2ecf408686397efe0c', 'nbf': 1718324014, 'csrf': '73a40919-2cf5-44a3-adb8-4210e97fea54', 'exp': 1718324914}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324014, 'jti': 'ce99a3f3-6ed2-4609-8cfb-a91476a3e1ae', 'type': 'access', 'sub': '666b8b2ecf408686397efe0c', 'nbf': 1718324014, 'csrf': '73a40919-2cf5-44a3-adb8-4210e97fea54', 'exp': 1718324914}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324014, 'jti': 'ce99a3f3-6ed2-4609-8cfb-a91476a3e1ae', 'type': 'access', 'sub': '666b8b2ecf408686397efe0c', 'nbf': 1718324014, 'csrf': '73a40919-2cf5-44a3-adb8-4210e97fea54', 'exp': 1718324914}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324014, 'jti': 'ce99a3f3-6ed2-4609-8cfb-a91476a3e1ae', 'type': 'access', 'sub': '666b8b2ecf408686397efe0c', 'nbf': 1718324014, 'csrf': '73a40919-2cf5-44a3-adb8-4210e97fea54', 'exp': 1718324914}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324014, 'jti': 'ce99a3f3-6ed2-4609-8cfb-a91476a3e1ae', 'type': 'access', 'sub': '666b8b2ecf408686397efe0c', 'nbf': 1718324014, 'csrf': '73a40919-2cf5-44a3-adb8-4210e97fea54', 'exp': 1718324914}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324014, 'jti': '038a4f1d-8be9-487d-b40f-724fd19ab1f9', 'type': 'access', 'sub': '666b8b2ecf408686397efe0e', 'nbf': 1718324014, 'csrf': '09cd49fd-eacc-4b3f-bf71-1d4c6fe0f68f', 'exp': 1718324914}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718324014, 'jti': '668fbe5f-86c1-4dca-8dce-8538f715affa', 'type': 'access', 'sub': '666b8b2ecf408686397efe10', 'nbf': 1718324014, 'csrf': '2463e7cb-ae9b-458c-a339-20f0a2e89ace', 'exp': 1718324914}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364340, 'jti': '877b9452-a9e1-41b9-9c09-9770c9783e89', 'type': 'access', 'sub': '666c28b49e25ce71cf440490', 'nbf': 1718364340, 'csrf': 'cff74e8f-62cf-4d4a-969f-01cb14e94fc7', 'exp': 1718365240}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c28b49e25ce71cf440490') email='test@test.com' password='__hash__scrypt:32768:8:1$hY1NGhizPLxxi2JN$b151da9d7f0d6e895952c157eb7d8f3d3515f711d113db4b90263e6f96d4d32407950f85cdfd6457c4103faad5fef1ec269e1728321be79755a927c2afa2851b' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364340, 'jti': '5d392c43-ff06-475c-a7d1-f06070cc9c0c', 'type': 'access', 'sub': '666c28b49e25ce71cf440495', 'nbf': 1718364340, 'csrf': '79edb2d5-f427-43a4-860c-95437cc7cf1d', 'exp': 1718365240}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c28b49e25ce71cf440495') email='test@test.com' password='__hash__scrypt:32768:8:1$Q9DA1cIbWfLCVl7q$59f0dca1484d086944b7e1bcdf24f09c927dbf37b5ab98142101dc2fdec12469cbedde07a4074e50fa15a94528da9b04e3620024f3395bf0b98ca030e534a586' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364340, 'jti': '70d7a800-3a42-48e9-b891-ce4f8786946c', 'type': 'access', 'sub': '666c28b49e25ce71cf440498', 'nbf': 1718364340, 'csrf': '3f3566fd-3c84-4b01-a6e8-27ffdd5778b7', 'exp': 1718365240}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c28b49e25ce71cf440498') email='test@test.com' password='__hash__scrypt:32768:8:1$9HQAMpKqvXVyiIFs$bab30f2518316d5ec34785762c336e1e626a5d01bb1310ad6d4707126799ecc8e967fa1fedd34cac0f3e10d6c077fdf29e827b11d728b2223b9dbfc5aecf23f4' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364341, 'jti': '96356ac1-3285-4d45-8b03-51b8c322da28', 'type': 'access', 'sub': '666c28b59e25ce71cf4404a7', 'nbf': 1718364341, 'csrf': 'a6c197cb-fbe4-411f-9d06-053878bb0c8b', 'exp': 1718365241}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364342, 'jti': 'c49026cf-e69e-46d6-93f0-10ac03859b5d', 'type': 'access', 'sub': '666c28b69e25ce71cf4404ac', 'nbf': 1718364342, 'csrf': 'e860946a-acec-411e-9ec0-13b63996c9a2', 'exp': 1718365242}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized DELETE request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364342, 'jti': '34d35f2e-88f4-4185-8b0d-c69d35f7ff75', 'type': 'access', 'sub': '666c28b69e25ce71cf4404b1', 'nbf': 1718364342, 'csrf': 'c957b746-10ed-45ea-ba49-412046f6a259', 'exp': 1718365242}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364343, 'jti': 'faf24eff-abe6-45d5-8199-eafbcd4c1d54', 'type': 'access', 'sub': '666c28b79e25ce71cf4404b6', 'nbf': 1718364343, 'csrf': '38b017e2-c978-4632-9fd6-4fcd7ecac9bc', 'exp': 1718365243}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364343, 'jti': '2864f68f-0b97-46bf-a952-7fedb484f969', 'type': 'access', 'sub': '666c28b79e25ce71cf4404b8', 'nbf': 1718364343, 'csrf': '1039418f-83d3-424f-b100-123982a4dbb1', 'exp': 1718365243}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364343, 'jti': '85e810c7-a82f-425e-98d3-67bed924dce3', 'type': 'access', 'sub': '666c28b79e25ce71cf4404ba', 'nbf': 1718364343, 'csrf': '2562531b-4621-44cf-b88f-65b23d6be8ed', 'exp': 1718365243}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364343, 'jti': '121a6351-5c88-4b63-b66c-97df89e145f1', 'type': 'access', 'sub': '666c28b79e25ce71cf4404bc', 'nbf': 1718364343, 'csrf': 'dc14cfd6-8ea6-4521-85a9-f7943196765a', 'exp': 1718365243}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364343, 'jti': '5f1eabbd-4213-4c61-a44b-dfd8368eb447', 'type': 'access', 'sub': '666c28b79e25ce71cf4404be', 'nbf': 1718364343, 'csrf': 'd97e5fca-8ccf-4f6c-8f56-679329f6a542', 'exp': 1718365243}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364343, 'jti': '5f1eabbd-4213-4c61-a44b-dfd8368eb447', 'type': 'access', 'sub': '666c28b79e25ce71cf4404be', 'nbf': 1718364343, 'csrf': 'd97e5fca-8ccf-4f6c-8f56-679329f6a542', 'exp': 1718365243}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364343, 'jti': '5f1eabbd-4213-4c61-a44b-dfd8368eb447', 'type': 'access', 'sub': '666c28b79e25ce71cf4404be', 'nbf': 1718364343, 'csrf': 'd97e5fca-8ccf-4f6c-8f56-679329f6a542', 'exp': 1718365243}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364343, 'jti': '5f1eabbd-4213-4c61-a44b-dfd8368eb447', 'type': 'access', 'sub': '666c28b79e25ce71cf4404be', 'nbf': 1718364343, 'csrf': 'd97e5fca-8ccf-4f6c-8f56-679329f6a542', 'exp': 1718365243}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364343, 'jti': '5f1eabbd-4213-4c61-a44b-dfd8368eb447', 'type': 'access', 'sub': '666c28b79e25ce71cf4404be', 'nbf': 1718364343, 'csrf': 'd97e5fca-8ccf-4f6c-8f56-679329f6a542', 'exp': 1718365243}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364343, 'jti': '5f1eabbd-4213-4c61-a44b-dfd8368eb447', 'type': 'access', 'sub': '666c28b79e25ce71cf4404be', 'nbf': 1718364343, 'csrf': 'd97e5fca-8ccf-4f6c-8f56-679329f6a542', 'exp': 1718365243}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364344, 'jti': '2273e4d2-179f-4e94-9bd9-4097d72b7850', 'type': 'access', 'sub': '666c28b89e25ce71cf4404c0', 'nbf': 1718364344, 'csrf': '7a086646-fd06-40bc-b77c-f68df64ffb21', 'exp': 1718365244}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364344, 'jti': '2273e4d2-179f-4e94-9bd9-4097d72b7850', 'type': 'access', 'sub': '666c28b89e25ce71cf4404c0', 'nbf': 1718364344, 'csrf': '7a086646-fd06-40bc-b77c-f68df64ffb21', 'exp': 1718365244}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364344, 'jti': '2273e4d2-179f-4e94-9bd9-4097d72b7850', 'type': 'access', 'sub': '666c28b89e25ce71cf4404c0', 'nbf': 1718364344, 'csrf': '7a086646-fd06-40bc-b77c-f68df64ffb21', 'exp': 1718365244}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364344, 'jti': '2273e4d2-179f-4e94-9bd9-4097d72b7850', 'type': 'access', 'sub': '666c28b89e25ce71cf4404c0', 'nbf': 1718364344, 'csrf': '7a086646-fd06-40bc-b77c-f68df64ffb21', 'exp': 1718365244}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364344, 'jti': '2273e4d2-179f-4e94-9bd9-4097d72b7850', 'type': 'access', 'sub': '666c28b89e25ce71cf4404c0', 'nbf': 1718364344, 'csrf': '7a086646-fd06-40bc-b77c-f68df64ffb21', 'exp': 1718365244}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364344, 'jti': '2273e4d2-179f-4e94-9bd9-4097d72b7850', 'type': 'access', 'sub': '666c28b89e25ce71cf4404c0', 'nbf': 1718364344, 'csrf': '7a086646-fd06-40bc-b77c-f68df64ffb21', 'exp': 1718365244}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364344, 'jti': 'eefcff57-bfa7-4c85-9f7b-2333c392d1da', 'type': 'access', 'sub': '666c28b89e25ce71cf4404c2', 'nbf': 1718364344, 'csrf': 'e3319af7-3c0a-4972-8a06-9a1fd97a1a40', 'exp': 1718365244}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364344, 'jti': '9e90bd81-b221-41cd-871f-4c19fcd83881', 'type': 'access', 'sub': '666c28b89e25ce71cf4404c4', 'nbf': 1718364344, 'csrf': 'e0b9300d-8815-4d4b-8f19-d70815768b4d', 'exp': 1718365244}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364417, 'jti': 'eebc058f-9d66-4cdf-8467-b49e78230394', 'type': 'access', 'sub': '666c29012a9a2eee576c3a67', 'nbf': 1718364417, 'csrf': '24c9606e-7f90-4293-b3a1-a88254b2809c', 'exp': 1718365317}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c29012a9a2eee576c3a67') email='test@test.com' password='__hash__scrypt:32768:8:1$REUlZPXvefcCF4D2$1650de931c6dc1c3173696ebbb78234ca241438b081e314c6a32663c1415bfd041750756d542af4063fc790164c8e1068887c1785c6304cc82539b4bcfa1cbcd' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364417, 'jti': '543e2a62-9ae5-48ee-9659-fc492e8e78a5', 'type': 'access', 'sub': '666c29012a9a2eee576c3a6c', 'nbf': 1718364417, 'csrf': 'c08155b3-af1d-45c3-944e-6a882c13c980', 'exp': 1718365317}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c29012a9a2eee576c3a6c') email='test@test.com' password='__hash__scrypt:32768:8:1$AQauo8sunFm9MV1V$e811f3407558d5a64de99241c1baff38fd2a3653b655519a00391d13caa6d93d0ece40cf50d779d3923fed1a90f366ec3d4f2de9384c25cb54392b50844f1c38' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364417, 'jti': 'd30be5d4-ade3-4b64-8af3-1d5cde3ab53f', 'type': 'access', 'sub': '666c29012a9a2eee576c3a6f', 'nbf': 1718364417, 'csrf': '98d29179-c13d-4e30-817c-58c6ec2b56ba', 'exp': 1718365317}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c29012a9a2eee576c3a6f') email='test@test.com' password='__hash__scrypt:32768:8:1$2cuFwENk5n35Bzjn$fbe9e14adc5551d7046dd61627329b4199f98f95e5e207131adb22a1d1e8d54b51a579bcbd2d3829031c9ca27404e9a253e608c337d7993a9c16c37be0e17f73' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise UserAlreadyExistsException("User already exists")
app.models.exceptions.user_already_exists_exception.UserAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364418, 'jti': '430471ef-a31f-4c81-b886-14fdd77035a0', 'type': 'access', 'sub': '666c29022a9a2eee576c3a7e', 'nbf': 1718364418, 'csrf': 'b94a395d-786b-45af-ad99-8d1a5ccccac0', 'exp': 1718365318}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364418, 'jti': '2b504156-90d3-40c0-94c7-a722b86788c4', 'type': 'access', 'sub': '666c29022a9a2eee576c3a83', 'nbf': 1718364418, 'csrf': '92eb6dba-f20e-4914-a4c7-37fd19e6f8b3', 'exp': 1718365318}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized DELETE request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364419, 'jti': 'd26da348-aabe-461a-8df3-18c25f689774', 'type': 'access', 'sub': '666c29032a9a2eee576c3a88', 'nbf': 1718364419, 'csrf': 'a4d3f030-6509-4a17-b9cf-713acc5bef63', 'exp': 1718365319}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364419, 'jti': '9b956fbb-3e30-41b5-8689-a5580a37eeab', 'type': 'access', 'sub': '666c29032a9a2eee576c3a8d', 'nbf': 1718364419, 'csrf': '75eb144e-e6ce-407d-894f-cc2b021d50d1', 'exp': 1718365319}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364419, 'jti': '785d4901-44da-4067-9182-0db15f7d45d0', 'type': 'access', 'sub': '666c29032a9a2eee576c3a8f', 'nbf': 1718364419, 'csrf': '308d0a2a-1b5d-4f89-bd13-10ef74ce01f9', 'exp': 1718365319}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364419, 'jti': 'af0354a2-e129-40e5-a89e-ed387725fc23', 'type': 'access', 'sub': '666c29032a9a2eee576c3a91', 'nbf': 1718364419, 'csrf': 'b3478bd2-9e5b-4740-ae36-cf0a333ce204', 'exp': 1718365319}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '28efead8-ef27-46a6-9437-012a645311ec', 'type': 'access', 'sub': '666c29042a9a2eee576c3a93', 'nbf': 1718364420, 'csrf': '77f5d021-2f62-487c-957d-3d566366e299', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '7927993f-230a-4027-993d-dbe94ef65b22', 'type': 'access', 'sub': '666c29042a9a2eee576c3a95', 'nbf': 1718364420, 'csrf': '860a909e-50c7-4a01-9285-acbff87cb07a', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '7927993f-230a-4027-993d-dbe94ef65b22', 'type': 'access', 'sub': '666c29042a9a2eee576c3a95', 'nbf': 1718364420, 'csrf': '860a909e-50c7-4a01-9285-acbff87cb07a', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '7927993f-230a-4027-993d-dbe94ef65b22', 'type': 'access', 'sub': '666c29042a9a2eee576c3a95', 'nbf': 1718364420, 'csrf': '860a909e-50c7-4a01-9285-acbff87cb07a', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '7927993f-230a-4027-993d-dbe94ef65b22', 'type': 'access', 'sub': '666c29042a9a2eee576c3a95', 'nbf': 1718364420, 'csrf': '860a909e-50c7-4a01-9285-acbff87cb07a', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '7927993f-230a-4027-993d-dbe94ef65b22', 'type': 'access', 'sub': '666c29042a9a2eee576c3a95', 'nbf': 1718364420, 'csrf': '860a909e-50c7-4a01-9285-acbff87cb07a', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '7927993f-230a-4027-993d-dbe94ef65b22', 'type': 'access', 'sub': '666c29042a9a2eee576c3a95', 'nbf': 1718364420, 'csrf': '860a909e-50c7-4a01-9285-acbff87cb07a', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '9642195e-b3c1-44a2-8484-fe892dfda268', 'type': 'access', 'sub': '666c29042a9a2eee576c3a97', 'nbf': 1718364420, 'csrf': '41659cf2-dcca-4a01-9222-cce3aab703bc', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '9642195e-b3c1-44a2-8484-fe892dfda268', 'type': 'access', 'sub': '666c29042a9a2eee576c3a97', 'nbf': 1718364420, 'csrf': '41659cf2-dcca-4a01-9222-cce3aab703bc', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '9642195e-b3c1-44a2-8484-fe892dfda268', 'type': 'access', 'sub': '666c29042a9a2eee576c3a97', 'nbf': 1718364420, 'csrf': '41659cf2-dcca-4a01-9222-cce3aab703bc', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '9642195e-b3c1-44a2-8484-fe892dfda268', 'type': 'access', 'sub': '666c29042a9a2eee576c3a97', 'nbf': 1718364420, 'csrf': '41659cf2-dcca-4a01-9222-cce3aab703bc', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '9642195e-b3c1-44a2-8484-fe892dfda268', 'type': 'access', 'sub': '666c29042a9a2eee576c3a97', 'nbf': 1718364420, 'csrf': '41659cf2-dcca-4a01-9222-cce3aab703bc', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364420, 'jti': '9642195e-b3c1-44a2-8484-fe892dfda268', 'type': 'access', 'sub': '666c29042a9a2eee576c3a97', 'nbf': 1718364420, 'csrf': '41659cf2-dcca-4a01-9222-cce3aab703bc', 'exp': 1718365320}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364421, 'jti': 'b4786238-07c6-4e75-b227-d7b80330de29', 'type': 'access', 'sub': '666c29052a9a2eee576c3a99', 'nbf': 1718364421, 'csrf': '079973db-009b-4931-88b6-dda6a88fca99', 'exp': 1718365321}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718364421, 'jti': 'fe595d1b-6cf2-48c6-8295-a19f4106d2fe', 'type': 'access', 'sub': '666c29052a9a2eee576c3a9b', 'nbf': 1718364421, 'csrf': 'cf09aeff-70db-4931-b64a-dc43388bc67c', 'exp': 1718365321}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373033, 'jti': '925d9880-4656-4c18-bef8-00ea779bcb62', 'type': 'access', 'sub': '666c4aa9b8ed279d0c69b480', 'nbf': 1718373033, 'csrf': '28b87bc6-3663-4bcc-8a88-9b9d8ebe9221', 'exp': 1718373933}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c4aa9b8ed279d0c69b480') email='test@test.com' password='__hash__scrypt:32768:8:1$b6w1gaUX6rnUTUfm$bc83bcc339ef6f6543f6e4752e2084c8c095fc5d5ed1085904a6c06e6d6c4e89da53efdb95d4dea7a34af51552dab27372708bd09086fb677de51c4e3fec4081' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373033, 'jti': 'e2d325d3-26d0-4edb-898a-df0a391f2994', 'type': 'access', 'sub': '666c4aa9b8ed279d0c69b485', 'nbf': 1718373033, 'csrf': 'ec95cffc-6ddd-4f7b-a2a0-0b0790e3f369', 'exp': 1718373933}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c4aa9b8ed279d0c69b485') email='test@test.com' password='__hash__scrypt:32768:8:1$69lD9Mn7DnGnQmcK$1757cd04bd3afe4a39660f7d350961c98f4e8f16bb2e4836a36cf509ef3d623280a69c2eb4b6ac704161be1782b61f7ab045811a293e1befca07382222ef0398' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373033, 'jti': '538943f1-0138-4c81-92e9-1c7bed09abf9', 'type': 'access', 'sub': '666c4aa9b8ed279d0c69b488', 'nbf': 1718373033, 'csrf': 'f4f1a3f2-effb-4393-8fc6-1a364ec23f33', 'exp': 1718373933}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c4aa9b8ed279d0c69b488') email='test@test.com' password='__hash__scrypt:32768:8:1$2Khodsa4teyIecQy$94f350fb9f6088985b1706169c8b34e9fe64180eb96f18da685013f14dc33ec176d27ddabd1c3ddff9b3dd7ad4307cdd52a18c2723548a3e581537653b8b82ea' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373033, 'jti': '3b1b71e1-d253-473e-9965-2c8ab14a1e63', 'type': 'access', 'sub': '666c4aa9b8ed279d0c69b488', 'nbf': 1718373033, 'csrf': '3392056c-9d62-48d9-9a1c-d55d8c48169c', 'exp': 1718373933}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c4aa9b8ed279d0c69b488') email='test@test.com' password='__hash__scrypt:32768:8:1$2Khodsa4teyIecQy$94f350fb9f6088985b1706169c8b34e9fe64180eb96f18da685013f14dc33ec176d27ddabd1c3ddff9b3dd7ad4307cdd52a18c2723548a3e581537653b8b82ea' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373226, 'jti': 'a3d3049d-a3d0-40a8-a4dc-f57fe0fd89cf', 'type': 'access', 'sub': '666c4b6a71e1990585f01b85', 'nbf': 1718373226, 'csrf': '497b6c5d-0357-4b4b-bcd8-bf51487c4497', 'exp': 1718374126}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c4b6a71e1990585f01b85') email='test@test.com' password='__hash__scrypt:32768:8:1$ClAHgiqL6Gmp8ueZ$88c52c46200e2b6edcfd438ffb734a0e04def092591485739fcad862ff97e33c5bde6497b44f17d79e85ee4ac707a6ec2c6fd6fb0faf9a090715f2235c1e672d' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373226, 'jti': 'ff99f060-8884-4c79-baf3-2cda4a7095ae', 'type': 'access', 'sub': '666c4b6a71e1990585f01b8a', 'nbf': 1718373226, 'csrf': '8b19dfcf-b81a-4ae8-b880-6c2fc2b55d11', 'exp': 1718374126}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c4b6a71e1990585f01b8a') email='test@test.com' password='__hash__scrypt:32768:8:1$UoBQDN4t1MauIiP4$a73b2115cfe33cba7786bacf68dfc8a0c0a71c7b3446f57d538d1863234007fcb7df0dd203d6a91f1a83a116d704f9d0f0be5efa5f8bdd7cdfbd786d92434147' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373226, 'jti': 'e58f575d-b008-425a-a17c-e01808147056', 'type': 'access', 'sub': '666c4b6a71e1990585f01b8d', 'nbf': 1718373226, 'csrf': '6c0e80a9-6ab5-4362-8145-404b4b0db123', 'exp': 1718374126}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c4b6a71e1990585f01b8d') email='test@test.com' password='__hash__scrypt:32768:8:1$QUz0QEYXgELLhW95$fc05251d613bbc85557b9430bcffc6baf814595ae15ff7bb2e0a472d06c6602f7df9ace96589abeb737309fa686542352b011a72bf6514706f46b738d65d1e32' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373228, 'jti': 'f41d22a0-4a12-4280-8fe2-a71d1e7584da', 'type': 'access', 'sub': '666c4b6b71e1990585f01b9e', 'nbf': 1718373228, 'csrf': 'a2df2b39-7ce5-4ba6-abb0-2f25442b7f54', 'exp': 1718374128}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373228, 'jti': '63d43ee4-e62b-48d9-aa60-90345d34ba43', 'type': 'access', 'sub': '666c4b6c71e1990585f01ba3', 'nbf': 1718373228, 'csrf': '9f1c55cf-5029-4822-9755-cbcd5dd23180', 'exp': 1718374128}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized DELETE request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373228, 'jti': '931da6ce-c823-498b-bfc4-8bb834b4b9fa', 'type': 'access', 'sub': '666c4b6c71e1990585f01ba8', 'nbf': 1718373228, 'csrf': '0f610a1f-2dd4-463d-b588-12319c2a2f87', 'exp': 1718374128}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373229, 'jti': 'babce985-c52b-4262-9306-2a481d6caedd', 'type': 'access', 'sub': '666c4b6d71e1990585f01bad', 'nbf': 1718373229, 'csrf': '6a427ab9-b1cb-4f32-a349-309f8b341bfd', 'exp': 1718374129}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373229, 'jti': 'a4e804ee-64f4-4068-a233-dde661187962', 'type': 'access', 'sub': '666c4b6d71e1990585f01bb1', 'nbf': 1718373229, 'csrf': 'b6362b4f-45b0-459d-a82c-80c13112e369', 'exp': 1718374129}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373229, 'jti': 'a7b36830-4376-4349-bba8-0aa7afa17284', 'type': 'access', 'sub': '666c4b6d71e1990585f01bb3', 'nbf': 1718373229, 'csrf': 'e2137098-b6b8-4bf0-9900-e6e80a0caf6e', 'exp': 1718374129}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373229, 'jti': '53dde36b-d95b-43c8-8207-6b95c564fd04', 'type': 'access', 'sub': '666c4b6d71e1990585f01bb5', 'nbf': 1718373229, 'csrf': 'a8d34b4e-e398-4178-a36f-d2ca5e5f0156', 'exp': 1718374129}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373229, 'jti': '53dde36b-d95b-43c8-8207-6b95c564fd04', 'type': 'access', 'sub': '666c4b6d71e1990585f01bb5', 'nbf': 1718373229, 'csrf': 'a8d34b4e-e398-4178-a36f-d2ca5e5f0156', 'exp': 1718374129}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373229, 'jti': '53dde36b-d95b-43c8-8207-6b95c564fd04', 'type': 'access', 'sub': '666c4b6d71e1990585f01bb5', 'nbf': 1718373229, 'csrf': 'a8d34b4e-e398-4178-a36f-d2ca5e5f0156', 'exp': 1718374129}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373229, 'jti': '53dde36b-d95b-43c8-8207-6b95c564fd04', 'type': 'access', 'sub': '666c4b6d71e1990585f01bb5', 'nbf': 1718373229, 'csrf': 'a8d34b4e-e398-4178-a36f-d2ca5e5f0156', 'exp': 1718374129}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373229, 'jti': '53dde36b-d95b-43c8-8207-6b95c564fd04', 'type': 'access', 'sub': '666c4b6d71e1990585f01bb5', 'nbf': 1718373229, 'csrf': 'a8d34b4e-e398-4178-a36f-d2ca5e5f0156', 'exp': 1718374129}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373229, 'jti': '53dde36b-d95b-43c8-8207-6b95c564fd04', 'type': 'access', 'sub': '666c4b6d71e1990585f01bb5', 'nbf': 1718373229, 'csrf': 'a8d34b4e-e398-4178-a36f-d2ca5e5f0156', 'exp': 1718374129}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373230, 'jti': '545d20ae-7ae3-4417-bb6e-8094e0f3d118', 'type': 'access', 'sub': '666c4b6e71e1990585f01bb7', 'nbf': 1718373230, 'csrf': 'beec96d4-23e6-426b-9f04-e175417b7dce', 'exp': 1718374130}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373230, 'jti': '545d20ae-7ae3-4417-bb6e-8094e0f3d118', 'type': 'access', 'sub': '666c4b6e71e1990585f01bb7', 'nbf': 1718373230, 'csrf': 'beec96d4-23e6-426b-9f04-e175417b7dce', 'exp': 1718374130}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373230, 'jti': '545d20ae-7ae3-4417-bb6e-8094e0f3d118', 'type': 'access', 'sub': '666c4b6e71e1990585f01bb7', 'nbf': 1718373230, 'csrf': 'beec96d4-23e6-426b-9f04-e175417b7dce', 'exp': 1718374130}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373230, 'jti': '545d20ae-7ae3-4417-bb6e-8094e0f3d118', 'type': 'access', 'sub': '666c4b6e71e1990585f01bb7', 'nbf': 1718373230, 'csrf': 'beec96d4-23e6-426b-9f04-e175417b7dce', 'exp': 1718374130}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373230, 'jti': '545d20ae-7ae3-4417-bb6e-8094e0f3d118', 'type': 'access', 'sub': '666c4b6e71e1990585f01bb7', 'nbf': 1718373230, 'csrf': 'beec96d4-23e6-426b-9f04-e175417b7dce', 'exp': 1718374130}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373230, 'jti': '545d20ae-7ae3-4417-bb6e-8094e0f3d118', 'type': 'access', 'sub': '666c4b6e71e1990585f01bb7', 'nbf': 1718373230, 'csrf': 'beec96d4-23e6-426b-9f04-e175417b7dce', 'exp': 1718374130}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373230, 'jti': '0e78cd66-9fa0-49a7-b9fb-6ea872f0dffe', 'type': 'access', 'sub': '666c4b6e71e1990585f01bb9', 'nbf': 1718373230, 'csrf': '7670bbee-77c6-4f3d-9cdf-6a37a0ce0bb7', 'exp': 1718374130}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718373231, 'jti': 'f3acacab-a4e7-4a14-bd53-74f149fdb4c6', 'type': 'access', 'sub': '666c4b6f71e1990585f01bbb', 'nbf': 1718373231, 'csrf': 'b2952c91-7daf-4c1a-be80-82c2745b9742', 'exp': 1718374131}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374626, 'jti': '356483fc-132c-486f-8e5c-f6cc261bb32e', 'type': 'access', 'sub': '666c50e20f100357cd1e0559', 'nbf': 1718374626, 'csrf': '415535b3-97ee-4d0d-bd41-686f5aa0b489', 'exp': 1718375526}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c50e20f100357cd1e0559') email='test@test.com' password='__hash__scrypt:32768:8:1$kNQosUBW9yFq54fx$595594ece8696fd747fadea6199bd41493f942f512add219bd029a23c9ad6842801e3c4f954be897005eff1f6d63217cde64e22d4769a0dad6ccdf56eedb8212' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374626, 'jti': '624ce56b-86de-43fc-aae0-304167a5be82', 'type': 'access', 'sub': '666c50e20f100357cd1e055e', 'nbf': 1718374626, 'csrf': '3d81cd00-ca0b-418b-b16f-0681ddf72849', 'exp': 1718375526}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c50e20f100357cd1e055e') email='test@test.com' password='__hash__scrypt:32768:8:1$YORMh59B1tvwZ2JG$cb7990656d8b45d2782b9017f9a4dd0b2136c8d1f7316f04dd2ff31d6fcd133028f76d00e96268cc92ab583abdd78d5c748931ce19940b5fc2d377c75af62bf5' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374627, 'jti': '1fb6c6e8-4bd3-4d3d-a0a4-533de1bd9a22', 'type': 'access', 'sub': '666c50e30f100357cd1e0561', 'nbf': 1718374627, 'csrf': '82bb4895-ba89-42cd-8c31-2141958e7ee5', 'exp': 1718375527}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c50e30f100357cd1e0561') email='test@test.com' password='__hash__scrypt:32768:8:1$J1r4mOjlcji0kbo7$283a196efedf9b6a23b0fec9a8d6ef501c698665ec47ef85db286f8bb77f5168e4be3ced7d0b17e0cbc35ed511c4d600b6337d6b9f64a7f8508ecec6254fb7a2' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374628, 'jti': '17d1dc54-b664-4dc2-9eec-c7d0ac7a6d77', 'type': 'access', 'sub': '666c50e40f100357cd1e0572', 'nbf': 1718374628, 'csrf': '0c6c5c18-8706-4ddc-9f34-2b1b5ab8cd8a', 'exp': 1718375528}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374628, 'jti': '2a84d5fa-b24a-49a1-8deb-b129f00f4427', 'type': 'access', 'sub': '666c50e40f100357cd1e0577', 'nbf': 1718374628, 'csrf': '4ca9af79-148e-44a1-9016-d89d0435ca48', 'exp': 1718375528}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized DELETE request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374629, 'jti': '5e4ad21e-12a3-48f7-babb-8d09120f5e35', 'type': 'access', 'sub': '666c50e50f100357cd1e057c', 'nbf': 1718374629, 'csrf': '02623c5f-0419-4ccc-bc91-ed5838aa9fcb', 'exp': 1718375529}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374629, 'jti': 'fd70a2df-474c-424f-b1bb-e9bbb3890af7', 'type': 'access', 'sub': '666c50e50f100357cd1e0581', 'nbf': 1718374629, 'csrf': '16162c8d-bc24-483f-bd43-05bb95f1e880', 'exp': 1718375529}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374629, 'jti': '04d79222-10f6-4c96-9124-fc5c90f1b8c0', 'type': 'access', 'sub': '666c50e50f100357cd1e0583', 'nbf': 1718374629, 'csrf': 'f8e9aa4c-0adb-40df-ab37-6b5d6a77a5bb', 'exp': 1718375529}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374629, 'jti': 'a27dc231-5882-4a9e-a5b7-9b75e2b863a2', 'type': 'access', 'sub': '666c50e50f100357cd1e0585', 'nbf': 1718374629, 'csrf': '27c676d6-f987-48ae-99a7-718ef5f6a005', 'exp': 1718375529}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374630, 'jti': '5ea6715c-7770-4d9e-acc2-e0b0fc63854f', 'type': 'access', 'sub': '666c50e60f100357cd1e0587', 'nbf': 1718374630, 'csrf': '5e46db06-0844-4843-8ec7-9a4bdb22cdd8', 'exp': 1718375530}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374630, 'jti': '8abfc0ca-35c0-4279-9799-2cd65d1ebb01', 'type': 'access', 'sub': '666c50e60f100357cd1e0589', 'nbf': 1718374630, 'csrf': '5eec4063-d066-4e08-95df-5973d0e8e6c4', 'exp': 1718375530}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374630, 'jti': '8abfc0ca-35c0-4279-9799-2cd65d1ebb01', 'type': 'access', 'sub': '666c50e60f100357cd1e0589', 'nbf': 1718374630, 'csrf': '5eec4063-d066-4e08-95df-5973d0e8e6c4', 'exp': 1718375530}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374630, 'jti': '8abfc0ca-35c0-4279-9799-2cd65d1ebb01', 'type': 'access', 'sub': '666c50e60f100357cd1e0589', 'nbf': 1718374630, 'csrf': '5eec4063-d066-4e08-95df-5973d0e8e6c4', 'exp': 1718375530}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374630, 'jti': '8abfc0ca-35c0-4279-9799-2cd65d1ebb01', 'type': 'access', 'sub': '666c50e60f100357cd1e0589', 'nbf': 1718374630, 'csrf': '5eec4063-d066-4e08-95df-5973d0e8e6c4', 'exp': 1718375530}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374630, 'jti': '8abfc0ca-35c0-4279-9799-2cd65d1ebb01', 'type': 'access', 'sub': '666c50e60f100357cd1e0589', 'nbf': 1718374630, 'csrf': '5eec4063-d066-4e08-95df-5973d0e8e6c4', 'exp': 1718375530}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374630, 'jti': '8abfc0ca-35c0-4279-9799-2cd65d1ebb01', 'type': 'access', 'sub': '666c50e60f100357cd1e0589', 'nbf': 1718374630, 'csrf': '5eec4063-d066-4e08-95df-5973d0e8e6c4', 'exp': 1718375530}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374630, 'jti': '788acaa5-dea4-4438-aa70-5e251f48e9ee', 'type': 'access', 'sub': '666c50e60f100357cd1e058b', 'nbf': 1718374630, 'csrf': '88207d0e-e8a7-4f63-922c-4e5cc13b4b07', 'exp': 1718375530}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374630, 'jti': '788acaa5-dea4-4438-aa70-5e251f48e9ee', 'type': 'access', 'sub': '666c50e60f100357cd1e058b', 'nbf': 1718374630, 'csrf': '88207d0e-e8a7-4f63-922c-4e5cc13b4b07', 'exp': 1718375530}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374630, 'jti': '788acaa5-dea4-4438-aa70-5e251f48e9ee', 'type': 'access', 'sub': '666c50e60f100357cd1e058b', 'nbf': 1718374630, 'csrf': '88207d0e-e8a7-4f63-922c-4e5cc13b4b07', 'exp': 1718375530}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374630, 'jti': '788acaa5-dea4-4438-aa70-5e251f48e9ee', 'type': 'access', 'sub': '666c50e60f100357cd1e058b', 'nbf': 1718374630, 'csrf': '88207d0e-e8a7-4f63-922c-4e5cc13b4b07', 'exp': 1718375530}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374630, 'jti': '788acaa5-dea4-4438-aa70-5e251f48e9ee', 'type': 'access', 'sub': '666c50e60f100357cd1e058b', 'nbf': 1718374630, 'csrf': '88207d0e-e8a7-4f63-922c-4e5cc13b4b07', 'exp': 1718375530}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374630, 'jti': '788acaa5-dea4-4438-aa70-5e251f48e9ee', 'type': 'access', 'sub': '666c50e60f100357cd1e058b', 'nbf': 1718374630, 'csrf': '88207d0e-e8a7-4f63-922c-4e5cc13b4b07', 'exp': 1718375530}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374631, 'jti': 'efc1057f-fd36-466a-beec-0db4feefeaca', 'type': 'access', 'sub': '666c50e70f100357cd1e058d', 'nbf': 1718374631, 'csrf': 'cff2f381-e54c-4161-a34a-363660973986', 'exp': 1718375531}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374631, 'jti': '952c6d59-6f1e-46b5-a999-b5ba48d78d35', 'type': 'access', 'sub': '666c50e70f100357cd1e058f', 'nbf': 1718374631, 'csrf': 'a2f6663b-37bf-4a74-adf0-0a478b9ea7cf', 'exp': 1718375531}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374728, 'jti': 'c973753c-6481-4f73-af48-d8225f32368b', 'type': 'access', 'sub': '666c51481763591a69132bb9', 'nbf': 1718374728, 'csrf': '8fa1ac2a-cc4d-4666-bd73-82234ecb7b1c', 'exp': 1718375628}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c51481763591a69132bb9') email='test@test.com' password='__hash__scrypt:32768:8:1$8xlde6CjBMvJMKVC$6303d618ea5bfc5b5af557279242c9cd5698365ae4f69750fbac9057eff59296104972fe91b459b121ff651e0642293f4b2f0e08ee1ea65b63d647c4856ec325' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374728, 'jti': '1249e0d8-f5db-457c-80d0-1eb20390bf2b', 'type': 'access', 'sub': '666c51481763591a69132bbe', 'nbf': 1718374728, 'csrf': '51e5fe76-397f-41a8-8147-47f5eef51912', 'exp': 1718375628}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c51481763591a69132bbe') email='test@test.com' password='__hash__scrypt:32768:8:1$pFD6P9juKY62eZLB$c366557615716483038a5735e224354c29b2d33ef35ab630b7e15f9b9e6f48749e6d98cc82f4d80c3156f57b2db8b761eff32d07d0000389e2147eefe94ab6d4' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374728, 'jti': 'c31b0591-b5a1-4773-8228-a7fa78dd3a29', 'type': 'access', 'sub': '666c51481763591a69132bc1', 'nbf': 1718374728, 'csrf': '02ba8eef-2b43-4122-8035-8a807d206985', 'exp': 1718375628}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c51481763591a69132bc1') email='test@test.com' password='__hash__scrypt:32768:8:1$Om63UsqzyaLr3Sri$29301c1cab4ce69aa06cbafce39fc16447d69c365d960fbba8bef6e6feb777751b108eef30a5bec01567f31446bd7c51b7abb41d40c7d4871b0c31e62b154cfb' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374729, 'jti': '8c3c8832-1b20-4c4c-a9a7-1e927c3559bd', 'type': 'access', 'sub': '666c51491763591a69132bd2', 'nbf': 1718374729, 'csrf': '21897cc0-6eb4-4c57-8713-48eaaf3deb16', 'exp': 1718375629}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374730, 'jti': 'ad4e830d-ac2a-4c0a-bb12-ed44795ddbef', 'type': 'access', 'sub': '666c514a1763591a69132bd7', 'nbf': 1718374730, 'csrf': '11a9d3cb-1007-4c39-8d13-412cc7fed4a8', 'exp': 1718375630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized DELETE request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374730, 'jti': '3063831a-9f79-412a-8255-9972cf9acd8d', 'type': 'access', 'sub': '666c514a1763591a69132bdc', 'nbf': 1718374730, 'csrf': 'c2779300-6f28-42d5-9ab3-d9788638f82f', 'exp': 1718375630}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374731, 'jti': 'ef3f36a3-d795-4175-8a62-832bc4bff1a2', 'type': 'access', 'sub': '666c514b1763591a69132be1', 'nbf': 1718374731, 'csrf': '7362b8ec-203b-44c2-b94d-9173e7767214', 'exp': 1718375631}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374731, 'jti': '60361c50-e9c5-4013-b818-e3161ef824af', 'type': 'access', 'sub': '666c514b1763591a69132be3', 'nbf': 1718374731, 'csrf': '3eb8c8a3-cd9e-4154-bedd-6cda7cb31806', 'exp': 1718375631}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374731, 'jti': 'dc3f91a5-17b1-4d41-a31b-4bbef12eb1db', 'type': 'access', 'sub': '666c514b1763591a69132be5', 'nbf': 1718374731, 'csrf': 'b94af5d7-1371-47bf-a92b-156401249222', 'exp': 1718375631}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374731, 'jti': 'e8f48540-0a95-457b-a5db-fd5a08ecf6cd', 'type': 'access', 'sub': '666c514b1763591a69132be7', 'nbf': 1718374731, 'csrf': '76247cf2-23f0-4e3c-85d4-81d4510069ff', 'exp': 1718375631}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374731, 'jti': '62c9a5f9-d772-449a-abc9-61f287c93d9f', 'type': 'access', 'sub': '666c514b1763591a69132be9', 'nbf': 1718374731, 'csrf': 'f75d863a-69f6-43c2-80a6-9d45f7c168ba', 'exp': 1718375631}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374731, 'jti': '62c9a5f9-d772-449a-abc9-61f287c93d9f', 'type': 'access', 'sub': '666c514b1763591a69132be9', 'nbf': 1718374731, 'csrf': 'f75d863a-69f6-43c2-80a6-9d45f7c168ba', 'exp': 1718375631}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374731, 'jti': '62c9a5f9-d772-449a-abc9-61f287c93d9f', 'type': 'access', 'sub': '666c514b1763591a69132be9', 'nbf': 1718374731, 'csrf': 'f75d863a-69f6-43c2-80a6-9d45f7c168ba', 'exp': 1718375631}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374731, 'jti': '62c9a5f9-d772-449a-abc9-61f287c93d9f', 'type': 'access', 'sub': '666c514b1763591a69132be9', 'nbf': 1718374731, 'csrf': 'f75d863a-69f6-43c2-80a6-9d45f7c168ba', 'exp': 1718375631}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374731, 'jti': '62c9a5f9-d772-449a-abc9-61f287c93d9f', 'type': 'access', 'sub': '666c514b1763591a69132be9', 'nbf': 1718374731, 'csrf': 'f75d863a-69f6-43c2-80a6-9d45f7c168ba', 'exp': 1718375631}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374731, 'jti': '62c9a5f9-d772-449a-abc9-61f287c93d9f', 'type': 'access', 'sub': '666c514b1763591a69132be9', 'nbf': 1718374731, 'csrf': 'f75d863a-69f6-43c2-80a6-9d45f7c168ba', 'exp': 1718375631}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374732, 'jti': '5124baab-ee52-400c-a86e-04d2124d2ded', 'type': 'access', 'sub': '666c514c1763591a69132beb', 'nbf': 1718374732, 'csrf': 'f6b3addc-3157-46ed-97c9-e99eca8e7e1b', 'exp': 1718375632}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374732, 'jti': '5124baab-ee52-400c-a86e-04d2124d2ded', 'type': 'access', 'sub': '666c514c1763591a69132beb', 'nbf': 1718374732, 'csrf': 'f6b3addc-3157-46ed-97c9-e99eca8e7e1b', 'exp': 1718375632}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374732, 'jti': '5124baab-ee52-400c-a86e-04d2124d2ded', 'type': 'access', 'sub': '666c514c1763591a69132beb', 'nbf': 1718374732, 'csrf': 'f6b3addc-3157-46ed-97c9-e99eca8e7e1b', 'exp': 1718375632}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374732, 'jti': '5124baab-ee52-400c-a86e-04d2124d2ded', 'type': 'access', 'sub': '666c514c1763591a69132beb', 'nbf': 1718374732, 'csrf': 'f6b3addc-3157-46ed-97c9-e99eca8e7e1b', 'exp': 1718375632}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374732, 'jti': '5124baab-ee52-400c-a86e-04d2124d2ded', 'type': 'access', 'sub': '666c514c1763591a69132beb', 'nbf': 1718374732, 'csrf': 'f6b3addc-3157-46ed-97c9-e99eca8e7e1b', 'exp': 1718375632}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374732, 'jti': '5124baab-ee52-400c-a86e-04d2124d2ded', 'type': 'access', 'sub': '666c514c1763591a69132beb', 'nbf': 1718374732, 'csrf': 'f6b3addc-3157-46ed-97c9-e99eca8e7e1b', 'exp': 1718375632}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374733, 'jti': 'e15596b3-74d2-464e-b874-e02ea563a44c', 'type': 'access', 'sub': '666c514d1763591a69132bed', 'nbf': 1718374733, 'csrf': '0cc91541-56a1-468e-957a-7605c824cceb', 'exp': 1718375633}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374733, 'jti': 'e1602124-32a3-454d-beee-44933475064f', 'type': 'access', 'sub': '666c514d1763591a69132bef', 'nbf': 1718374733, 'csrf': '5ea1aa61-d033-46e6-8ee4-2178520a3709', 'exp': 1718375633}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374818, 'jti': '52f400c5-64fa-4f25-ac57-577c294ecff7', 'type': 'access', 'sub': '666c51a29183967c9d760577', 'nbf': 1718374818, 'csrf': '4a22e48c-fbd3-40b9-b76a-bfae725ea414', 'exp': 1718375718}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c51a29183967c9d760577') email='test@test.com' password='__hash__scrypt:32768:8:1$LbxzVuL6HHKfo2Qw$4f228f9063e6c5020b510555a4a12b5ee9ef012c13cf481619355c3c4f13aabe0ff2bbc90eb32d5f54ab0274d74f45c41f6b99adadfa5a7c7bad214addb53388' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374818, 'jti': '65f61278-6762-44e4-a5b0-8c1a8cdc064a', 'type': 'access', 'sub': '666c51a29183967c9d76057c', 'nbf': 1718374818, 'csrf': '8ec7e43e-fc1e-4a52-9d8c-4a7ede67e5c5', 'exp': 1718375718}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c51a29183967c9d76057c') email='test@test.com' password='__hash__scrypt:32768:8:1$9I0q2CGSTFVnWMyB$7b2510be355e5c078cf25f96d530b3c6d69c0ce2f05ff5b5d78b1d0000956f81d9c99475546ce9d28ef313ed1c49793a49a05c9adf66d16d41734890ff70454e' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374818, 'jti': '40133f80-e457-427d-ab18-2325940c2f99', 'type': 'access', 'sub': '666c51a29183967c9d76057f', 'nbf': 1718374818, 'csrf': 'f54bb5cb-c56f-422b-9569-de785c8a05e9', 'exp': 1718375718}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c51a29183967c9d76057f') email='test@test.com' password='__hash__scrypt:32768:8:1$QN0HMbBad7Hpdyjs$ed6bfddd9bba643c3dfc3cf3d00378a5b81a534cea1caa5a00f5bfcedcd575ad2ea8dd5f3a9ce615613114967975f3aaa3eb67582e7886682f79704211ff1404' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374819, 'jti': '45a72caf-d4b2-4bf8-9627-5e63970bc5bd', 'type': 'access', 'sub': '666c51a39183967c9d760590', 'nbf': 1718374819, 'csrf': '5ad3fde6-2fe8-4520-a585-a577b4951553', 'exp': 1718375719}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374820, 'jti': '28c9fb51-2553-4288-b0c0-26a2fc9bd01b', 'type': 'access', 'sub': '666c51a49183967c9d760595', 'nbf': 1718374820, 'csrf': '779706bf-282b-4a00-8ad8-52b59a4de8cd', 'exp': 1718375720}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized DELETE request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374820, 'jti': '5e1a7d4c-c1fa-4ea1-9539-3c6bcc90d252', 'type': 'access', 'sub': '666c51a49183967c9d76059a', 'nbf': 1718374820, 'csrf': '3ae41777-722e-4ab3-8912-c3973866bc74', 'exp': 1718375720}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374821, 'jti': 'aeca95e5-da58-4ffe-b5b6-f6d663d61735', 'type': 'access', 'sub': '666c51a59183967c9d76059f', 'nbf': 1718374821, 'csrf': 'b8b99eb4-b3df-4928-b5e8-da8d3ffae51e', 'exp': 1718375721}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374821, 'jti': 'f2648eff-b287-403c-9bfa-c71e78c98eda', 'type': 'access', 'sub': '666c51a59183967c9d7605a1', 'nbf': 1718374821, 'csrf': 'dc2d11f5-b30f-4ae0-999e-22924d818d98', 'exp': 1718375721}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374821, 'jti': '3c0bda62-8543-490e-9fa2-dfeb2a7b6d01', 'type': 'access', 'sub': '666c51a59183967c9d7605a3', 'nbf': 1718374821, 'csrf': 'dbe505d3-b818-4580-82fa-56720cf57dae', 'exp': 1718375721}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374821, 'jti': '5583d72c-4026-47e3-b532-1014f4804ab7', 'type': 'access', 'sub': '666c51a59183967c9d7605a5', 'nbf': 1718374821, 'csrf': 'fa25c7f4-804a-4f0f-8edb-22f18aa9764f', 'exp': 1718375721}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374821, 'jti': '4597a4c6-69ba-4fe0-aedb-2e5f3adcdd73', 'type': 'access', 'sub': '666c51a59183967c9d7605a7', 'nbf': 1718374821, 'csrf': '76d83b04-bcf1-4eed-8e73-e671028df983', 'exp': 1718375721}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374821, 'jti': '4597a4c6-69ba-4fe0-aedb-2e5f3adcdd73', 'type': 'access', 'sub': '666c51a59183967c9d7605a7', 'nbf': 1718374821, 'csrf': '76d83b04-bcf1-4eed-8e73-e671028df983', 'exp': 1718375721}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374821, 'jti': '4597a4c6-69ba-4fe0-aedb-2e5f3adcdd73', 'type': 'access', 'sub': '666c51a59183967c9d7605a7', 'nbf': 1718374821, 'csrf': '76d83b04-bcf1-4eed-8e73-e671028df983', 'exp': 1718375721}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374821, 'jti': '4597a4c6-69ba-4fe0-aedb-2e5f3adcdd73', 'type': 'access', 'sub': '666c51a59183967c9d7605a7', 'nbf': 1718374821, 'csrf': '76d83b04-bcf1-4eed-8e73-e671028df983', 'exp': 1718375721}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374821, 'jti': '4597a4c6-69ba-4fe0-aedb-2e5f3adcdd73', 'type': 'access', 'sub': '666c51a59183967c9d7605a7', 'nbf': 1718374821, 'csrf': '76d83b04-bcf1-4eed-8e73-e671028df983', 'exp': 1718375721}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374821, 'jti': '4597a4c6-69ba-4fe0-aedb-2e5f3adcdd73', 'type': 'access', 'sub': '666c51a59183967c9d7605a7', 'nbf': 1718374821, 'csrf': '76d83b04-bcf1-4eed-8e73-e671028df983', 'exp': 1718375721}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374822, 'jti': 'f9c9069e-ec1a-4ff8-9913-f8914188f11e', 'type': 'access', 'sub': '666c51a69183967c9d7605a9', 'nbf': 1718374822, 'csrf': '1a8b32ba-c7f2-42a1-8eb0-0690822aa4ff', 'exp': 1718375722}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374822, 'jti': 'f9c9069e-ec1a-4ff8-9913-f8914188f11e', 'type': 'access', 'sub': '666c51a69183967c9d7605a9', 'nbf': 1718374822, 'csrf': '1a8b32ba-c7f2-42a1-8eb0-0690822aa4ff', 'exp': 1718375722}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374822, 'jti': 'f9c9069e-ec1a-4ff8-9913-f8914188f11e', 'type': 'access', 'sub': '666c51a69183967c9d7605a9', 'nbf': 1718374822, 'csrf': '1a8b32ba-c7f2-42a1-8eb0-0690822aa4ff', 'exp': 1718375722}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374822, 'jti': 'f9c9069e-ec1a-4ff8-9913-f8914188f11e', 'type': 'access', 'sub': '666c51a69183967c9d7605a9', 'nbf': 1718374822, 'csrf': '1a8b32ba-c7f2-42a1-8eb0-0690822aa4ff', 'exp': 1718375722}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374822, 'jti': 'f9c9069e-ec1a-4ff8-9913-f8914188f11e', 'type': 'access', 'sub': '666c51a69183967c9d7605a9', 'nbf': 1718374822, 'csrf': '1a8b32ba-c7f2-42a1-8eb0-0690822aa4ff', 'exp': 1718375722}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374822, 'jti': 'f9c9069e-ec1a-4ff8-9913-f8914188f11e', 'type': 'access', 'sub': '666c51a69183967c9d7605a9', 'nbf': 1718374822, 'csrf': '1a8b32ba-c7f2-42a1-8eb0-0690822aa4ff', 'exp': 1718375722}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374822, 'jti': '91ff89ef-5150-44f1-b006-a499dad743b7', 'type': 'access', 'sub': '666c51a69183967c9d7605ab', 'nbf': 1718374822, 'csrf': '16a78047-402d-4866-a405-a8ac5724e84e', 'exp': 1718375722}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374823, 'jti': '90f6f410-a85b-4bcf-83b0-9b26de719820', 'type': 'access', 'sub': '666c51a79183967c9d7605ad', 'nbf': 1718374823, 'csrf': 'ac051efb-e708-41b7-8719-e53df17392ae', 'exp': 1718375723}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374864, 'jti': '1ed1b8e7-fead-4304-9407-838dadd3f0c3', 'type': 'access', 'sub': '666c51d0c299e642597997ea', 'nbf': 1718374864, 'csrf': '428ab732-8965-4135-a2d1-86e0e27b6a28', 'exp': 1718375764}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c51d0c299e642597997ea') email='test@test.com' password='__hash__scrypt:32768:8:1$v9PSv9OyKSk5V8D6$a732a1e6d04da08a062af915f19b127dfa98d9b0907f35daccc04f751fc4c757385af792f59e93be02e6a59572f55e12ad769f4c464eee207e7ad046c53cf471' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374864, 'jti': 'f0f7d36c-5c49-49f5-93c5-7bbc72b5584c', 'type': 'access', 'sub': '666c51d0c299e642597997ef', 'nbf': 1718374864, 'csrf': '4707f7cd-51eb-4762-90c3-45b180930e32', 'exp': 1718375764}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c51d0c299e642597997ef') email='test@test.com' password='__hash__scrypt:32768:8:1$wQvYyIgiI4MuWClw$7e12a74756c0f969ab78c3c1f217af18e9221320c02d9561113d80389f68a92954bd6be5e122e1af28b443bb6de7b03a5646f92b04334898f82ef3ede1e6e678' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374864, 'jti': 'f6388a05-6731-440d-a4e4-e3e7ee4ed790', 'type': 'access', 'sub': '666c51d0c299e642597997f2', 'nbf': 1718374864, 'csrf': '75be651e-c316-45a6-9251-0633b93b5171', 'exp': 1718375764}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666c51d0c299e642597997f2') email='test@test.com' password='__hash__scrypt:32768:8:1$3n56gUlX6MigBW8Q$693331c781792d615f13140154ce64f2e419721b40dd8fa6a7034f01ccff3ec9e64045286bf6d2b05c9a2206e8b9d18a4d044142ad3703752c28a674bbf2611d' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374866, 'jti': '4778f82c-eb1d-4dee-9025-85c01ece6c6d', 'type': 'access', 'sub': '666c51d2c299e64259799803', 'nbf': 1718374866, 'csrf': '6823104a-610a-4469-b2f0-44cf1b40e97a', 'exp': 1718375766}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374866, 'jti': 'e47da1cd-d01f-4af9-8059-cf5e03598f24', 'type': 'access', 'sub': '666c51d2c299e64259799808', 'nbf': 1718374866, 'csrf': '2972ee12-aa54-46d6-8211-4231921453c7', 'exp': 1718375766}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized DELETE request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374867, 'jti': '263d7003-5ab2-48a1-88e0-647b2c103156', 'type': 'access', 'sub': '666c51d2c299e6425979980d', 'nbf': 1718374867, 'csrf': '6f52038c-6c41-4151-8f3a-193d45ac2560', 'exp': 1718375767}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374867, 'jti': '0b93285f-42a4-4ac8-8387-0ad2dba51a88', 'type': 'access', 'sub': '666c51d3c299e64259799812', 'nbf': 1718374867, 'csrf': 'de28dfec-4997-47cf-81f2-094f2fae13ea', 'exp': 1718375767}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374867, 'jti': 'c625b5f8-3e21-4637-b7c2-a6e40a28c15a', 'type': 'access', 'sub': '666c51d3c299e64259799814', 'nbf': 1718374867, 'csrf': '4effda53-da0e-41da-9321-ab0ee3ea5810', 'exp': 1718375767}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374867, 'jti': 'efbfc6dd-ce4d-4733-b81b-134c328af904', 'type': 'access', 'sub': '666c51d3c299e64259799816', 'nbf': 1718374867, 'csrf': '8a1b45b8-6e2a-4788-9433-558c669488df', 'exp': 1718375767}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374867, 'jti': '33c6cef1-9e48-4855-9aa9-9f5de59b8b0d', 'type': 'access', 'sub': '666c51d3c299e64259799818', 'nbf': 1718374867, 'csrf': 'ae4babc3-2305-4bce-8d5f-69a7b2e61fde', 'exp': 1718375767}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374868, 'jti': '31e3c3c8-eb3b-46e1-acc3-da7e366e90a5', 'type': 'access', 'sub': '666c51d4c299e6425979981a', 'nbf': 1718374868, 'csrf': 'd4cac281-38f8-409b-b537-a434faf27d9c', 'exp': 1718375768}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374868, 'jti': '31e3c3c8-eb3b-46e1-acc3-da7e366e90a5', 'type': 'access', 'sub': '666c51d4c299e6425979981a', 'nbf': 1718374868, 'csrf': 'd4cac281-38f8-409b-b537-a434faf27d9c', 'exp': 1718375768}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374868, 'jti': '31e3c3c8-eb3b-46e1-acc3-da7e366e90a5', 'type': 'access', 'sub': '666c51d4c299e6425979981a', 'nbf': 1718374868, 'csrf': 'd4cac281-38f8-409b-b537-a434faf27d9c', 'exp': 1718375768}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374868, 'jti': '31e3c3c8-eb3b-46e1-acc3-da7e366e90a5', 'type': 'access', 'sub': '666c51d4c299e6425979981a', 'nbf': 1718374868, 'csrf': 'd4cac281-38f8-409b-b537-a434faf27d9c', 'exp': 1718375768}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374868, 'jti': '31e3c3c8-eb3b-46e1-acc3-da7e366e90a5', 'type': 'access', 'sub': '666c51d4c299e6425979981a', 'nbf': 1718374868, 'csrf': 'd4cac281-38f8-409b-b537-a434faf27d9c', 'exp': 1718375768}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374868, 'jti': '31e3c3c8-eb3b-46e1-acc3-da7e366e90a5', 'type': 'access', 'sub': '666c51d4c299e6425979981a', 'nbf': 1718374868, 'csrf': 'd4cac281-38f8-409b-b537-a434faf27d9c', 'exp': 1718375768}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374868, 'jti': '278a4f21-a24f-43b9-b521-a9dc6d3c7231', 'type': 'access', 'sub': '666c51d4c299e6425979981c', 'nbf': 1718374868, 'csrf': 'efd3c629-dad4-4faa-81c5-f48c703e0162', 'exp': 1718375768}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374868, 'jti': '278a4f21-a24f-43b9-b521-a9dc6d3c7231', 'type': 'access', 'sub': '666c51d4c299e6425979981c', 'nbf': 1718374868, 'csrf': 'efd3c629-dad4-4faa-81c5-f48c703e0162', 'exp': 1718375768}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374868, 'jti': '278a4f21-a24f-43b9-b521-a9dc6d3c7231', 'type': 'access', 'sub': '666c51d4c299e6425979981c', 'nbf': 1718374868, 'csrf': 'efd3c629-dad4-4faa-81c5-f48c703e0162', 'exp': 1718375768}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374868, 'jti': '278a4f21-a24f-43b9-b521-a9dc6d3c7231', 'type': 'access', 'sub': '666c51d4c299e6425979981c', 'nbf': 1718374868, 'csrf': 'efd3c629-dad4-4faa-81c5-f48c703e0162', 'exp': 1718375768}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374868, 'jti': '278a4f21-a24f-43b9-b521-a9dc6d3c7231', 'type': 'access', 'sub': '666c51d4c299e6425979981c', 'nbf': 1718374868, 'csrf': 'efd3c629-dad4-4faa-81c5-f48c703e0162', 'exp': 1718375768}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374868, 'jti': '278a4f21-a24f-43b9-b521-a9dc6d3c7231', 'type': 'access', 'sub': '666c51d4c299e6425979981c', 'nbf': 1718374868, 'csrf': 'efd3c629-dad4-4faa-81c5-f48c703e0162', 'exp': 1718375768}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374869, 'jti': 'c581c253-7d28-4e1d-a4b6-197e2c8d5e77', 'type': 'access', 'sub': '666c51d5c299e6425979981e', 'nbf': 1718374869, 'csrf': 'b1355586-9e5f-4086-bf9b-cf299fa16f27', 'exp': 1718375769}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718374869, 'jti': 'a8d88816-a052-4db2-a8bb-89f01233d320', 'type': 'access', 'sub': '666c51d5c299e64259799820', 'nbf': 1718374869, 'csrf': 'e99ba82c-bf04-4fe3-aa8a-69a25432067e', 'exp': 1718375769}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718448043, 'jti': '8dbc9b0c-01d1-4f6a-9aaa-0bf1cb0d41f0', 'type': 'access', 'sub': '666d6fab07fb550176b5ec31', 'nbf': 1718448043, 'csrf': '15ed6fa9-4157-4800-90f7-da7c9a23ffe7', 'exp': 1718448943}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d6fab07fb550176b5ec31'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Lc9KKXGMWR3BvQuG$3aceccb097cfc2c26992c7ab2d1e2e7ec39b74f19933eaa720cf3756f7d8e74e8cc6c783743c77de86b3be92d6558f9ca734db13d75d57471a408d051effde6e', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:'personal_name'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 33, in create_public_official
    return jsonify({"message": f"Public Official {po_data["personal_name"]} successfully created",
                                                  ~~~~~~~^^^^^^^^^^^^^^^^^
KeyError: 'personal_name'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718448133, 'jti': '39d7c11e-d2f5-44c7-80a6-b33454b76b8c', 'type': 'access', 'sub': '666d700510543c52986349fb', 'nbf': 1718448133, 'csrf': 'f4afd8aa-3ae8-4b7d-8499-1685e38ff654', 'exp': 1718449033}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d700510543c52986349fb'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Sz2gkLvEiKKSXoAL$7be517e745a26d377ce7717d39cde535171188a37f85af8b8eb93fffe60cdb917464ac7c0ec6aadf441295f224d4d16aa1839da92ecd7b817ce677933bc647d8', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718448150, 'jti': '10196d81-8148-45a1-93df-8717fba45945', 'type': 'access', 'sub': '666d70162275d035375f07fe', 'nbf': 1718448150, 'csrf': '383d6b09-4157-474c-98d0-628397a2684b', 'exp': 1718449050}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d70162275d035375f07fe'), email='admin@test.com', password='__hash__scrypt:32768:8:1$ueCAthg0gEYBulJB$16048b2bc0026442ee66fc7a9384ea48464075ca86622ecb044f955e4f7f2af42eed15e7fd64cbcd69dd3e7a8d3b25baf276f7064673899e17a890bf5a155c78', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718448322, 'jti': '2b82c6cb-fa57-4749-a117-050cfb18dc1d', 'type': 'access', 'sub': '666d70c1e01f0ac59150b735', 'nbf': 1718448322, 'csrf': '60ec22e9-54d8-4b5a-bd72-a316440ebcbb', 'exp': 1718449222}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d70c1e01f0ac59150b735'), email='admin@test.com', password='__hash__scrypt:32768:8:1$JskJUewiCMLDY6OD$9306524be984c70525688d5898daaea503c6385fe6d0ada793e0935bc68125e5b877493384e9d64f90b0c3b603c32b9f1e9072c0298032ffb40766daf09f940f', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:2 validation errors for PublicOfficial
name_hebrew
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
name_heb
  Extra inputs are not permitted [type=extra_forbidden, input_value='טסטמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/extra_forbidden
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 30, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for PublicOfficial
name_hebrew
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
name_heb
  Extra inputs are not permitted [type=extra_forbidden, input_value='טסטמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/extra_forbidden
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718449681, 'jti': '8fa5d88e-73ed-4b90-bd47-d0489eb12261', 'type': 'access', 'sub': '666d76119556a3d58cb4baef', 'nbf': 1718449681, 'csrf': 'f9af6ca2-58a4-4aca-98a2-1218678c53bb', 'exp': 1718450581}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d76119556a3d58cb4baef'), email='admin@test.com', password='__hash__scrypt:32768:8:1$rcbRmWAdLiGJ451M$4e9660f58a66bf8462d9573466c7b1add8a2bd4f21f617b9b9e9cf787e4679c4338bc61c52d415493ce4d2d5c54224276ca1340bf2842fd0602e036f63c1db3f', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450274, 'jti': '3f680c41-3fdd-41f1-a074-b73fc6df4152', 'type': 'access', 'sub': '666d7862974083e21ba13ca5', 'nbf': 1718450274, 'csrf': 'adf6d8cf-7e64-458b-a673-c6f4e657fb7b', 'exp': 1718451174}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d7862974083e21ba13ca5'), email='admin@test.com', password='__hash__scrypt:32768:8:1$j1JPPq5baZJSxZxp$337ce4e21d030dc0628a4e3569110e06a8998df5e7999c3b47ff02906cb32d6979a423f54dd43c3889c8a74f681c20281f05a140aed5c71b9352eba09adadfb3', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450274, 'jti': 'f1828444-76da-4bbe-8ba4-d302b3bda6ba', 'type': 'access', 'sub': '666d7862974083e21ba13ca8', 'nbf': 1718450274, 'csrf': '1d40c435-7003-4470-b3a4-0ad959cd57a7', 'exp': 1718451174}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d7862974083e21ba13ca8'), email='admin@test.com', password='__hash__scrypt:32768:8:1$gz9aAXFKUJQRGMY9$837eaa77d4b51d981adeff05b3a07e50621476b98b10a1bba0de2bf8e9a29e009d5c24cd71c6696a59125cbe3b650f10815f67bde41cbcec6a279b300f0437e2', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 30, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450274, 'jti': '589dbfc0-feff-4baa-a4f3-a7678d510ec7', 'type': 'access', 'sub': '666d7862974083e21ba13caa', 'nbf': 1718450274, 'csrf': '7010f2f1-3114-48e3-bb15-9f5d950ccebf', 'exp': 1718451174}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d7862974083e21ba13caa'), email='admin@test.com', password='__hash__scrypt:32768:8:1$wfjcNz3KBWqm7zKS$4abd17a85b72db06e6041d749f402214dbcbf60b109578764ab335d58cb58bbb9f4e2baf812a0da190bf3357f2658676408a9c2c22d72bd1c1f24def17809f33', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 30, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450274, 'jti': '84dc9c2b-9f24-4775-96c9-2b957f2d4b61', 'type': 'access', 'sub': '666d7862974083e21ba13cac', 'nbf': 1718450274, 'csrf': 'baada6f2-0a56-44ba-9533-ee95357a1dc8', 'exp': 1718451174}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d7862974083e21ba13cac'), email='admin@test.com', password='__hash__scrypt:32768:8:1$n8IbHFCDp2O9koof$7011d9ef2c597496f4116e3fee8da1c90d94f00f6b6b15dc764da64516893601b4252c1d1874a479ae5bcdff91c8f8d9fe6cf3428d178d9da2a2c3d2fd467f27', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 30, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450274, 'jti': '56df1b96-f8a6-49d3-9b43-9c88f5c8a1e6', 'type': 'access', 'sub': '666d7862974083e21ba13cae', 'nbf': 1718450274, 'csrf': 'e83e849a-1d0f-4da9-9282-de1ad237a638', 'exp': 1718451174}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d7862974083e21ba13cae'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Mtq7JM0wg97TQimZ$f40b78d65feb9a20d1059c4631716c250759273b71de695749790118dccfb0c5d9f656a96b7e8e45190ab3f7fc2415069432288828a03a78586575fa1cc73061', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 30, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450301, 'jti': 'dbdec463-c144-44d3-989e-9779f5e03118', 'type': 'access', 'sub': '666d787c9e77939b3a841b69', 'nbf': 1718450301, 'csrf': 'f7f4b81d-e8ba-4a64-8e94-77b841cba4cb', 'exp': 1718451201}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d787c9e77939b3a841b69'), email='admin@test.com', password='__hash__scrypt:32768:8:1$2xT3Reso4QJnc7fj$40bea82db75acc13042091b43e7f22ced1306566428b66e09563da3c08116a465b9e41455c1eb4dbd194a10779e8964d22e08eec0e7ff7270afcbd5f58bc86c3', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450301, 'jti': 'ed35ee4d-6943-4dee-82b8-ddc074183d19', 'type': 'access', 'sub': '666d787d9e77939b3a841b6c', 'nbf': 1718450301, 'csrf': '756e441b-1319-4900-9c87-5a4aa21b379d', 'exp': 1718451201}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d787d9e77939b3a841b6c'), email='admin@test.com', password='__hash__scrypt:32768:8:1$wN2luoFHqk8r4Z2u$69bcef9fda5713a6e07fc8a2e4386dd88b291d21ddb330717888623f190e818e1da8ed35e77d9e40f2ac1cd2bd61994f7f0ad239e1c42042343660d001950148', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 30, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450301, 'jti': '8b0f53e0-512c-4c51-b5a1-9e9d75f1726f', 'type': 'access', 'sub': '666d787d9e77939b3a841b6e', 'nbf': 1718450301, 'csrf': '22e5c59e-1e31-4659-86ae-124209ba2a07', 'exp': 1718451201}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d787d9e77939b3a841b6e'), email='admin@test.com', password='__hash__scrypt:32768:8:1$0LecLPhzQbFFO6gU$472c4c038d7155e806384ed12c706b1fd6e8946e8d14797339f5cfa8181c179e08b6fe6e098b3f33990bb3b6611e802cdb28fc329417bba084076001a86ba16f', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 30, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450301, 'jti': '0a9ca894-f67f-44c5-a262-1e4e12976962', 'type': 'access', 'sub': '666d787d9e77939b3a841b70', 'nbf': 1718450301, 'csrf': '1e79f6b1-9504-4637-8380-75f435436b72', 'exp': 1718451201}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d787d9e77939b3a841b70'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Q0r6F1wJ51h2Ij57$9508d573a05d91277cff069d8ee01eb02786527242765146535530801dec938b9a47f3afcd4b745cf935b82654efd618c3009f5ca2f988bb9daafb9bac08b177', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 30, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450301, 'jti': '43a88e89-636e-4a51-b219-813d2e2e8769', 'type': 'access', 'sub': '666d787d9e77939b3a841b72', 'nbf': 1718450301, 'csrf': '78817709-95c6-409b-b1ca-918050c0563a', 'exp': 1718451201}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d787d9e77939b3a841b72'), email='admin@test.com', password='__hash__scrypt:32768:8:1$S2KEAJyjyGtEt4gd$9aff25000bb6b69a8e7772e4140894639298772807d71511aeb745d971a0ebde65c7560c9f5f6046537a8c4929c1c009e030236ae74cd4ebe4b62fdb2942602d', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 30, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450301, 'jti': '4a3b4cb6-833a-4846-9fd3-37b1f02ffcc4', 'type': 'access', 'sub': '666d787d9e77939b3a841b74', 'nbf': 1718450301, 'csrf': 'f6dcf771-587b-4180-a526-62fe955c5f5e', 'exp': 1718451201}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d787d9e77939b3a841b74'), email='admin@test.com', password='__hash__scrypt:32768:8:1$EhEASBn4OvshuCpB$38c8d519d3693f538642ccda248dd6fa7b47bdf85bd104e51696405b534d3abb58d576dce284dc453bc8621b2e9ec4ca19c27ee31151f1e9a712ced557d1c65f', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 30, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450339, 'jti': '945a3424-7f59-449c-9242-ee75d653be32', 'type': 'access', 'sub': '666d78a3dbe51f257d30a345', 'nbf': 1718450339, 'csrf': 'a533e6d7-ab4a-464f-8f2e-caad533f8373', 'exp': 1718451239}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d78a3dbe51f257d30a345'), email='admin@test.com', password='__hash__scrypt:32768:8:1$2S0EoLGk38MXMqZK$befa7d4eb7e4500864886eb326674b91342b531acba69738914ec8fbddb1621b25fda75b42c529efa7ff186b2a27419cf180985b2fdfaa2b6ab2971a45c86da2', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450339, 'jti': '8f74cf43-b8d7-408e-8ebf-6fc776ad9af3', 'type': 'access', 'sub': '666d78a3dbe51f257d30a348', 'nbf': 1718450339, 'csrf': 'f73279d1-dac6-45ff-98fd-c86a4c8a3499', 'exp': 1718451239}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d78a3dbe51f257d30a348'), email='admin@test.com', password='__hash__scrypt:32768:8:1$KWRb8HySdmvvRhiT$ceaf15e38e7d235458ed2bfdbbadd0a54bfd03b21a22a433d62e565bb6476532168ecc7ad29a53e19e941cb845b6b561025b129585b3cd54ffda1a9a7789d073', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 30, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450340, 'jti': 'ba20be67-4596-4590-8f11-119139724b9d', 'type': 'access', 'sub': '666d78a4dbe51f257d30a34a', 'nbf': 1718450340, 'csrf': 'b5f6d705-5904-4fad-bb0b-ff62d865584f', 'exp': 1718451240}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d78a4dbe51f257d30a34a'), email='admin@test.com', password='__hash__scrypt:32768:8:1$KFsihRgRpGyBEIMG$6099c4a0097af9f73da3778ee494f72a6e86434c1b118ea8b3f67b7e160c867dfa658c5aa8476eac4864b1c1d405f4b96489e37b3b8bc01495eb2fe2d049591f', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 30, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450340, 'jti': 'f279e318-1324-4f9a-9591-38e616fccee2', 'type': 'access', 'sub': '666d78a4dbe51f257d30a34c', 'nbf': 1718450340, 'csrf': '9cf5f681-0f79-4704-b364-0aa839311310', 'exp': 1718451240}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d78a4dbe51f257d30a34c'), email='admin@test.com', password='__hash__scrypt:32768:8:1$AeTZ2wmch2RYDQAx$a261fce8c155e52837ec74229659dbd280b26074d1e8b2609b91290a899e6dc646dd98e77fe89f6d4bd77c8a2bbc1fdcf3838b103b11d75f3105fabc9a645cf6', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 30, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450340, 'jti': 'ed79902c-a56c-45d5-986e-ba6a93049120', 'type': 'access', 'sub': '666d78a4dbe51f257d30a34e', 'nbf': 1718450340, 'csrf': '82eeb4e2-f2d9-4516-8e1b-5709e048ca20', 'exp': 1718451240}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d78a4dbe51f257d30a34e'), email='admin@test.com', password='__hash__scrypt:32768:8:1$VbrXoxSUBuXKAlzr$1dcc534710e124ec9db24d9ce6012108f048e6931f8bec2cedd6c7bd0b8ebb3e41b6dbfe13288854c39298dd773debf986740b0461846759cc0df39cc3fffd8b', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 30, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450340, 'jti': 'f3d17c8a-c672-4d6a-8fa1-1b82e155be4b', 'type': 'access', 'sub': '666d78a4dbe51f257d30a350', 'nbf': 1718450340, 'csrf': '4bc1c4c3-0930-44b5-a14d-fb6de15ba817', 'exp': 1718451240}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d78a4dbe51f257d30a350'), email='admin@test.com', password='__hash__scrypt:32768:8:1$R03ez2pHWsaTDAzn$739cae2d946a2ec4775ff8a06d0d01a9496e68fc7924b1477e32b886b2d6ca964232bdd319ad64ba166c456e8dddfd74b651d03200cb3928dedb1b2c51c3d6c0', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 30, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450340, 'jti': '3b0774cb-71b7-42a0-a611-b3b36b624f2c', 'type': 'access', 'sub': '666d78a4dbe51f257d30a352', 'nbf': 1718450340, 'csrf': '8b99c4e4-e9d9-432c-a87e-fb1fa298d9a3', 'exp': 1718451240}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d78a4dbe51f257d30a352'), email='admin@test.com', password='__hash__scrypt:32768:8:1$ql1II9cYAJtNeLbc$5d19980476ad6c0a3d192f5b576e7fda2017d80cea3929593f983b65f300fffa46e45b31a8b811f66ad1310309df5374af30f4d262688afc92a119505914b06f', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 30, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450356, 'jti': '6812cd58-d95a-4c81-8910-1e0773d21313', 'type': 'access', 'sub': '666d78b4635786b84d978e38', 'nbf': 1718450356, 'csrf': '2f11f674-ef45-42ef-b6b9-534ec9099d89', 'exp': 1718451256}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d78b4635786b84d978e38'), email='admin@test.com', password='__hash__scrypt:32768:8:1$WdOl7b6zdb0c2fRu$da46ebfeab3162c8f0e9ca3516f19ebb7ef08bb4c3ed09c33719caa4a9ecacce39d6c97ad93c4ffe8f4a00aada96adbaf5deb929341ea25629f77c9e7a6ae148', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450356, 'jti': 'a9f3036d-a55d-4c77-9659-6a459243eee3', 'type': 'access', 'sub': '666d78b4635786b84d978e3b', 'nbf': 1718450356, 'csrf': '2aacecf0-dacb-4f14-be33-ce8a148ed21f', 'exp': 1718451256}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d78b4635786b84d978e3b'), email='admin@test.com', password='__hash__scrypt:32768:8:1$LgKxg7BD3k217dma$bb7786d23b7e785fab6a6883264cfa655ec166cf05f0ccb6c201ccb2c9b52c953ff221d69065b8757f86f3c5082cb5d1b92a92885ad6d16a840766f8ff8e5e28', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 30, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450356, 'jti': 'c60c21ea-da67-4a5e-a700-8b472f8da6cb', 'type': 'access', 'sub': '666d78b4635786b84d978e3d', 'nbf': 1718450356, 'csrf': '45008040-93ad-4930-99b5-b6802b45e5d9', 'exp': 1718451256}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d78b4635786b84d978e3d'), email='admin@test.com', password='__hash__scrypt:32768:8:1$27k7PGWCwYfVovES$9993870be68183dfbce8a059fd43613ea8c904e4cc55f948366f405ed8a87d9afc2d0fd94960d194b65751fe159421da653c0533bc9d1aa674de689c84079f94', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 30, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450356, 'jti': '7ca5511d-a126-4d12-a97a-89246aa6290b', 'type': 'access', 'sub': '666d78b4635786b84d978e3f', 'nbf': 1718450356, 'csrf': '364de711-683a-4d47-952f-540d47458b40', 'exp': 1718451256}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d78b4635786b84d978e3f'), email='admin@test.com', password='__hash__scrypt:32768:8:1$yBQDAviJ7Y9OA60J$49e8b3916cad0971831f2213bdfa5a334fbd101fb3d9bdf6cf620d78f9046433af7a1421cbdde21f66a6aa9b90c83e2bbb5852c514253ae1bbe2a16f1b83ff73', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 30, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450356, 'jti': '49700636-872f-4482-9dad-75917f163f3d', 'type': 'access', 'sub': '666d78b4635786b84d978e41', 'nbf': 1718450356, 'csrf': 'f6f0f907-8e65-4dc3-bdb9-957369462c1b', 'exp': 1718451256}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d78b4635786b84d978e41'), email='admin@test.com', password='__hash__scrypt:32768:8:1$wbo03QCOG4vjOMUy$67b8090c146c92204872f471b365bfd3915c85dc5cfc6b4e4f5b662de6df88e732938181b67a7a9d7d89c5370d4eda41091655e9acf2e05f54e0a975426e9b2c', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 30, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450357, 'jti': '4b6c34b5-e542-4317-ab48-1045a38bf589', 'type': 'access', 'sub': '666d78b5635786b84d978e43', 'nbf': 1718450357, 'csrf': 'e6ce0192-4c9c-4cde-b2ac-992ab4dbfb29', 'exp': 1718451257}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d78b5635786b84d978e43'), email='admin@test.com', password='__hash__scrypt:32768:8:1$0Ay450HxDz8pU9dZ$b98ed96abe107d32470dfc1aceb88746391e6db2b8d31f49413f6d9768ad8a89e378d27e1210198c89a9f23fe0d9f9db3172d8cb58f92440778b9f9c8e14c7b9', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450357, 'jti': '9566bb6f-8f21-44b5-a434-ff3c50a1c68a', 'type': 'access', 'sub': '666d78b5635786b84d978e46', 'nbf': 1718450357, 'csrf': '87a0ea5b-3625-40b5-8b44-01cdc11de2fe', 'exp': 1718451257}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d78b5635786b84d978e46'), email='admin@test.com', password='__hash__scrypt:32768:8:1$aEfVBq2solNaKPj4$fad6b468aaaa6c99182e6e7f0713bd9a882daf784dcbdc7c0a1221c31a89e2a417b17b45fb7bd1dd706f2eee7678676ab58a7dc363cee59ff21c1a83970071f0', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718450357, 'jti': '9566bb6f-8f21-44b5-a434-ff3c50a1c68a', 'type': 'access', 'sub': '666d78b5635786b84d978e46', 'nbf': 1718450357, 'csrf': '87a0ea5b-3625-40b5-8b44-01cdc11de2fe', 'exp': 1718451257}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d78b5635786b84d978e46'), email='admin@test.com', password='__hash__scrypt:32768:8:1$aEfVBq2solNaKPj4$fad6b468aaaa6c99182e6e7f0713bd9a882daf784dcbdc7c0a1221c31a89e2a417b17b45fb7bd1dd706f2eee7678676ab58a7dc363cee59ff21c1a83970071f0', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:Public Official already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = public_official_service.create_public_official(public_official)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\publicofficial_data_manager_mongodb.py", line 14, in create_public_official
    raise ObjectAlreadyExistsException("Public Official already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: Public Official already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718451172, 'jti': '9ec707ee-d913-4353-9d14-265b73bc4d5f', 'type': 'access', 'sub': '666d7be4e03f638e43280de6', 'nbf': 1718451172, 'csrf': '3344ddd6-382a-4dbf-8d7f-49f2d686281c', 'exp': 1718452072}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d7be4e03f638e43280de6'), email='admin@test.com', password='__hash__scrypt:32768:8:1$WJOH9u8tKSO4nWNr$660a95d09a697b48069506cdee50cb76bbab889a6d75ac47a62c87c4472e58bf17f98f79a531768b217f17452564bb4c1511a31d18a8ec4bc040814cb6f861aa', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718451207, 'jti': 'b9170889-b4ef-4208-8b3b-e5c5f64a4f06', 'type': 'access', 'sub': '666d7c070477c0def6d136c9', 'nbf': 1718451207, 'csrf': '4215a30c-0f80-4d86-ba4d-51d1f6229bb9', 'exp': 1718452107}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d7c070477c0def6d136c9'), email='admin@test.com', password='__hash__scrypt:32768:8:1$huPTxBfOnX6GE6mf$940747791e0dc2bfcf255d08503917c2c1da8347e96abcb7028567bbf5ea38b3719f3539b7d46ea4401999f390e940e449ccaac0168080f0934e1ed0834b4344', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718451247, 'jti': '41d2b9f1-f238-484d-a4b6-51048b215479', 'type': 'access', 'sub': '666d7c2fe8d7b0435bbb465a', 'nbf': 1718451247, 'csrf': 'dd5998a0-3439-48f0-b741-428bf3c93dc3', 'exp': 1718452147}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d7c2fe8d7b0435bbb465a'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Li4ELmrH8ooLmfmx$4adb45c78a89487a4c5bcc18da32843693c5a870557ff80fa2bcb3ec8851b0e2970558ae0ea7b0b78d488202585d2a974ce67ffe91502bbbf762951a4a453f0f', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718451281, 'jti': '4174c933-fddb-4007-a64e-e3b16737caf2', 'type': 'access', 'sub': '666d7c5125272ea3a5aa1297', 'nbf': 1718451281, 'csrf': 'ee41dd23-75da-4c72-bfdb-c781d916f7a0', 'exp': 1718452181}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d7c5125272ea3a5aa1297'), email='admin@test.com', password='__hash__scrypt:32768:8:1$spLJ6PUnrE5NpJXC$370e8e4cca51e45d495ed8e9b87b0744201a33e273ddfea11a87e90528c203ee054754cf62c8a4da7bdeaa6cf5b7d867a6d76a0323e6ae2bcd9e5e127d6ed395', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting public official by ID 666d7c5125272ea3a5aa1298
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718451295, 'jti': 'd85a86c4-5e03-4410-9c69-7378b80f2aa5', 'type': 'access', 'sub': '666d7c5f1a09e4c1cca64b5f', 'nbf': 1718451295, 'csrf': '7e172e0c-074e-40d9-8a72-26646969348a', 'exp': 1718452195}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d7c5f1a09e4c1cca64b5f'), email='admin@test.com', password='__hash__scrypt:32768:8:1$m6lMzqmDJZ29ImFk$2568810205be70c31147353742367d85f6246b885dbf89a83267c7534d037932d875c8627e5f582911303a19badf1e032bf61f96417ee8a8bcfab6ae7d02e1ae', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting public official by ID 666d7c5f1a09e4c1cca64b60
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718451778, 'jti': '5be3f7ae-074f-482a-aae9-f59ad2718681', 'type': 'access', 'sub': '666d7e424554505b89266d77', 'nbf': 1718451778, 'csrf': 'a082c094-3966-449c-94ba-d9d08e8754c1', 'exp': 1718452678}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d7e424554505b89266d77'), email='admin@test.com', password='__hash__scrypt:32768:8:1$IXA5uFIigJivhkGd$2366a05dcea4c64f9f5e30deb9fa6746d01447cb35ca4ed694a9e8720ece3dc62f72f7ab344447ce2742d1c8cf4542422329330155319ce40bfadc5fd440cd4b', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718451778, 'jti': '5be3f7ae-074f-482a-aae9-f59ad2718681', 'type': 'access', 'sub': '666d7e424554505b89266d77', 'nbf': 1718451778, 'csrf': 'a082c094-3966-449c-94ba-d9d08e8754c1', 'exp': 1718452678}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7e424554505b89266d78')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453058, 'jti': '05346a38-6db3-46c8-9a52-2d125fc2912e', 'type': 'access', 'sub': '666d8342eef29ddb0d773fe6', 'nbf': 1718453058, 'csrf': '843b8c89-0cb3-487e-9b0d-308cf674d0c4', 'exp': 1718453958}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8342eef29ddb0d773fe6'), email='admin@test.com', password='__hash__scrypt:32768:8:1$esm2Wp9r613NE3tM$d1dd39337e71934e38b5cbf122778c3fe994fa9a86cc370314e26a7ebd55e68ac678d56c484e61c50d5a72e95f4de952863740b1d891eb985c0b191eef0b6439', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453058, 'jti': '05346a38-6db3-46c8-9a52-2d125fc2912e', 'type': 'access', 'sub': '666d8342eef29ddb0d773fe6', 'nbf': 1718453058, 'csrf': '843b8c89-0cb3-487e-9b0d-308cf674d0c4', 'exp': 1718453958}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8342eef29ddb0d773fe7')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453058, 'jti': 'f52bbf53-8477-490f-98e5-f7e5983c6a50', 'type': 'access', 'sub': '666d8342eef29ddb0d773fe9', 'nbf': 1718453058, 'csrf': '83030455-46bb-4de9-a3bd-413b79b31854', 'exp': 1718453958}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8342eef29ddb0d773fe9'), email='admin@test.com', password='__hash__scrypt:32768:8:1$LgVljBBKrUKkU05O$ec12e0e2ea72071c523d4436de841b586c49198c5176bcdf6a06db92cd730d419a2484708555c922c3fe7ed8e5fddebe78e838884ed2055bf606f548bfe7b562', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453058, 'jti': 'f52bbf53-8477-490f-98e5-f7e5983c6a50', 'type': 'access', 'sub': '666d8342eef29ddb0d773fe9', 'nbf': 1718453058, 'csrf': '83030455-46bb-4de9-a3bd-413b79b31854', 'exp': 1718453958}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8342eef29ddb0d773fea')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453059, 'jti': '559edbe7-8207-451b-867a-e2ea236bef71', 'type': 'access', 'sub': '666d8343eef29ddb0d773fec', 'nbf': 1718453059, 'csrf': 'd6b3ed00-94e5-48a4-a965-29938e34b6e6', 'exp': 1718453959}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:'NoneType' object has no attribute 'model_dump_json'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 92, in update_public_official
    "public_official": po.model_dump_json( indent=4)
                       ^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'model_dump_json'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453059, 'jti': '1242941e-1a56-418c-beab-3c4d80b6bfa9', 'type': 'access', 'sub': '666d8343eef29ddb0d773fee', 'nbf': 1718453059, 'csrf': '728644ec-61bd-41c6-ab66-b63fc6f3363a', 'exp': 1718453959}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8343eef29ddb0d773fee'), email='admin@test.com', password='__hash__scrypt:32768:8:1$RgS8uUBa3cV8szrU$6599341e6f7d94ce4a736b6b13e9991bb1db693a4dfff2f047fc69593eaa6538de1be71dbbab0cb402f310cece88d9c35d416dae1cb918d04b8e42a7c11a5184', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453059, 'jti': '1242941e-1a56-418c-beab-3c4d80b6bfa9', 'type': 'access', 'sub': '666d8343eef29ddb0d773fee', 'nbf': 1718453059, 'csrf': '728644ec-61bd-41c6-ab66-b63fc6f3363a', 'exp': 1718453959}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8343eef29ddb0d773fef')
INFO:app.extensions:po_data={'name_eng': 'newname123', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453059, 'jti': '92bf4115-410a-45a0-9866-09d64f70260d', 'type': 'access', 'sub': '666d8343eef29ddb0d773ff1', 'nbf': 1718453059, 'csrf': '12d9b4a5-626e-44de-a59d-5992e27b3fb3', 'exp': 1718453959}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8343eef29ddb0d773ff1'), email='admin@test.com', password='__hash__scrypt:32768:8:1$D0Vax0NhQPTqhOl8$90153f22428eb6f13231e1c037a219db051bbdb3febaf845b25eb1c8a45fc4a3d20781f569dd528f205c644165ac893b25fbb23a7568c53ef010b4624b5dadf3', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453059, 'jti': '92bf4115-410a-45a0-9866-09d64f70260d', 'type': 'access', 'sub': '666d8343eef29ddb0d773ff1', 'nbf': 1718453059, 'csrf': '12d9b4a5-626e-44de-a59d-5992e27b3fb3', 'exp': 1718453959}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8343eef29ddb0d773ff2')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטי134man', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453059, 'jti': 'f84fc2bc-6400-4451-8004-7070a027117d', 'type': 'access', 'sub': '666d8343eef29ddb0d773ff4', 'nbf': 1718453059, 'csrf': '981e9e7f-7b7e-4978-b6a9-bb3e1c1faf40', 'exp': 1718453959}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8343eef29ddb0d773ff4'), email='admin@test.com', password='__hash__scrypt:32768:8:1$ajUHarO1X6ZTRaYG$606b947754b310e4341bf3c44fa20e3bbc6948ca507f3cd9ccb13379a3fa1a3f89efd90511a13345689745451c707a13a47d145fea4a2f4b1eaa01ff5edcfb24', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453059, 'jti': 'f84fc2bc-6400-4451-8004-7070a027117d', 'type': 'access', 'sub': '666d8343eef29ddb0d773ff4', 'nbf': 1718453059, 'csrf': '981e9e7f-7b7e-4978-b6a9-bb3e1c1faf40', 'exp': 1718453959}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8343eef29ddb0d773ff5')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'myposition123', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453060, 'jti': '069e3dbb-8f4a-4e44-a6fa-0b1059644d12', 'type': 'access', 'sub': '666d8343eef29ddb0d773ff7', 'nbf': 1718453060, 'csrf': 'c626b5f0-3c0b-4051-8e41-bb34ccb8b95b', 'exp': 1718453960}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8343eef29ddb0d773ff7'), email='admin@test.com', password='__hash__scrypt:32768:8:1$rGyzXX9uMMfDpeBB$3a7177fb8f95682cfb50a18d0cabd420b5fe4643a19d0624424b94c676d5438f1b5565deed4b60721dbd9c0bc7905118f1853d479415cc4e969055c2c7ddf972', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453060, 'jti': '069e3dbb-8f4a-4e44-a6fa-0b1059644d12', 'type': 'access', 'sub': '666d8343eef29ddb0d773ff7', 'nbf': 1718453060, 'csrf': 'c626b5f0-3c0b-4051-8e41-bb34ccb8b95b', 'exp': 1718453960}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8344eef29ddb0d773ff8')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'myspace': 'myhandle', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453102, 'jti': '38a53191-fda4-4f34-a0b1-fecc04e5cb04', 'type': 'access', 'sub': '666d836ebf6b853239d2a545', 'nbf': 1718453102, 'csrf': '69ec1365-4902-49df-983f-1dd708c5b070', 'exp': 1718454002}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d836ebf6b853239d2a545'), email='admin@test.com', password='__hash__scrypt:32768:8:1$gPf2tqEfnP4dQXBu$4227a6162d7bcbce5a3542f413469e54e9f6ebb3ad85fd6c9bf50ec94156eebd77a8abd36fb03282d518a1830ba75242c3faa8f0a046e8193620dfd5ea12656b', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453102, 'jti': '38a53191-fda4-4f34-a0b1-fecc04e5cb04', 'type': 'access', 'sub': '666d836ebf6b853239d2a545', 'nbf': 1718453102, 'csrf': '69ec1365-4902-49df-983f-1dd708c5b070', 'exp': 1718454002}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d836ebf6b853239d2a546')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453102, 'jti': '2deeef34-8d46-45b3-a3e7-fd1fcc434549', 'type': 'access', 'sub': '666d836ebf6b853239d2a548', 'nbf': 1718453102, 'csrf': '924eb6a6-a285-4747-b2f5-b0430d8ba978', 'exp': 1718454002}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d836ebf6b853239d2a548'), email='admin@test.com', password='__hash__scrypt:32768:8:1$pnmiCZg9V6QTacJ2$9d73b9339139459e058c56780c67ae21a558f4b0a8228657fa16bd8a9c7fce3e73fb81cf8cc190f380a60e25733d5c8bfbf602ab278ba5192144d87b0138fdde', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453102, 'jti': '2deeef34-8d46-45b3-a3e7-fd1fcc434549', 'type': 'access', 'sub': '666d836ebf6b853239d2a548', 'nbf': 1718453102, 'csrf': '924eb6a6-a285-4747-b2f5-b0430d8ba978', 'exp': 1718454002}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d836ebf6b853239d2a549')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453102, 'jti': 'd4323ce3-5c97-4f71-95e4-ac735b2d3407', 'type': 'access', 'sub': '666d836ebf6b853239d2a54b', 'nbf': 1718453102, 'csrf': 'bce0b347-95ee-4927-8d85-270eac060851', 'exp': 1718454002}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453102, 'jti': '21768982-bbf7-4d3f-b1a9-5c87ebb0668e', 'type': 'access', 'sub': '666d836ebf6b853239d2a54d', 'nbf': 1718453102, 'csrf': 'a5df57ee-2d3a-457a-be19-23670e0db31f', 'exp': 1718454002}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d836ebf6b853239d2a54d'), email='admin@test.com', password='__hash__scrypt:32768:8:1$ve92CsSUf7IBynhA$e3ebf8d00afbadf877976751428dbc70044b8f59e421fb88cf95e9719ecefbbb7ba3f691ce270f725ea894ee3106bc20e4446e3af30e3088c62b58cbc102bd0e', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453102, 'jti': '21768982-bbf7-4d3f-b1a9-5c87ebb0668e', 'type': 'access', 'sub': '666d836ebf6b853239d2a54d', 'nbf': 1718453102, 'csrf': 'a5df57ee-2d3a-457a-be19-23670e0db31f', 'exp': 1718454002}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d836ebf6b853239d2a54e')
INFO:app.extensions:po_data={'name_eng': 'newname123', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453102, 'jti': '48dbbccc-f0d4-4d36-a5ea-b9f92f5ec3a4', 'type': 'access', 'sub': '666d836ebf6b853239d2a550', 'nbf': 1718453102, 'csrf': '9d958dbb-168b-421b-87ca-1d69bb4cdafb', 'exp': 1718454002}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d836ebf6b853239d2a550'), email='admin@test.com', password='__hash__scrypt:32768:8:1$I61rbTgu9JPViMtk$394f51fd48870702c5ce7ea4d49b1bea607bb15d76f237d5d1b47ea92b195add027e9eb92273fb05da9a7db32da0f7bb1c6ff6554ed0ee663dc04b021616ae98', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453102, 'jti': '48dbbccc-f0d4-4d36-a5ea-b9f92f5ec3a4', 'type': 'access', 'sub': '666d836ebf6b853239d2a550', 'nbf': 1718453102, 'csrf': '9d958dbb-168b-421b-87ca-1d69bb4cdafb', 'exp': 1718454002}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d836ebf6b853239d2a551')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטי134man', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453103, 'jti': 'f367a9da-0634-45aa-98bc-23cdfba8c383', 'type': 'access', 'sub': '666d836ebf6b853239d2a553', 'nbf': 1718453103, 'csrf': 'bdaa6285-bba0-4446-8508-2f3f90d01185', 'exp': 1718454003}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d836ebf6b853239d2a553'), email='admin@test.com', password='__hash__scrypt:32768:8:1$V0FiTnCqYCpoC74w$1ca06ba39c481095a756c9597c092bdd568314192cfcf12c1dfed727c0c8493eed6a21a98eee81d8cce3dd0bf7100f2fb3ed25622f16c4f85b85f86244d07de9', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453103, 'jti': 'f367a9da-0634-45aa-98bc-23cdfba8c383', 'type': 'access', 'sub': '666d836ebf6b853239d2a553', 'nbf': 1718453103, 'csrf': 'bdaa6285-bba0-4446-8508-2f3f90d01185', 'exp': 1718454003}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d836fbf6b853239d2a554')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'myposition123', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453103, 'jti': 'a8e60860-cc04-4329-a856-19f73d1ecfda', 'type': 'access', 'sub': '666d836fbf6b853239d2a556', 'nbf': 1718453103, 'csrf': 'd7ab5895-9bdc-4a94-a9d3-0d2bca3ce3d3', 'exp': 1718454003}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d836fbf6b853239d2a556'), email='admin@test.com', password='__hash__scrypt:32768:8:1$VRQRk1CE77YkVMOS$2b6608877ebfd6f133460136c321dcdcd0277a65b18c89b7d6b3f4e624f6e87688b1a5a1152791054232aeadadf7eb00524ae1b3dea012cd1b8363f544ec0efc', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453103, 'jti': 'a8e60860-cc04-4329-a856-19f73d1ecfda', 'type': 'access', 'sub': '666d836fbf6b853239d2a556', 'nbf': 1718453103, 'csrf': 'd7ab5895-9bdc-4a94-a9d3-0d2bca3ce3d3', 'exp': 1718454003}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d836fbf6b853239d2a557')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'myspace': 'myhandle', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453395, 'jti': '27751b36-4710-4850-9a80-fa79f3f7e276', 'type': 'access', 'sub': '666d84930b4cd86624c975ce', 'nbf': 1718453395, 'csrf': 'a1c4a2f5-d51f-43c4-ab5b-cdfadc3af4eb', 'exp': 1718454295}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d84930b4cd86624c975ce'), email='admin@test.com', password='__hash__scrypt:32768:8:1$X9vBiVUHWiBVkYKp$8aca86a4de6b07563ebb30a9b7bf727a32e00ef7790b9fa6e0a5cc75a5829f118070f4dac13f1a577602d9182c6ef971dfc6c4e74c2f4cfc8c681d2cc3c4488e', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453395, 'jti': '27751b36-4710-4850-9a80-fa79f3f7e276', 'type': 'access', 'sub': '666d84930b4cd86624c975ce', 'nbf': 1718453395, 'csrf': 'a1c4a2f5-d51f-43c4-ab5b-cdfadc3af4eb', 'exp': 1718454295}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d84930b4cd86624c975ce'), email='admin@test.com', password='__hash__scrypt:32768:8:1$X9vBiVUHWiBVkYKp$8aca86a4de6b07563ebb30a9b7bf727a32e00ef7790b9fa6e0a5cc75a5829f118070f4dac13f1a577602d9182c6ef971dfc6c4e74c2f4cfc8c681d2cc3c4488e', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453395, 'jti': '27751b36-4710-4850-9a80-fa79f3f7e276', 'type': 'access', 'sub': '666d84930b4cd86624c975ce', 'nbf': 1718453395, 'csrf': 'a1c4a2f5-d51f-43c4-ab5b-cdfadc3af4eb', 'exp': 1718454295}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d84930b4cd86624c975ce'), email='admin@test.com', password='__hash__scrypt:32768:8:1$X9vBiVUHWiBVkYKp$8aca86a4de6b07563ebb30a9b7bf727a32e00ef7790b9fa6e0a5cc75a5829f118070f4dac13f1a577602d9182c6ef971dfc6c4e74c2f4cfc8c681d2cc3c4488e', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting public official by ID all
ERROR:app.extensions:'all' is not a valid ObjectId, it must be a 12-byte input or a 24-character hex string
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 50, in get_public_official_by_id
    public_official = public_official_service.get_public_official_by_id(public_official_id=po_id)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\publicofficial_data_manager_mongodb.py", line 23, in get_public_official_by_id
    po_dict = get_public_official_collection().find_one({"_id":ObjectId(public_official_id)})
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\bson\objectid.py", line 103, in __init__
    self.__validate(oid)
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\bson\objectid.py", line 201, in __validate
    _raise_invalid_id(oid)
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\bson\objectid.py", line 35, in _raise_invalid_id
    raise InvalidId(
bson.errors.InvalidId: 'all' is not a valid ObjectId, it must be a 12-byte input or a 24-character hex string
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453410, 'jti': '7ef48b13-168e-488f-bf6f-faa1ac059beb', 'type': 'access', 'sub': '666d84a241768d4a5bc4fc87', 'nbf': 1718453410, 'csrf': '856d8600-a6ac-41c0-bdaf-8411e028312e', 'exp': 1718454310}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d84a241768d4a5bc4fc87'), email='admin@test.com', password='__hash__scrypt:32768:8:1$HWv1cHyXkM3Aad3O$f8c47c9570ed0302b9c4fc9e603a9ff5c3282275ef35afa0033a1c80a0324db363da59946434e96b57dd2f0aed59b400fa14b2d4a76e00ce869636b7d0eb7a39', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453410, 'jti': '7ef48b13-168e-488f-bf6f-faa1ac059beb', 'type': 'access', 'sub': '666d84a241768d4a5bc4fc87', 'nbf': 1718453410, 'csrf': '856d8600-a6ac-41c0-bdaf-8411e028312e', 'exp': 1718454310}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d84a241768d4a5bc4fc87'), email='admin@test.com', password='__hash__scrypt:32768:8:1$HWv1cHyXkM3Aad3O$f8c47c9570ed0302b9c4fc9e603a9ff5c3282275ef35afa0033a1c80a0324db363da59946434e96b57dd2f0aed59b400fa14b2d4a76e00ce869636b7d0eb7a39', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453410, 'jti': '7ef48b13-168e-488f-bf6f-faa1ac059beb', 'type': 'access', 'sub': '666d84a241768d4a5bc4fc87', 'nbf': 1718453410, 'csrf': '856d8600-a6ac-41c0-bdaf-8411e028312e', 'exp': 1718454310}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d84a241768d4a5bc4fc87'), email='admin@test.com', password='__hash__scrypt:32768:8:1$HWv1cHyXkM3Aad3O$f8c47c9570ed0302b9c4fc9e603a9ff5c3282275ef35afa0033a1c80a0324db363da59946434e96b57dd2f0aed59b400fa14b2d4a76e00ce869636b7d0eb7a39', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453441, 'jti': '70d8375e-da4f-4cca-a9d1-95b378449943', 'type': 'access', 'sub': '666d84c1fa12faa01338fc0e', 'nbf': 1718453441, 'csrf': 'ccfa8209-c669-4500-8450-2f20027ae49d', 'exp': 1718454341}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d84c1fa12faa01338fc0e'), email='admin@test.com', password='__hash__scrypt:32768:8:1$lAcsAgPFm0etaC5C$6c8fcfdca5df0da5e8745779f9f045b5dd9538766cee7bc61c7de7f3e49f7fe32fc023d160e20adb8318ade85eeb7dc1219c5d6458a3cf4cfaf8e7c6ed9ff9f3', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453441, 'jti': '70d8375e-da4f-4cca-a9d1-95b378449943', 'type': 'access', 'sub': '666d84c1fa12faa01338fc0e', 'nbf': 1718453441, 'csrf': 'ccfa8209-c669-4500-8450-2f20027ae49d', 'exp': 1718454341}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d84c1fa12faa01338fc0e'), email='admin@test.com', password='__hash__scrypt:32768:8:1$lAcsAgPFm0etaC5C$6c8fcfdca5df0da5e8745779f9f045b5dd9538766cee7bc61c7de7f3e49f7fe32fc023d160e20adb8318ade85eeb7dc1219c5d6458a3cf4cfaf8e7c6ed9ff9f3', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453441, 'jti': '70d8375e-da4f-4cca-a9d1-95b378449943', 'type': 'access', 'sub': '666d84c1fa12faa01338fc0e', 'nbf': 1718453441, 'csrf': 'ccfa8209-c669-4500-8450-2f20027ae49d', 'exp': 1718454341}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d84c1fa12faa01338fc0e'), email='admin@test.com', password='__hash__scrypt:32768:8:1$lAcsAgPFm0etaC5C$6c8fcfdca5df0da5e8745779f9f045b5dd9538766cee7bc61c7de7f3e49f7fe32fc023d160e20adb8318ade85eeb7dc1219c5d6458a3cf4cfaf8e7c6ed9ff9f3', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453579, 'jti': 'eb87742d-0f22-472e-bc14-f3740eb3a5a5', 'type': 'access', 'sub': '666d854bb663df909595e9d8', 'nbf': 1718453579, 'csrf': 'a2494fea-cbd9-4f73-a7c1-a505157084e8', 'exp': 1718454479}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d854bb663df909595e9d8'), email='admin@test.com', password='__hash__scrypt:32768:8:1$gX9MZdbaC1uQ1prl$a01f8d43769f798d2888938a03b617fac7eb335eb79f31bcf36bcc5773ae50473023742440050eb34fb43bda625856ac8814c12801dcbff17b7f20e7e5b5a7c5', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453579, 'jti': 'eb87742d-0f22-472e-bc14-f3740eb3a5a5', 'type': 'access', 'sub': '666d854bb663df909595e9d8', 'nbf': 1718453579, 'csrf': 'a2494fea-cbd9-4f73-a7c1-a505157084e8', 'exp': 1718454479}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d854bb663df909595e9d9')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453579, 'jti': '3b8dec04-cec0-441c-842e-f49e76649281', 'type': 'access', 'sub': '666d854bb663df909595e9db', 'nbf': 1718453579, 'csrf': 'a4e46664-2e36-42f4-ad70-b0e009d4033c', 'exp': 1718454479}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d854bb663df909595e9db'), email='admin@test.com', password='__hash__scrypt:32768:8:1$dcU1nM7KvtYVLRiA$9ad5dd682287f4f070a33d8db3dc6a45d142bde8c3edc245107e75cd1909eaaaa8de9c77ff98e3687761c0a653626b1e66c757fb4a885242f091d37a71e95af4', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453579, 'jti': '3b8dec04-cec0-441c-842e-f49e76649281', 'type': 'access', 'sub': '666d854bb663df909595e9db', 'nbf': 1718453579, 'csrf': 'a4e46664-2e36-42f4-ad70-b0e009d4033c', 'exp': 1718454479}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d854bb663df909595e9dc')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453579, 'jti': '27dc138c-2fa8-46cd-9b6e-f34e9229b7f8', 'type': 'access', 'sub': '666d854bb663df909595e9de', 'nbf': 1718453579, 'csrf': 'b59b49d8-c67e-4f67-99d1-df4c26e6e087', 'exp': 1718454479}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453579, 'jti': '588dfc02-9ec7-409f-9ba0-09540c95380a', 'type': 'access', 'sub': '666d854bb663df909595e9e0', 'nbf': 1718453579, 'csrf': '5737380c-2bb9-43c4-a496-21853670d4ac', 'exp': 1718454479}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d854bb663df909595e9e0'), email='admin@test.com', password='__hash__scrypt:32768:8:1$SGOE2aJIgYqbrXx4$580585f15e59fd04a86a71111d94661437e825f3949486c1227bc4fb127e633e5add87d24bb0848aa74b7230f6da7f6d85102423749fab65aa7510a7b3ef4b88', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453579, 'jti': '588dfc02-9ec7-409f-9ba0-09540c95380a', 'type': 'access', 'sub': '666d854bb663df909595e9e0', 'nbf': 1718453579, 'csrf': '5737380c-2bb9-43c4-a496-21853670d4ac', 'exp': 1718454479}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d854bb663df909595e9e1')
INFO:app.extensions:po_data={'name_eng': 'newname123', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453580, 'jti': '89bcff04-340e-4450-940f-160d1f35e76b', 'type': 'access', 'sub': '666d854bb663df909595e9e3', 'nbf': 1718453580, 'csrf': 'c08bbc2a-cd82-4cc9-a134-e75fc42a8f38', 'exp': 1718454480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d854bb663df909595e9e3'), email='admin@test.com', password='__hash__scrypt:32768:8:1$oBec1EPYLrJ45mE6$4ddd300777c5f915822e86f91f3b75ef1bdb45bd073af006217100b1e8f33f05a5206e8391ed896badbef0c16b1ca79ddea646f11b84aa731f81b1d360195f64', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453580, 'jti': '89bcff04-340e-4450-940f-160d1f35e76b', 'type': 'access', 'sub': '666d854bb663df909595e9e3', 'nbf': 1718453580, 'csrf': 'c08bbc2a-cd82-4cc9-a134-e75fc42a8f38', 'exp': 1718454480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d854cb663df909595e9e4')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטי134man', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453580, 'jti': '1b8c4384-29bc-4209-9d35-4fdbf516ea4f', 'type': 'access', 'sub': '666d854cb663df909595e9e6', 'nbf': 1718453580, 'csrf': '8dd3fe16-262f-479b-b79a-32be1addc714', 'exp': 1718454480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d854cb663df909595e9e6'), email='admin@test.com', password='__hash__scrypt:32768:8:1$9vhdOeMAnPt8kJRz$83d0bd28904a4c02c70f752bdbe033e036b8da9a0bbbd314b70a66cae7432b23d3095f7e5eb3687fc203012a3b6692c1951b60d0f0fa76f3aa7b624e63bb5fa1', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453580, 'jti': '1b8c4384-29bc-4209-9d35-4fdbf516ea4f', 'type': 'access', 'sub': '666d854cb663df909595e9e6', 'nbf': 1718453580, 'csrf': '8dd3fe16-262f-479b-b79a-32be1addc714', 'exp': 1718454480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d854cb663df909595e9e7')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'myposition123', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453580, 'jti': '5103575a-b85f-4056-b980-00457e1cadcf', 'type': 'access', 'sub': '666d854cb663df909595e9e9', 'nbf': 1718453580, 'csrf': '75dd0235-0e47-46d3-a0cc-2279b0e98ffc', 'exp': 1718454480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d854cb663df909595e9e9'), email='admin@test.com', password='__hash__scrypt:32768:8:1$KUjg4OETy40ocfJn$625368acbff23ac1eda6426690a88f48f0456d5680239e671270ad5c85a29776347cacacfe2e050d9e893d6f4f3a3ec8ee4a05e2049e4ced38e602bd8c6b8eaa', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453580, 'jti': '5103575a-b85f-4056-b980-00457e1cadcf', 'type': 'access', 'sub': '666d854cb663df909595e9e9', 'nbf': 1718453580, 'csrf': '75dd0235-0e47-46d3-a0cc-2279b0e98ffc', 'exp': 1718454480}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d854cb663df909595e9ea')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'myspace': 'myhandle', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453583, 'jti': 'ad4f3baf-087f-4842-8894-fd4c01970e7c', 'type': 'access', 'sub': '666d854f3b7c8a732352296a', 'nbf': 1718453583, 'csrf': '542544cc-ac10-48a9-88d5-4e27edcd9f1d', 'exp': 1718454483}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d854f3b7c8a732352296a'), email='admin@test.com', password='__hash__scrypt:32768:8:1$qyd3Bohyq4vVNRp6$ccd71749d2fddc5d0e4a8b551ea598066434d367ba062f5f4d38918c6f0420d1e3ef95a39aebfa26446de926ad52178de06135f8722c7877590ee0b5f192b389', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453583, 'jti': 'ad4f3baf-087f-4842-8894-fd4c01970e7c', 'type': 'access', 'sub': '666d854f3b7c8a732352296a', 'nbf': 1718453583, 'csrf': '542544cc-ac10-48a9-88d5-4e27edcd9f1d', 'exp': 1718454483}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d854f3b7c8a732352296a'), email='admin@test.com', password='__hash__scrypt:32768:8:1$qyd3Bohyq4vVNRp6$ccd71749d2fddc5d0e4a8b551ea598066434d367ba062f5f4d38918c6f0420d1e3ef95a39aebfa26446de926ad52178de06135f8722c7877590ee0b5f192b389', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453583, 'jti': 'ad4f3baf-087f-4842-8894-fd4c01970e7c', 'type': 'access', 'sub': '666d854f3b7c8a732352296a', 'nbf': 1718453583, 'csrf': '542544cc-ac10-48a9-88d5-4e27edcd9f1d', 'exp': 1718454483}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d854f3b7c8a732352296a'), email='admin@test.com', password='__hash__scrypt:32768:8:1$qyd3Bohyq4vVNRp6$ccd71749d2fddc5d0e4a8b551ea598066434d367ba062f5f4d38918c6f0420d1e3ef95a39aebfa26446de926ad52178de06135f8722c7877590ee0b5f192b389', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453593, 'jti': '4ba7b5f4-0fdd-41e5-a7fa-0f9e5c22f197', 'type': 'access', 'sub': '666d8559e58da8fc51e748de', 'nbf': 1718453593, 'csrf': 'f045ed8f-7a42-49b8-8a8d-b8680fbf7d13', 'exp': 1718454493}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8559e58da8fc51e748de'), email='admin@test.com', password='__hash__scrypt:32768:8:1$rFHi5k88ZGe3JgNK$d6683657c08196b377708457823d922e157e988cd9c7eadc8192e01a05a374b7c2c0205fdb53c6b53b5c76a2e6d3acaa1aaa3ce9c9c594bc21176b650e0c152a', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453593, 'jti': '4ba7b5f4-0fdd-41e5-a7fa-0f9e5c22f197', 'type': 'access', 'sub': '666d8559e58da8fc51e748de', 'nbf': 1718453593, 'csrf': 'f045ed8f-7a42-49b8-8a8d-b8680fbf7d13', 'exp': 1718454493}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8559e58da8fc51e748de'), email='admin@test.com', password='__hash__scrypt:32768:8:1$rFHi5k88ZGe3JgNK$d6683657c08196b377708457823d922e157e988cd9c7eadc8192e01a05a374b7c2c0205fdb53c6b53b5c76a2e6d3acaa1aaa3ce9c9c594bc21176b650e0c152a', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453593, 'jti': '4ba7b5f4-0fdd-41e5-a7fa-0f9e5c22f197', 'type': 'access', 'sub': '666d8559e58da8fc51e748de', 'nbf': 1718453593, 'csrf': 'f045ed8f-7a42-49b8-8a8d-b8680fbf7d13', 'exp': 1718454493}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8559e58da8fc51e748de'), email='admin@test.com', password='__hash__scrypt:32768:8:1$rFHi5k88ZGe3JgNK$d6683657c08196b377708457823d922e157e988cd9c7eadc8192e01a05a374b7c2c0205fdb53c6b53b5c76a2e6d3acaa1aaa3ce9c9c594bc21176b650e0c152a', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453618, 'jti': '7539dfd7-2c47-4c80-93df-d13375aac1aa', 'type': 'access', 'sub': '666d85721f1c9df3b991cae0', 'nbf': 1718453618, 'csrf': 'db79f9e0-5a0b-4a77-9a40-aa466a73c7f7', 'exp': 1718454518}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d85721f1c9df3b991cae0'), email='admin@test.com', password='__hash__scrypt:32768:8:1$8rWCYQ8lJXgalYkG$a3a09098e2b7256093b08db3e12cdd54da6b54e90dd5f0561abfafb661d993ad3e1bde249d3281fdf857fce1d8abe1eead891aca13d7349e42ce03fc5ee0040c', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453618, 'jti': '7539dfd7-2c47-4c80-93df-d13375aac1aa', 'type': 'access', 'sub': '666d85721f1c9df3b991cae0', 'nbf': 1718453618, 'csrf': 'db79f9e0-5a0b-4a77-9a40-aa466a73c7f7', 'exp': 1718454518}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d85721f1c9df3b991cae0'), email='admin@test.com', password='__hash__scrypt:32768:8:1$8rWCYQ8lJXgalYkG$a3a09098e2b7256093b08db3e12cdd54da6b54e90dd5f0561abfafb661d993ad3e1bde249d3281fdf857fce1d8abe1eead891aca13d7349e42ce03fc5ee0040c', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453618, 'jti': '7539dfd7-2c47-4c80-93df-d13375aac1aa', 'type': 'access', 'sub': '666d85721f1c9df3b991cae0', 'nbf': 1718453618, 'csrf': 'db79f9e0-5a0b-4a77-9a40-aa466a73c7f7', 'exp': 1718454518}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d85721f1c9df3b991cae0'), email='admin@test.com', password='__hash__scrypt:32768:8:1$8rWCYQ8lJXgalYkG$a3a09098e2b7256093b08db3e12cdd54da6b54e90dd5f0561abfafb661d993ad3e1bde249d3281fdf857fce1d8abe1eead891aca13d7349e42ce03fc5ee0040c', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453649, 'jti': 'efe7ff83-11b2-4011-ad22-ccf63b578add', 'type': 'access', 'sub': '666d85916ed1f41b51b85137', 'nbf': 1718453649, 'csrf': '95371132-de88-4a07-b488-27fc4c6d3368', 'exp': 1718454549}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d85916ed1f41b51b85137'), email='admin@test.com', password='__hash__scrypt:32768:8:1$dmPQHXRP8ReqHW7J$0c418e9683ac00e41d4e3136c2d238169f036c3d265d137aba1ed0d9463ec154f7cec088bb4d2dcf61b671f242de860b4b7630ed7b49f2101b3f4e83d59ff619', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453649, 'jti': 'efe7ff83-11b2-4011-ad22-ccf63b578add', 'type': 'access', 'sub': '666d85916ed1f41b51b85137', 'nbf': 1718453649, 'csrf': '95371132-de88-4a07-b488-27fc4c6d3368', 'exp': 1718454549}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d85916ed1f41b51b85137'), email='admin@test.com', password='__hash__scrypt:32768:8:1$dmPQHXRP8ReqHW7J$0c418e9683ac00e41d4e3136c2d238169f036c3d265d137aba1ed0d9463ec154f7cec088bb4d2dcf61b671f242de860b4b7630ed7b49f2101b3f4e83d59ff619', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453649, 'jti': 'efe7ff83-11b2-4011-ad22-ccf63b578add', 'type': 'access', 'sub': '666d85916ed1f41b51b85137', 'nbf': 1718453649, 'csrf': '95371132-de88-4a07-b488-27fc4c6d3368', 'exp': 1718454549}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d85916ed1f41b51b85137'), email='admin@test.com', password='__hash__scrypt:32768:8:1$dmPQHXRP8ReqHW7J$0c418e9683ac00e41d4e3136c2d238169f036c3d265d137aba1ed0d9463ec154f7cec088bb4d2dcf61b671f242de860b4b7630ed7b49f2101b3f4e83d59ff619', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453764, 'jti': '7d29254c-c24f-4e4c-af8c-46cef2df5600', 'type': 'access', 'sub': '666d8604627c81282d663985', 'nbf': 1718453764, 'csrf': '149c3cd3-3430-419f-a027-92db4a008761', 'exp': 1718454664}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8604627c81282d663985'), email='admin@test.com', password='__hash__scrypt:32768:8:1$3AI0FNgDTibmQPR0$caba854ca3b400430c2bdeaa30e6f48daac0ad3b0b07a45296aff0d66e821361b5fad643d42a927b0cd65b7b8e41ab6efc412f790e62ea12903219f39066ff8f', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453764, 'jti': '7d29254c-c24f-4e4c-af8c-46cef2df5600', 'type': 'access', 'sub': '666d8604627c81282d663985', 'nbf': 1718453764, 'csrf': '149c3cd3-3430-419f-a027-92db4a008761', 'exp': 1718454664}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8604627c81282d663985'), email='admin@test.com', password='__hash__scrypt:32768:8:1$3AI0FNgDTibmQPR0$caba854ca3b400430c2bdeaa30e6f48daac0ad3b0b07a45296aff0d66e821361b5fad643d42a927b0cd65b7b8e41ab6efc412f790e62ea12903219f39066ff8f', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453764, 'jti': '7d29254c-c24f-4e4c-af8c-46cef2df5600', 'type': 'access', 'sub': '666d8604627c81282d663985', 'nbf': 1718453764, 'csrf': '149c3cd3-3430-419f-a027-92db4a008761', 'exp': 1718454664}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8604627c81282d663985'), email='admin@test.com', password='__hash__scrypt:32768:8:1$3AI0FNgDTibmQPR0$caba854ca3b400430c2bdeaa30e6f48daac0ad3b0b07a45296aff0d66e821361b5fad643d42a927b0cd65b7b8e41ab6efc412f790e62ea12903219f39066ff8f', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453843, 'jti': 'a1615b46-b9f7-40f3-ae47-e367a90206a7', 'type': 'access', 'sub': '666d8653598ef6b4efd6312c', 'nbf': 1718453843, 'csrf': '9b61247f-f52a-49db-ab5c-2e55b3341d58', 'exp': 1718454743}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8653598ef6b4efd6312c'), email='admin@test.com', password='__hash__scrypt:32768:8:1$WkZt0FpSwG3sf53t$b35bbfbf60b93237c56aa6cbca4a2688f14d6bd22ae4afffc32f2413ee7f37e83be87d5383c92ab7818f7fdd1ed530d2dd8e2e52b0853e7d2b4352ef6d192345', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453843, 'jti': 'a1615b46-b9f7-40f3-ae47-e367a90206a7', 'type': 'access', 'sub': '666d8653598ef6b4efd6312c', 'nbf': 1718453843, 'csrf': '9b61247f-f52a-49db-ab5c-2e55b3341d58', 'exp': 1718454743}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8653598ef6b4efd6312c'), email='admin@test.com', password='__hash__scrypt:32768:8:1$WkZt0FpSwG3sf53t$b35bbfbf60b93237c56aa6cbca4a2688f14d6bd22ae4afffc32f2413ee7f37e83be87d5383c92ab7818f7fdd1ed530d2dd8e2e52b0853e7d2b4352ef6d192345', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718453843, 'jti': 'a1615b46-b9f7-40f3-ae47-e367a90206a7', 'type': 'access', 'sub': '666d8653598ef6b4efd6312c', 'nbf': 1718453843, 'csrf': '9b61247f-f52a-49db-ab5c-2e55b3341d58', 'exp': 1718454743}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8653598ef6b4efd6312c'), email='admin@test.com', password='__hash__scrypt:32768:8:1$WkZt0FpSwG3sf53t$b35bbfbf60b93237c56aa6cbca4a2688f14d6bd22ae4afffc32f2413ee7f37e83be87d5383c92ab7818f7fdd1ed530d2dd8e2e52b0853e7d2b4352ef6d192345', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454108, 'jti': 'afb5f95c-7628-46a4-9d3a-4cea07b8fa8c', 'type': 'access', 'sub': '666d875caf7fdab4528e5dd4', 'nbf': 1718454108, 'csrf': 'bc1bd078-6f11-4147-9350-ba9a36778736', 'exp': 1718455008}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d875caf7fdab4528e5dd4'), email='admin@test.com', password='__hash__scrypt:32768:8:1$pMH8t0UMXsa8hsRd$f257d8855c303c6cba2ad101c0b110e52328e870161adaf242813fc804408fd7a61e05d096b0bcb76afa05662ca2cedccb129f9dcba3408a97fa66734458599f', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454108, 'jti': 'afb5f95c-7628-46a4-9d3a-4cea07b8fa8c', 'type': 'access', 'sub': '666d875caf7fdab4528e5dd4', 'nbf': 1718454108, 'csrf': 'bc1bd078-6f11-4147-9350-ba9a36778736', 'exp': 1718455008}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d875caf7fdab4528e5dd4'), email='admin@test.com', password='__hash__scrypt:32768:8:1$pMH8t0UMXsa8hsRd$f257d8855c303c6cba2ad101c0b110e52328e870161adaf242813fc804408fd7a61e05d096b0bcb76afa05662ca2cedccb129f9dcba3408a97fa66734458599f', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454108, 'jti': 'afb5f95c-7628-46a4-9d3a-4cea07b8fa8c', 'type': 'access', 'sub': '666d875caf7fdab4528e5dd4', 'nbf': 1718454108, 'csrf': 'bc1bd078-6f11-4147-9350-ba9a36778736', 'exp': 1718455008}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d875caf7fdab4528e5dd4'), email='admin@test.com', password='__hash__scrypt:32768:8:1$pMH8t0UMXsa8hsRd$f257d8855c303c6cba2ad101c0b110e52328e870161adaf242813fc804408fd7a61e05d096b0bcb76afa05662ca2cedccb129f9dcba3408a97fa66734458599f', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454260, 'jti': '71cc4144-6a84-40b3-84ba-a470f061a15c', 'type': 'access', 'sub': '666d87f4fd50d6dcc7d47e1a', 'nbf': 1718454260, 'csrf': '2d623c26-b291-47ac-974a-47092d0622d2', 'exp': 1718455160}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d87f4fd50d6dcc7d47e1a'), email='admin@test.com', password='__hash__scrypt:32768:8:1$NNri4kPHqUSChtf2$6c14a1bf25f43a39569685faf8d7af0da76c7b35b7b5531fed04409142190714d0b9118444758a9e21772cee32fd003db5d51bf573e4d70fab7aeaa07f363e03', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454260, 'jti': '71cc4144-6a84-40b3-84ba-a470f061a15c', 'type': 'access', 'sub': '666d87f4fd50d6dcc7d47e1a', 'nbf': 1718454260, 'csrf': '2d623c26-b291-47ac-974a-47092d0622d2', 'exp': 1718455160}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d87f4fd50d6dcc7d47e1a'), email='admin@test.com', password='__hash__scrypt:32768:8:1$NNri4kPHqUSChtf2$6c14a1bf25f43a39569685faf8d7af0da76c7b35b7b5531fed04409142190714d0b9118444758a9e21772cee32fd003db5d51bf573e4d70fab7aeaa07f363e03', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454260, 'jti': '71cc4144-6a84-40b3-84ba-a470f061a15c', 'type': 'access', 'sub': '666d87f4fd50d6dcc7d47e1a', 'nbf': 1718454260, 'csrf': '2d623c26-b291-47ac-974a-47092d0622d2', 'exp': 1718455160}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d87f4fd50d6dcc7d47e1a'), email='admin@test.com', password='__hash__scrypt:32768:8:1$NNri4kPHqUSChtf2$6c14a1bf25f43a39569685faf8d7af0da76c7b35b7b5531fed04409142190714d0b9118444758a9e21772cee32fd003db5d51bf573e4d70fab7aeaa07f363e03', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
ERROR:app.extensions:module 'bson.json_util' has no attribute 'dump'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 112, in get_all_public_officials
    response = jsonify({"public_officials": json_util.dump(po_list, default=pydantic_encoder)}), 200
                                            ^^^^^^^^^^^^^^
AttributeError: module 'bson.json_util' has no attribute 'dump'. Did you mean: 'dumps'?
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454323, 'jti': '41d5b3a3-72cb-49a2-8dbf-5bdfe81f30ff', 'type': 'access', 'sub': '666d8833ddf4766a2d56d007', 'nbf': 1718454323, 'csrf': '6506c531-ab03-4da8-953f-96ab9185fa86', 'exp': 1718455223}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8833ddf4766a2d56d007'), email='admin@test.com', password='__hash__scrypt:32768:8:1$3XXIdD5z4wvgnIQW$45727205a7ec4d98f03200846d4aae2dd3bf599f8a80d4fd4d386ddd3eca8147eddb7f9098de7e55f7f0bcc215e0b51d61388ea91c00654f4956062247d7b2d3', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454323, 'jti': '41d5b3a3-72cb-49a2-8dbf-5bdfe81f30ff', 'type': 'access', 'sub': '666d8833ddf4766a2d56d007', 'nbf': 1718454323, 'csrf': '6506c531-ab03-4da8-953f-96ab9185fa86', 'exp': 1718455223}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8833ddf4766a2d56d007'), email='admin@test.com', password='__hash__scrypt:32768:8:1$3XXIdD5z4wvgnIQW$45727205a7ec4d98f03200846d4aae2dd3bf599f8a80d4fd4d386ddd3eca8147eddb7f9098de7e55f7f0bcc215e0b51d61388ea91c00654f4956062247d7b2d3', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454323, 'jti': '41d5b3a3-72cb-49a2-8dbf-5bdfe81f30ff', 'type': 'access', 'sub': '666d8833ddf4766a2d56d007', 'nbf': 1718454323, 'csrf': '6506c531-ab03-4da8-953f-96ab9185fa86', 'exp': 1718455223}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8833ddf4766a2d56d007'), email='admin@test.com', password='__hash__scrypt:32768:8:1$3XXIdD5z4wvgnIQW$45727205a7ec4d98f03200846d4aae2dd3bf599f8a80d4fd4d386ddd3eca8147eddb7f9098de7e55f7f0bcc215e0b51d61388ea91c00654f4956062247d7b2d3', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454339, 'jti': '05d62385-489f-445e-b0a8-4a4fabf955e2', 'type': 'access', 'sub': '666d8843f43eb5e8f77ef811', 'nbf': 1718454339, 'csrf': '2ffee0bb-831b-4118-97e4-67e57181d02c', 'exp': 1718455239}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8843f43eb5e8f77ef811'), email='admin@test.com', password='__hash__scrypt:32768:8:1$ouSSkVygOpHsZvK0$85b00565f0dafcb56fffb9a5497940f586a86640db5f5a395ee2a87f2d3fa86358b26286c6ee18a34d1315ba65a265712517ea07370f31caae42cf97fad31298', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454339, 'jti': '05d62385-489f-445e-b0a8-4a4fabf955e2', 'type': 'access', 'sub': '666d8843f43eb5e8f77ef811', 'nbf': 1718454339, 'csrf': '2ffee0bb-831b-4118-97e4-67e57181d02c', 'exp': 1718455239}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8843f43eb5e8f77ef811'), email='admin@test.com', password='__hash__scrypt:32768:8:1$ouSSkVygOpHsZvK0$85b00565f0dafcb56fffb9a5497940f586a86640db5f5a395ee2a87f2d3fa86358b26286c6ee18a34d1315ba65a265712517ea07370f31caae42cf97fad31298', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454339, 'jti': '05d62385-489f-445e-b0a8-4a4fabf955e2', 'type': 'access', 'sub': '666d8843f43eb5e8f77ef811', 'nbf': 1718454339, 'csrf': '2ffee0bb-831b-4118-97e4-67e57181d02c', 'exp': 1718455239}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8843f43eb5e8f77ef811'), email='admin@test.com', password='__hash__scrypt:32768:8:1$ouSSkVygOpHsZvK0$85b00565f0dafcb56fffb9a5497940f586a86640db5f5a395ee2a87f2d3fa86358b26286c6ee18a34d1315ba65a265712517ea07370f31caae42cf97fad31298', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454349, 'jti': 'ceea9ca8-1c06-47c2-b1c5-8f1fe262b173', 'type': 'access', 'sub': '666d884d602c3e7b6f1f47b4', 'nbf': 1718454349, 'csrf': '3023d8c5-f4c3-4598-aece-dbc39b431797', 'exp': 1718455249}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d884d602c3e7b6f1f47b4'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Dujzo1OfJSy0vwTp$7e5f2add4226ca9fa638ec41205d6d42dc16e5859f45538ea39ea6fa4671ccbb17ba798117dc81c8d0e53aacbef73ce512e713ee4638ed01798408865df7ec75', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454349, 'jti': 'ceea9ca8-1c06-47c2-b1c5-8f1fe262b173', 'type': 'access', 'sub': '666d884d602c3e7b6f1f47b4', 'nbf': 1718454349, 'csrf': '3023d8c5-f4c3-4598-aece-dbc39b431797', 'exp': 1718455249}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d884d602c3e7b6f1f47b4'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Dujzo1OfJSy0vwTp$7e5f2add4226ca9fa638ec41205d6d42dc16e5859f45538ea39ea6fa4671ccbb17ba798117dc81c8d0e53aacbef73ce512e713ee4638ed01798408865df7ec75', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454349, 'jti': 'ceea9ca8-1c06-47c2-b1c5-8f1fe262b173', 'type': 'access', 'sub': '666d884d602c3e7b6f1f47b4', 'nbf': 1718454349, 'csrf': '3023d8c5-f4c3-4598-aece-dbc39b431797', 'exp': 1718455249}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d884d602c3e7b6f1f47b4'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Dujzo1OfJSy0vwTp$7e5f2add4226ca9fa638ec41205d6d42dc16e5859f45538ea39ea6fa4671ccbb17ba798117dc81c8d0e53aacbef73ce512e713ee4638ed01798408865df7ec75', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454723, 'jti': '161466c9-f22d-4a42-9d0c-6834caab93d0', 'type': 'access', 'sub': '666d89c32abed6b7b7487eef', 'nbf': 1718454723, 'csrf': '320ea465-43c6-4b92-9a05-fc0a504546eb', 'exp': 1718455623}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d89c32abed6b7b7487eef'), email='admin@test.com', password='__hash__scrypt:32768:8:1$AbIzlbmEn07UqOxQ$9c3923baaace0c3a615f9f8e6b7eaaa010e1ba5034a0b5cef0ca3a1301a71e1fbdf55d45760b50b7d1145a1cd4270486279538be9cd5fe06c56daa51a9cf072c', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454723, 'jti': '161466c9-f22d-4a42-9d0c-6834caab93d0', 'type': 'access', 'sub': '666d89c32abed6b7b7487eef', 'nbf': 1718454723, 'csrf': '320ea465-43c6-4b92-9a05-fc0a504546eb', 'exp': 1718455623}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d89c32abed6b7b7487eef'), email='admin@test.com', password='__hash__scrypt:32768:8:1$AbIzlbmEn07UqOxQ$9c3923baaace0c3a615f9f8e6b7eaaa010e1ba5034a0b5cef0ca3a1301a71e1fbdf55d45760b50b7d1145a1cd4270486279538be9cd5fe06c56daa51a9cf072c', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454723, 'jti': '161466c9-f22d-4a42-9d0c-6834caab93d0', 'type': 'access', 'sub': '666d89c32abed6b7b7487eef', 'nbf': 1718454723, 'csrf': '320ea465-43c6-4b92-9a05-fc0a504546eb', 'exp': 1718455623}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d89c32abed6b7b7487eef'), email='admin@test.com', password='__hash__scrypt:32768:8:1$AbIzlbmEn07UqOxQ$9c3923baaace0c3a615f9f8e6b7eaaa010e1ba5034a0b5cef0ca3a1301a71e1fbdf55d45760b50b7d1145a1cd4270486279538be9cd5fe06c56daa51a9cf072c', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454874, 'jti': '8fb99492-1e98-4525-8f5a-21a5ba412c79', 'type': 'access', 'sub': '666d8a5a2bbaf852ed1019ca', 'nbf': 1718454874, 'csrf': '001a082f-4c12-494d-a3b2-d3a85e0e6be9', 'exp': 1718455774}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8a5a2bbaf852ed1019ca'), email='admin@test.com', password='__hash__scrypt:32768:8:1$nAva2jSogKo87lYA$76bce6abc9ec527f46f6440c35e252f95c49954d53d6d1d6e0df1a0b8663fd4622b0489dfa2ea30dd608bb7d834de8212904d34190d14d411e1e21ab4c7401bd', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454874, 'jti': '8fb99492-1e98-4525-8f5a-21a5ba412c79', 'type': 'access', 'sub': '666d8a5a2bbaf852ed1019ca', 'nbf': 1718454874, 'csrf': '001a082f-4c12-494d-a3b2-d3a85e0e6be9', 'exp': 1718455774}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8a5a2bbaf852ed1019ca'), email='admin@test.com', password='__hash__scrypt:32768:8:1$nAva2jSogKo87lYA$76bce6abc9ec527f46f6440c35e252f95c49954d53d6d1d6e0df1a0b8663fd4622b0489dfa2ea30dd608bb7d834de8212904d34190d14d411e1e21ab4c7401bd', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454874, 'jti': '8fb99492-1e98-4525-8f5a-21a5ba412c79', 'type': 'access', 'sub': '666d8a5a2bbaf852ed1019ca', 'nbf': 1718454874, 'csrf': '001a082f-4c12-494d-a3b2-d3a85e0e6be9', 'exp': 1718455774}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8a5a2bbaf852ed1019ca'), email='admin@test.com', password='__hash__scrypt:32768:8:1$nAva2jSogKo87lYA$76bce6abc9ec527f46f6440c35e252f95c49954d53d6d1d6e0df1a0b8663fd4622b0489dfa2ea30dd608bb7d834de8212904d34190d14d411e1e21ab4c7401bd', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454982, 'jti': '73248df0-1e3b-4236-9c48-15c7036d4211', 'type': 'access', 'sub': '666d8ac6b86ad84ac2a5e36a', 'nbf': 1718454982, 'csrf': '320a0e69-8ef7-49be-9f83-96767337665d', 'exp': 1718455882}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8ac6b86ad84ac2a5e36a'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Z7G9DjBPTu4iaat6$91a9a0de27afed907839118bd42a88b5dc325c57604ed2d45e2401d55210190fa4be2c7a0d321594221578ed383d3d10cd7c4646e0cb3bae89998b470c688505', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454982, 'jti': '73248df0-1e3b-4236-9c48-15c7036d4211', 'type': 'access', 'sub': '666d8ac6b86ad84ac2a5e36a', 'nbf': 1718454982, 'csrf': '320a0e69-8ef7-49be-9f83-96767337665d', 'exp': 1718455882}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8ac6b86ad84ac2a5e36a'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Z7G9DjBPTu4iaat6$91a9a0de27afed907839118bd42a88b5dc325c57604ed2d45e2401d55210190fa4be2c7a0d321594221578ed383d3d10cd7c4646e0cb3bae89998b470c688505', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454982, 'jti': '73248df0-1e3b-4236-9c48-15c7036d4211', 'type': 'access', 'sub': '666d8ac6b86ad84ac2a5e36a', 'nbf': 1718454982, 'csrf': '320a0e69-8ef7-49be-9f83-96767337665d', 'exp': 1718455882}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8ac6b86ad84ac2a5e36a'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Z7G9DjBPTu4iaat6$91a9a0de27afed907839118bd42a88b5dc325c57604ed2d45e2401d55210190fa4be2c7a0d321594221578ed383d3d10cd7c4646e0cb3bae89998b470c688505', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454982, 'jti': '73248df0-1e3b-4236-9c48-15c7036d4211', 'type': 'access', 'sub': '666d8ac6b86ad84ac2a5e36a', 'nbf': 1718454982, 'csrf': '320a0e69-8ef7-49be-9f83-96767337665d', 'exp': 1718455882}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454996, 'jti': 'b9998063-b6e4-452b-9c1b-2f8e30056e0f', 'type': 'access', 'sub': '666d8ad49c1c358a8de36786', 'nbf': 1718454996, 'csrf': '4382a656-6189-4fc3-b3de-1d8bcdf79add', 'exp': 1718455896}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8ad49c1c358a8de36786'), email='admin@test.com', password='__hash__scrypt:32768:8:1$03J5Epl5Z1rnu2Xk$8b250a554db3047721b7499ccbcb0352841aebdf09a0ca7077266a850be78c0cc6934f39df2527385f8bc90ecc6468dd20dd479b9e6091276a851f60990ede96', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454996, 'jti': 'b9998063-b6e4-452b-9c1b-2f8e30056e0f', 'type': 'access', 'sub': '666d8ad49c1c358a8de36786', 'nbf': 1718454996, 'csrf': '4382a656-6189-4fc3-b3de-1d8bcdf79add', 'exp': 1718455896}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8ad49c1c358a8de36786'), email='admin@test.com', password='__hash__scrypt:32768:8:1$03J5Epl5Z1rnu2Xk$8b250a554db3047721b7499ccbcb0352841aebdf09a0ca7077266a850be78c0cc6934f39df2527385f8bc90ecc6468dd20dd479b9e6091276a851f60990ede96', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454996, 'jti': 'b9998063-b6e4-452b-9c1b-2f8e30056e0f', 'type': 'access', 'sub': '666d8ad49c1c358a8de36786', 'nbf': 1718454996, 'csrf': '4382a656-6189-4fc3-b3de-1d8bcdf79add', 'exp': 1718455896}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8ad49c1c358a8de36786'), email='admin@test.com', password='__hash__scrypt:32768:8:1$03J5Epl5Z1rnu2Xk$8b250a554db3047721b7499ccbcb0352841aebdf09a0ca7077266a850be78c0cc6934f39df2527385f8bc90ecc6468dd20dd479b9e6091276a851f60990ede96', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718454996, 'jti': 'b9998063-b6e4-452b-9c1b-2f8e30056e0f', 'type': 'access', 'sub': '666d8ad49c1c358a8de36786', 'nbf': 1718454996, 'csrf': '4382a656-6189-4fc3-b3de-1d8bcdf79add', 'exp': 1718455896}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455126, 'jti': '7b3f4838-a646-48d6-812e-9ba50864e521', 'type': 'access', 'sub': '666d8b56b8952014619c48b0', 'nbf': 1718455126, 'csrf': '448c24ea-d076-4ebf-b01f-b3b483c524e6', 'exp': 1718456026}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8b56b8952014619c48b0'), email='admin@test.com', password='__hash__scrypt:32768:8:1$86ufqsRuHK1rECf3$838b87d18a9ac440955fb0e980abcdab7134343e081472918869781f0b31078cf5c1ad36651afeef7fd892a8cc6d6fdb4e377d11412c35c5feef102d98700bfa', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455126, 'jti': '7b3f4838-a646-48d6-812e-9ba50864e521', 'type': 'access', 'sub': '666d8b56b8952014619c48b0', 'nbf': 1718455126, 'csrf': '448c24ea-d076-4ebf-b01f-b3b483c524e6', 'exp': 1718456026}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8b56b8952014619c48b0'), email='admin@test.com', password='__hash__scrypt:32768:8:1$86ufqsRuHK1rECf3$838b87d18a9ac440955fb0e980abcdab7134343e081472918869781f0b31078cf5c1ad36651afeef7fd892a8cc6d6fdb4e377d11412c35c5feef102d98700bfa', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455126, 'jti': '7b3f4838-a646-48d6-812e-9ba50864e521', 'type': 'access', 'sub': '666d8b56b8952014619c48b0', 'nbf': 1718455126, 'csrf': '448c24ea-d076-4ebf-b01f-b3b483c524e6', 'exp': 1718456026}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8b56b8952014619c48b0'), email='admin@test.com', password='__hash__scrypt:32768:8:1$86ufqsRuHK1rECf3$838b87d18a9ac440955fb0e980abcdab7134343e081472918869781f0b31078cf5c1ad36651afeef7fd892a8cc6d6fdb4e377d11412c35c5feef102d98700bfa', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455126, 'jti': '7b3f4838-a646-48d6-812e-9ba50864e521', 'type': 'access', 'sub': '666d8b56b8952014619c48b0', 'nbf': 1718455126, 'csrf': '448c24ea-d076-4ebf-b01f-b3b483c524e6', 'exp': 1718456026}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455173, 'jti': '4ad2527b-6243-4f7b-9b7e-c669e8f3d55d', 'type': 'access', 'sub': '666d8b85c90943e5ef42ac10', 'nbf': 1718455173, 'csrf': 'b473b70a-6926-4ee1-bce9-a7317cc2ce4e', 'exp': 1718456073}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8b85c90943e5ef42ac10'), email='admin@test.com', password='__hash__scrypt:32768:8:1$WwmNm9xhHNfkPpas$4e2918c0b8407a4c5c14c7a72dcb887ee6fb57cbc34cf9b9def59979907b3eaf2d9150339d88222a23cec3aa28f6845f2088ea5231d53c1dab3bb158d332c342', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455173, 'jti': '4ad2527b-6243-4f7b-9b7e-c669e8f3d55d', 'type': 'access', 'sub': '666d8b85c90943e5ef42ac10', 'nbf': 1718455173, 'csrf': 'b473b70a-6926-4ee1-bce9-a7317cc2ce4e', 'exp': 1718456073}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8b85c90943e5ef42ac10'), email='admin@test.com', password='__hash__scrypt:32768:8:1$WwmNm9xhHNfkPpas$4e2918c0b8407a4c5c14c7a72dcb887ee6fb57cbc34cf9b9def59979907b3eaf2d9150339d88222a23cec3aa28f6845f2088ea5231d53c1dab3bb158d332c342', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455173, 'jti': '4ad2527b-6243-4f7b-9b7e-c669e8f3d55d', 'type': 'access', 'sub': '666d8b85c90943e5ef42ac10', 'nbf': 1718455173, 'csrf': 'b473b70a-6926-4ee1-bce9-a7317cc2ce4e', 'exp': 1718456073}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8b85c90943e5ef42ac10'), email='admin@test.com', password='__hash__scrypt:32768:8:1$WwmNm9xhHNfkPpas$4e2918c0b8407a4c5c14c7a72dcb887ee6fb57cbc34cf9b9def59979907b3eaf2d9150339d88222a23cec3aa28f6845f2088ea5231d53c1dab3bb158d332c342', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455173, 'jti': '4ad2527b-6243-4f7b-9b7e-c669e8f3d55d', 'type': 'access', 'sub': '666d8b85c90943e5ef42ac10', 'nbf': 1718455173, 'csrf': 'b473b70a-6926-4ee1-bce9-a7317cc2ce4e', 'exp': 1718456073}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455173, 'jti': '567f7ebe-41c0-4e0c-86c7-9feddd6e9293', 'type': 'access', 'sub': '666d8b85c90943e5ef42ac15', 'nbf': 1718455173, 'csrf': '07302815-fa5e-4382-b6b6-036356b2315d', 'exp': 1718456073}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8b85c90943e5ef42ac15'), email='test@test.com', password='__hash__scrypt:32768:8:1$cuZQGJWVA3PahD0M$76069deacd85800b68481dbee53454d510f01867859fa96839fc2f08e2df70c3ea9ef7c0942f08ee9d8c880d144339a116579ff012e9f69bfc54f2789fe3dd73', username='testman', position='tester', role=<UserRole.BASIC_USER: 'basic_user'>)
ERROR:app.extensions:Unauthorized POST request to /public-officials
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455173, 'jti': '567f7ebe-41c0-4e0c-86c7-9feddd6e9293', 'type': 'access', 'sub': '666d8b85c90943e5ef42ac15', 'nbf': 1718455173, 'csrf': '07302815-fa5e-4382-b6b6-036356b2315d', 'exp': 1718456073}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8b85c90943e5ef42ac15'), email='test@test.com', password='__hash__scrypt:32768:8:1$cuZQGJWVA3PahD0M$76069deacd85800b68481dbee53454d510f01867859fa96839fc2f08e2df70c3ea9ef7c0942f08ee9d8c880d144339a116579ff012e9f69bfc54f2789fe3dd73', username='testman', position='tester', role=<UserRole.BASIC_USER: 'basic_user'>)
ERROR:app.extensions:Unauthorized POST request to /public-officials
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455173, 'jti': '567f7ebe-41c0-4e0c-86c7-9feddd6e9293', 'type': 'access', 'sub': '666d8b85c90943e5ef42ac15', 'nbf': 1718455173, 'csrf': '07302815-fa5e-4382-b6b6-036356b2315d', 'exp': 1718456073}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8b85c90943e5ef42ac15'), email='test@test.com', password='__hash__scrypt:32768:8:1$cuZQGJWVA3PahD0M$76069deacd85800b68481dbee53454d510f01867859fa96839fc2f08e2df70c3ea9ef7c0942f08ee9d8c880d144339a116579ff012e9f69bfc54f2789fe3dd73', username='testman', position='tester', role=<UserRole.BASIC_USER: 'basic_user'>)
ERROR:app.extensions:Unauthorized POST request to /public-officials
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455173, 'jti': '567f7ebe-41c0-4e0c-86c7-9feddd6e9293', 'type': 'access', 'sub': '666d8b85c90943e5ef42ac15', 'nbf': 1718455173, 'csrf': '07302815-fa5e-4382-b6b6-036356b2315d', 'exp': 1718456073}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
ERROR:app.extensions:Unauthorized DELETE request to /public-officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455214, 'jti': 'afe12e53-ed64-4cd9-8b45-ec7ccd457455', 'type': 'access', 'sub': '666d8bae647fbf98533e2828', 'nbf': 1718455214, 'csrf': '9183678a-7494-4eac-be78-013200fed303', 'exp': 1718456114}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8bae647fbf98533e2828'), email='admin@test.com', password='__hash__scrypt:32768:8:1$52bcCuPOl1fnaHoq$26f800dd22835fbe5430621be285a501d34dca0287151fd4e5859b3b51baf0d3d343aff5145f90ea282c09eef32c54a591275dd917adc42cecf4086fa7ae3407', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455214, 'jti': 'afe12e53-ed64-4cd9-8b45-ec7ccd457455', 'type': 'access', 'sub': '666d8bae647fbf98533e2828', 'nbf': 1718455214, 'csrf': '9183678a-7494-4eac-be78-013200fed303', 'exp': 1718456114}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8bae647fbf98533e2828'), email='admin@test.com', password='__hash__scrypt:32768:8:1$52bcCuPOl1fnaHoq$26f800dd22835fbe5430621be285a501d34dca0287151fd4e5859b3b51baf0d3d343aff5145f90ea282c09eef32c54a591275dd917adc42cecf4086fa7ae3407', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455214, 'jti': 'afe12e53-ed64-4cd9-8b45-ec7ccd457455', 'type': 'access', 'sub': '666d8bae647fbf98533e2828', 'nbf': 1718455214, 'csrf': '9183678a-7494-4eac-be78-013200fed303', 'exp': 1718456114}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8bae647fbf98533e2828'), email='admin@test.com', password='__hash__scrypt:32768:8:1$52bcCuPOl1fnaHoq$26f800dd22835fbe5430621be285a501d34dca0287151fd4e5859b3b51baf0d3d343aff5145f90ea282c09eef32c54a591275dd917adc42cecf4086fa7ae3407', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455214, 'jti': 'afe12e53-ed64-4cd9-8b45-ec7ccd457455', 'type': 'access', 'sub': '666d8bae647fbf98533e2828', 'nbf': 1718455214, 'csrf': '9183678a-7494-4eac-be78-013200fed303', 'exp': 1718456114}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455215, 'jti': 'eb3d39aa-f4a7-497c-a8e2-e474973bd89c', 'type': 'access', 'sub': '666d8baf647fbf98533e282d', 'nbf': 1718455215, 'csrf': '9ce559e1-65bf-49ab-8fe2-68b8655fd3b3', 'exp': 1718456115}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8baf647fbf98533e282d'), email='test@test.com', password='__hash__scrypt:32768:8:1$NTWEr8iVwROEdYZM$304e870a250b798b5951f24b081230a8205b7842a4b3d65dd73e1a3d59091e0e02007ad1ef9e8de6217d67b3cabe87e9f4840d306a6ff5b66994e6cc2cc15f52', username='testman', position='tester', role=<UserRole.BASIC_USER: 'basic_user'>)
ERROR:app.extensions:Unauthorized POST request to /public-officials
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455215, 'jti': 'eb3d39aa-f4a7-497c-a8e2-e474973bd89c', 'type': 'access', 'sub': '666d8baf647fbf98533e282d', 'nbf': 1718455215, 'csrf': '9ce559e1-65bf-49ab-8fe2-68b8655fd3b3', 'exp': 1718456115}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8baf647fbf98533e282d'), email='test@test.com', password='__hash__scrypt:32768:8:1$NTWEr8iVwROEdYZM$304e870a250b798b5951f24b081230a8205b7842a4b3d65dd73e1a3d59091e0e02007ad1ef9e8de6217d67b3cabe87e9f4840d306a6ff5b66994e6cc2cc15f52', username='testman', position='tester', role=<UserRole.BASIC_USER: 'basic_user'>)
ERROR:app.extensions:Unauthorized POST request to /public-officials
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455215, 'jti': 'eb3d39aa-f4a7-497c-a8e2-e474973bd89c', 'type': 'access', 'sub': '666d8baf647fbf98533e282d', 'nbf': 1718455215, 'csrf': '9ce559e1-65bf-49ab-8fe2-68b8655fd3b3', 'exp': 1718456115}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8baf647fbf98533e282d'), email='test@test.com', password='__hash__scrypt:32768:8:1$NTWEr8iVwROEdYZM$304e870a250b798b5951f24b081230a8205b7842a4b3d65dd73e1a3d59091e0e02007ad1ef9e8de6217d67b3cabe87e9f4840d306a6ff5b66994e6cc2cc15f52', username='testman', position='tester', role=<UserRole.BASIC_USER: 'basic_user'>)
ERROR:app.extensions:Unauthorized POST request to /public-officials
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455215, 'jti': 'eb3d39aa-f4a7-497c-a8e2-e474973bd89c', 'type': 'access', 'sub': '666d8baf647fbf98533e282d', 'nbf': 1718455215, 'csrf': '9ce559e1-65bf-49ab-8fe2-68b8655fd3b3', 'exp': 1718456115}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
ERROR:app.extensions:Unauthorized DELETE request to /public-officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455249, 'jti': '5294fd45-8bea-4e30-8e65-51d7d3325cd9', 'type': 'access', 'sub': '666d8bd162ed03ca15a9c0ca', 'nbf': 1718455249, 'csrf': 'b63f0dd4-836b-4452-99af-5a25880f27c4', 'exp': 1718456149}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8bd162ed03ca15a9c0ca'), email='admin@test.com', password='__hash__scrypt:32768:8:1$QbBebA7KychvT8RC$35969f68fa754fc793920f9e72e27b50e10d31929ce5e5c439735f4bf43326df55abee9ff7ca86e694085b3d9e26bab5f47afc085784cbd378b6d2de8129a652', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455249, 'jti': '5294fd45-8bea-4e30-8e65-51d7d3325cd9', 'type': 'access', 'sub': '666d8bd162ed03ca15a9c0ca', 'nbf': 1718455249, 'csrf': 'b63f0dd4-836b-4452-99af-5a25880f27c4', 'exp': 1718456149}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8bd162ed03ca15a9c0ca'), email='admin@test.com', password='__hash__scrypt:32768:8:1$QbBebA7KychvT8RC$35969f68fa754fc793920f9e72e27b50e10d31929ce5e5c439735f4bf43326df55abee9ff7ca86e694085b3d9e26bab5f47afc085784cbd378b6d2de8129a652', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455249, 'jti': '5294fd45-8bea-4e30-8e65-51d7d3325cd9', 'type': 'access', 'sub': '666d8bd162ed03ca15a9c0ca', 'nbf': 1718455249, 'csrf': 'b63f0dd4-836b-4452-99af-5a25880f27c4', 'exp': 1718456149}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8bd162ed03ca15a9c0ca'), email='admin@test.com', password='__hash__scrypt:32768:8:1$QbBebA7KychvT8RC$35969f68fa754fc793920f9e72e27b50e10d31929ce5e5c439735f4bf43326df55abee9ff7ca86e694085b3d9e26bab5f47afc085784cbd378b6d2de8129a652', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455249, 'jti': '5294fd45-8bea-4e30-8e65-51d7d3325cd9', 'type': 'access', 'sub': '666d8bd162ed03ca15a9c0ca', 'nbf': 1718455249, 'csrf': 'b63f0dd4-836b-4452-99af-5a25880f27c4', 'exp': 1718456149}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455249, 'jti': '526f5949-1c4b-436e-bd98-61ca8566ee84', 'type': 'access', 'sub': '666d8bd162ed03ca15a9c0cf', 'nbf': 1718455249, 'csrf': 'd7ca036a-b811-4094-b145-afdbaa9622d1', 'exp': 1718456149}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8bd162ed03ca15a9c0cf'), email='admin@test.com', password='__hash__scrypt:32768:8:1$ybuBKyh1yn7MZUf1$98175583e67a6db0690ad28a6fa54a6d6d199bffda838ef0a37c4f8597e921d617e2fc82d1b8b939db5a201a29150228c29e455410177134254fbaac865b6d93', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455249, 'jti': '526f5949-1c4b-436e-bd98-61ca8566ee84', 'type': 'access', 'sub': '666d8bd162ed03ca15a9c0cf', 'nbf': 1718455249, 'csrf': 'd7ca036a-b811-4094-b145-afdbaa9622d1', 'exp': 1718456149}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8bd162ed03ca15a9c0cf'), email='admin@test.com', password='__hash__scrypt:32768:8:1$ybuBKyh1yn7MZUf1$98175583e67a6db0690ad28a6fa54a6d6d199bffda838ef0a37c4f8597e921d617e2fc82d1b8b939db5a201a29150228c29e455410177134254fbaac865b6d93', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455249, 'jti': '526f5949-1c4b-436e-bd98-61ca8566ee84', 'type': 'access', 'sub': '666d8bd162ed03ca15a9c0cf', 'nbf': 1718455249, 'csrf': 'd7ca036a-b811-4094-b145-afdbaa9622d1', 'exp': 1718456149}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8bd162ed03ca15a9c0cf'), email='admin@test.com', password='__hash__scrypt:32768:8:1$ybuBKyh1yn7MZUf1$98175583e67a6db0690ad28a6fa54a6d6d199bffda838ef0a37c4f8597e921d617e2fc82d1b8b939db5a201a29150228c29e455410177134254fbaac865b6d93', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455249, 'jti': '5529f856-17e3-4b34-a59d-49429e5cec6d', 'type': 'access', 'sub': '666d8bd162ed03ca15a9c0d3', 'nbf': 1718455249, 'csrf': '9ef4f3fa-4194-453c-8ccc-5de04d3a4bd1', 'exp': 1718456149}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
ERROR:app.extensions:Unauthorized DELETE request to /public-officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455286, 'jti': 'b9f2cc98-cd04-4225-97be-653c066d90da', 'type': 'access', 'sub': '666d8bf6c71f9486c07e5bc9', 'nbf': 1718455286, 'csrf': 'e89db7b1-6677-4817-ac02-d2dfae1d2ddc', 'exp': 1718456186}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8bf6c71f9486c07e5bc9'), email='admin@test.com', password='__hash__scrypt:32768:8:1$h2GRiXmKu3xlGxGg$90905e15f3c37b1ceab24a06994a2bfa385b169370aa54958c2cf516860bfc4ed94945973a9407a8c5f592320e853da56f6d1034ca3a5054912791dd6d2c76cb', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455286, 'jti': 'b9f2cc98-cd04-4225-97be-653c066d90da', 'type': 'access', 'sub': '666d8bf6c71f9486c07e5bc9', 'nbf': 1718455286, 'csrf': 'e89db7b1-6677-4817-ac02-d2dfae1d2ddc', 'exp': 1718456186}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8bf6c71f9486c07e5bc9'), email='admin@test.com', password='__hash__scrypt:32768:8:1$h2GRiXmKu3xlGxGg$90905e15f3c37b1ceab24a06994a2bfa385b169370aa54958c2cf516860bfc4ed94945973a9407a8c5f592320e853da56f6d1034ca3a5054912791dd6d2c76cb', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455286, 'jti': 'b9f2cc98-cd04-4225-97be-653c066d90da', 'type': 'access', 'sub': '666d8bf6c71f9486c07e5bc9', 'nbf': 1718455286, 'csrf': 'e89db7b1-6677-4817-ac02-d2dfae1d2ddc', 'exp': 1718456186}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8bf6c71f9486c07e5bc9'), email='admin@test.com', password='__hash__scrypt:32768:8:1$h2GRiXmKu3xlGxGg$90905e15f3c37b1ceab24a06994a2bfa385b169370aa54958c2cf516860bfc4ed94945973a9407a8c5f592320e853da56f6d1034ca3a5054912791dd6d2c76cb', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455286, 'jti': 'b9f2cc98-cd04-4225-97be-653c066d90da', 'type': 'access', 'sub': '666d8bf6c71f9486c07e5bc9', 'nbf': 1718455286, 'csrf': 'e89db7b1-6677-4817-ac02-d2dfae1d2ddc', 'exp': 1718456186}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455286, 'jti': '951a0f46-ecc3-4287-981c-cd8da2317800', 'type': 'access', 'sub': '666d8bf6c71f9486c07e5bce', 'nbf': 1718455286, 'csrf': '0393ee58-74d3-418d-a656-1379d54839c7', 'exp': 1718456186}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8bf6c71f9486c07e5bce'), email='admin@test.com', password='__hash__scrypt:32768:8:1$J9KyEZdK482bv8nX$037ffab17dd2d15cb0113c4b455e65b48fc41c74cb99d28a012f86dc2072747a52d2deee07a6d26f703e417110cba4f1f266e34898366e8077e87fcee6b8cb39', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455286, 'jti': '951a0f46-ecc3-4287-981c-cd8da2317800', 'type': 'access', 'sub': '666d8bf6c71f9486c07e5bce', 'nbf': 1718455286, 'csrf': '0393ee58-74d3-418d-a656-1379d54839c7', 'exp': 1718456186}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8bf6c71f9486c07e5bce'), email='admin@test.com', password='__hash__scrypt:32768:8:1$J9KyEZdK482bv8nX$037ffab17dd2d15cb0113c4b455e65b48fc41c74cb99d28a012f86dc2072747a52d2deee07a6d26f703e417110cba4f1f266e34898366e8077e87fcee6b8cb39', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455286, 'jti': '951a0f46-ecc3-4287-981c-cd8da2317800', 'type': 'access', 'sub': '666d8bf6c71f9486c07e5bce', 'nbf': 1718455286, 'csrf': '0393ee58-74d3-418d-a656-1379d54839c7', 'exp': 1718456186}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8bf6c71f9486c07e5bce'), email='admin@test.com', password='__hash__scrypt:32768:8:1$J9KyEZdK482bv8nX$037ffab17dd2d15cb0113c4b455e65b48fc41c74cb99d28a012f86dc2072747a52d2deee07a6d26f703e417110cba4f1f266e34898366e8077e87fcee6b8cb39', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455330, 'jti': 'e1cde73f-88c4-4055-bfbf-f0ad528bea74', 'type': 'access', 'sub': '666d8c221cafb7830f3ca3f4', 'nbf': 1718455330, 'csrf': 'b44f83c7-e691-4ee6-af4f-5fa198147f4e', 'exp': 1718456230}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666d8c221cafb7830f3ca3f4') email='test@test.com' password='__hash__scrypt:32768:8:1$TOcLiBkWQOguwq3c$e578cb8b66ba3a4a863c8b652d845c9610008caeceba07a62414a1116169e6e42260a4c0cddb4ea8cffdb67820d1fb4ae228365463df1a164e42dc37212d1c5d' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455330, 'jti': 'ef4a9a28-9b07-44f8-ae17-8946879d2f48', 'type': 'access', 'sub': '666d8c221cafb7830f3ca3f9', 'nbf': 1718455330, 'csrf': '926ae733-9688-4525-8d56-130cdd2c1aa0', 'exp': 1718456230}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666d8c221cafb7830f3ca3f9') email='test@test.com' password='__hash__scrypt:32768:8:1$xeaB1PTR5dy1tRwV$0283457132c8b259ed7333620e7155cc7ba90618b2d4d365f19b0430c6b31fd1d5f04e5e1661d1f69ccf4034902f30fdecb72c89123c09d893bef2ae363f2867' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455330, 'jti': 'fd389a33-8109-4bc9-8b9a-2ef07461aeb3', 'type': 'access', 'sub': '666d8c221cafb7830f3ca3fc', 'nbf': 1718455330, 'csrf': 'a4263252-a83e-4af4-aad7-159d64a1aec9', 'exp': 1718456230}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666d8c221cafb7830f3ca3fc') email='test@test.com' password='__hash__scrypt:32768:8:1$VO5UtOJnylFI2jo6$98e1e43ad2c4e7b6c90d768c064a23d9db3abd71ba89f78c249d5853590dc66f09a8d454377091b87a7a9a4d57b103fcdbd31d2ec5c55a957be87afc8e67d9b3' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455331, 'jti': '837e8d95-4be0-4093-a261-c96207bff4c8', 'type': 'access', 'sub': '666d8c231cafb7830f3ca408', 'nbf': 1718455331, 'csrf': '6f2880fa-d6f3-445d-a95b-894972fc4f57', 'exp': 1718456231}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c231cafb7830f3ca408'), email='admin@test.com', password='__hash__scrypt:32768:8:1$yHCPCQVBdwy9P3ic$0137c7e855d2e61cdd23d18e49916e09e22ac87f09f8c2a25849b9ae740fb26690ecbf1f3cf9b1052f9f14377de376bb8dd0231e7ebe557fbc790d2d9655eb80', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455332, 'jti': 'bf4c408a-effa-446c-9ae5-ca7789a0c6fd', 'type': 'access', 'sub': '666d8c241cafb7830f3ca40b', 'nbf': 1718455332, 'csrf': '05851b63-95f4-4172-b217-2259280ad0f3', 'exp': 1718456232}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c241cafb7830f3ca40b'), email='admin@test.com', password='__hash__scrypt:32768:8:1$sC5D53nEp1kFDZ8b$09ef417243dc2c6642545e471b307cff56e259d9e56a44878645648ce5cc360b3980ca38a9ed51f194b076b4d3147a892dac1d2d754308bc13e51fd457d59c4f', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455332, 'jti': '4ee500d9-8404-4721-9e33-8cdaba31b8cd', 'type': 'access', 'sub': '666d8c241cafb7830f3ca40d', 'nbf': 1718455332, 'csrf': '8d90925e-4e1c-4c0a-b52e-827ad1f39974', 'exp': 1718456232}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c241cafb7830f3ca40d'), email='admin@test.com', password='__hash__scrypt:32768:8:1$k2RLV0uknwCm6OAH$ac412f444684a22ffbc19bc88f953882fed66e7a2fe6e8eab36190262630633c341472e12b5d63b374eae9f2c5367cbc0459aee685a570bf960e174b3f21fb6b', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455332, 'jti': '66271d50-68fe-43bf-8c59-5a146995398f', 'type': 'access', 'sub': '666d8c241cafb7830f3ca40f', 'nbf': 1718455332, 'csrf': 'e7577abe-2127-4ebb-aef5-36f344c33d25', 'exp': 1718456232}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c241cafb7830f3ca40f'), email='admin@test.com', password='__hash__scrypt:32768:8:1$n5dIgy7ncoiKcILQ$423ec344f76130db52a9ae48d0102fcab02f7cf4c22d9e11aaa74fb37ec6cd102191459c06e19f7bb4c307155904734db022b86e79ff7e9664aae42cfa8d51df', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455332, 'jti': '8d141dd2-6b24-495a-9c0e-16da36760aec', 'type': 'access', 'sub': '666d8c241cafb7830f3ca411', 'nbf': 1718455332, 'csrf': 'c150f909-5d66-4ea7-be4c-3284042f4f96', 'exp': 1718456232}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c241cafb7830f3ca411'), email='admin@test.com', password='__hash__scrypt:32768:8:1$DBiyFyzjA0QjsvgL$0266d2b57ee796adc7af34dc9eb2f34d10a2fa745955e44c0bd1f5678c332f6b7ed6fbf3208b067a087327bc42b39e9e581c1cc8e449bb157f68773236594b96', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455332, 'jti': 'f1ed740d-54df-4a23-b1da-b9efae0cdc6c', 'type': 'access', 'sub': '666d8c241cafb7830f3ca413', 'nbf': 1718455332, 'csrf': '7286f072-6169-4fd2-ac40-9eb089e2a48b', 'exp': 1718456232}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c241cafb7830f3ca413'), email='admin@test.com', password='__hash__scrypt:32768:8:1$xqY5rkQAipWgVIJ7$1b64045445d7e66d1e8b102b3173de95be0e1e539c6d8820067b81397b8de54fe4d74646303f8da0729f855c3236ce55f5e238506b6d5b2e8db4ad0c37fb19de', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455333, 'jti': 'c3406c60-136b-4a4d-8ef1-adefe8400a89', 'type': 'access', 'sub': '666d8c251cafb7830f3ca415', 'nbf': 1718455333, 'csrf': 'd58ec83a-0e7a-457e-802f-93be52e0437f', 'exp': 1718456233}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c251cafb7830f3ca415'), email='admin@test.com', password='__hash__scrypt:32768:8:1$wiPaE8Tkih26Iwjj$40f5e1ee7926828c1b708cebf5f3663c1953fa824f27a1b0f131d404445ce892ea827548c376b4785076859dfcc38a62be19d7e71f2c432f991bb6d72dc83b0a', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455333, 'jti': 'c3406c60-136b-4a4d-8ef1-adefe8400a89', 'type': 'access', 'sub': '666d8c251cafb7830f3ca415', 'nbf': 1718455333, 'csrf': 'd58ec83a-0e7a-457e-802f-93be52e0437f', 'exp': 1718456233}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c251cafb7830f3ca415'), email='admin@test.com', password='__hash__scrypt:32768:8:1$wiPaE8Tkih26Iwjj$40f5e1ee7926828c1b708cebf5f3663c1953fa824f27a1b0f131d404445ce892ea827548c376b4785076859dfcc38a62be19d7e71f2c432f991bb6d72dc83b0a', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:Public Official already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = public_official_service.create_public_official(public_official)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\publicofficial_data_manager_mongodb.py", line 14, in create_public_official
    raise ObjectAlreadyExistsException("Public Official already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: Public Official already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455333, 'jti': '62de8de9-53ca-4403-8946-d655bd7520b7', 'type': 'access', 'sub': '666d8c251cafb7830f3ca418', 'nbf': 1718455333, 'csrf': '32efeba3-d356-44d2-b633-2dd4b6f3b862', 'exp': 1718456233}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c251cafb7830f3ca418'), email='admin@test.com', password='__hash__scrypt:32768:8:1$VcPhv80u3Rakp2e7$32d1740610bf5f6b8a0d56cef8a6619cfd86461ba07be366d2baf3984725d8c83cef7c794dbd03d6c30307f8e6e9be45870f42b54c1e5bb8a669f96c3278b0e3', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455333, 'jti': '62de8de9-53ca-4403-8946-d655bd7520b7', 'type': 'access', 'sub': '666d8c251cafb7830f3ca418', 'nbf': 1718455333, 'csrf': '32efeba3-d356-44d2-b633-2dd4b6f3b862', 'exp': 1718456233}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c251cafb7830f3ca418'), email='admin@test.com', password='__hash__scrypt:32768:8:1$VcPhv80u3Rakp2e7$32d1740610bf5f6b8a0d56cef8a6619cfd86461ba07be366d2baf3984725d8c83cef7c794dbd03d6c30307f8e6e9be45870f42b54c1e5bb8a669f96c3278b0e3', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455333, 'jti': '62de8de9-53ca-4403-8946-d655bd7520b7', 'type': 'access', 'sub': '666d8c251cafb7830f3ca418', 'nbf': 1718455333, 'csrf': '32efeba3-d356-44d2-b633-2dd4b6f3b862', 'exp': 1718456233}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c251cafb7830f3ca418'), email='admin@test.com', password='__hash__scrypt:32768:8:1$VcPhv80u3Rakp2e7$32d1740610bf5f6b8a0d56cef8a6619cfd86461ba07be366d2baf3984725d8c83cef7c794dbd03d6c30307f8e6e9be45870f42b54c1e5bb8a669f96c3278b0e3', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455333, 'jti': '62de8de9-53ca-4403-8946-d655bd7520b7', 'type': 'access', 'sub': '666d8c251cafb7830f3ca418', 'nbf': 1718455333, 'csrf': '32efeba3-d356-44d2-b633-2dd4b6f3b862', 'exp': 1718456233}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455333, 'jti': '5297ec35-581b-4d03-87e1-16b1a15e225c', 'type': 'access', 'sub': '666d8c251cafb7830f3ca41d', 'nbf': 1718455333, 'csrf': '6e052798-1636-4a74-9ddc-d921b21794dc', 'exp': 1718456233}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c251cafb7830f3ca41d'), email='admin@test.com', password='__hash__scrypt:32768:8:1$g7MKks6GLPdbIG4D$2abda30ee655d8affffa93706e1462ce30fd72f5c9eb0615ec2a3899ea6a9405dc1d923cfc28049348d1380e1843cedf8b87510e9ea4dd0d393e38e9eb5f437b', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455333, 'jti': '5297ec35-581b-4d03-87e1-16b1a15e225c', 'type': 'access', 'sub': '666d8c251cafb7830f3ca41d', 'nbf': 1718455333, 'csrf': '6e052798-1636-4a74-9ddc-d921b21794dc', 'exp': 1718456233}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c251cafb7830f3ca41d'), email='admin@test.com', password='__hash__scrypt:32768:8:1$g7MKks6GLPdbIG4D$2abda30ee655d8affffa93706e1462ce30fd72f5c9eb0615ec2a3899ea6a9405dc1d923cfc28049348d1380e1843cedf8b87510e9ea4dd0d393e38e9eb5f437b', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455333, 'jti': '5297ec35-581b-4d03-87e1-16b1a15e225c', 'type': 'access', 'sub': '666d8c251cafb7830f3ca41d', 'nbf': 1718455333, 'csrf': '6e052798-1636-4a74-9ddc-d921b21794dc', 'exp': 1718456233}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c251cafb7830f3ca41d'), email='admin@test.com', password='__hash__scrypt:32768:8:1$g7MKks6GLPdbIG4D$2abda30ee655d8affffa93706e1462ce30fd72f5c9eb0615ec2a3899ea6a9405dc1d923cfc28049348d1380e1843cedf8b87510e9ea4dd0d393e38e9eb5f437b', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455333, 'jti': '67bc0b9b-085d-4e11-be12-d1e902f6df1c', 'type': 'access', 'sub': '666d8c251cafb7830f3ca421', 'nbf': 1718455333, 'csrf': '7241c3b3-d7c0-42bb-85ca-41b417b5ce97', 'exp': 1718456233}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
ERROR:app.extensions:Unauthorized DELETE request to /public-officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455333, 'jti': '51f5052d-33b3-40cd-9c39-9c2c522890a4', 'type': 'access', 'sub': '666d8c251cafb7830f3ca423', 'nbf': 1718455333, 'csrf': '769b907e-cd7a-4046-b752-7b9e9363fd97', 'exp': 1718456233}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c251cafb7830f3ca423'), email='admin@test.com', password='__hash__scrypt:32768:8:1$bG4FZUeH5aUk8na8$86323bd5215ab029f18adcb9ccd09ebc7da5dc5fefdcf4a03a29c09164d66656f28ab26f90eceb48d7d058b9d73c8d1e234ee2faf264d8175637e0bfe4512a11', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455333, 'jti': '51f5052d-33b3-40cd-9c39-9c2c522890a4', 'type': 'access', 'sub': '666d8c251cafb7830f3ca423', 'nbf': 1718455333, 'csrf': '769b907e-cd7a-4046-b752-7b9e9363fd97', 'exp': 1718456233}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c251cafb7830f3ca423'), email='admin@test.com', password='__hash__scrypt:32768:8:1$bG4FZUeH5aUk8na8$86323bd5215ab029f18adcb9ccd09ebc7da5dc5fefdcf4a03a29c09164d66656f28ab26f90eceb48d7d058b9d73c8d1e234ee2faf264d8175637e0bfe4512a11', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455333, 'jti': '51f5052d-33b3-40cd-9c39-9c2c522890a4', 'type': 'access', 'sub': '666d8c251cafb7830f3ca423', 'nbf': 1718455333, 'csrf': '769b907e-cd7a-4046-b752-7b9e9363fd97', 'exp': 1718456233}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c251cafb7830f3ca423'), email='admin@test.com', password='__hash__scrypt:32768:8:1$bG4FZUeH5aUk8na8$86323bd5215ab029f18adcb9ccd09ebc7da5dc5fefdcf4a03a29c09164d66656f28ab26f90eceb48d7d058b9d73c8d1e234ee2faf264d8175637e0bfe4512a11', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455334, 'jti': '484ea5c7-f6a1-45d4-9390-cc2fa961bae5', 'type': 'access', 'sub': '666d8c251cafb7830f3ca429', 'nbf': 1718455334, 'csrf': '41cd17d4-bd7f-4190-adfc-820892686e8d', 'exp': 1718456234}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c251cafb7830f3ca429'), email='admin@test.com', password='__hash__scrypt:32768:8:1$FblrHlEEF0GNlCFp$97154e973e56cea35a5a85256e7614c47cf0498e4eefe4a49e01922a8615ff9d2c8de56c5882ac878ec14e3fa000a659ad2259e973f803af9c3ffc34a0100cfb', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455334, 'jti': 'd665d6b4-96b5-42bb-b735-68ad19070fac', 'type': 'access', 'sub': '666d8c261cafb7830f3ca42e', 'nbf': 1718455334, 'csrf': '1e7fa997-439e-44e2-a6ea-cd5517d6bfd7', 'exp': 1718456234}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c261cafb7830f3ca42e'), email='admin@test.com', password='__hash__scrypt:32768:8:1$b35nabSDiWjVKeIo$26a93bb2ba112a837cd4f2da7525e9d2549c21aacee0c063fcb47ef8968d3203b8bd779a978bbe101432c65aed6c2e1a390e1984d9897da7d6167f694d71fab6', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455334, 'jti': 'f056c9d6-f654-401b-9b23-8cf211f407ba', 'type': 'access', 'sub': '666d8c261cafb7830f3ca431', 'nbf': 1718455334, 'csrf': '48dd4461-ec10-421b-9e05-caa5fd3482cc', 'exp': 1718456234}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c261cafb7830f3ca431'), email='admin@test.com', password='__hash__scrypt:32768:8:1$LdyW5hsYz9PvQ2Jv$8a83f35c2b0cadc6d6a38a57e289d8b028d2eb32e1c871dd65bea2c533428a016d6fe0469afc9122dbe1eae8c2eb14feaf21707c0d66121260c1d01bce7228ce', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455334, 'jti': '462ac343-0ec4-4af1-8648-251aa66e2482', 'type': 'access', 'sub': '666d8c261cafb7830f3ca434', 'nbf': 1718455334, 'csrf': 'b086f07d-becd-4588-a26f-f6c0287a441f', 'exp': 1718456234}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455334, 'jti': 'c0bdbd58-05f3-4f17-a264-80c144a43dbb', 'type': 'access', 'sub': '666d8c261cafb7830f3ca436', 'nbf': 1718455334, 'csrf': '46189779-5679-4c8b-a5e7-7af2e38b8e78', 'exp': 1718456234}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c261cafb7830f3ca436'), email='admin@test.com', password='__hash__scrypt:32768:8:1$JJViyF4UnLvEnFl9$d5a63c24f213d17d6c13c218f6c08bbe924ee57d3453e7ab729b323dc52ef1353de804892839ed09cc4b5260123ebffbfb0ca3b376fdb069dfbb75cb2082b69e', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455335, 'jti': '6a86888f-2cfe-4caf-a0c4-608b620ba150', 'type': 'access', 'sub': '666d8c271cafb7830f3ca439', 'nbf': 1718455335, 'csrf': 'fad22be3-b5a8-4b0b-beb5-0dfd8fabe0a9', 'exp': 1718456235}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c271cafb7830f3ca439'), email='admin@test.com', password='__hash__scrypt:32768:8:1$e8BOqPIKO6EBNEQ4$943b985d6920a9d97d1738d8efbd9d464932092be069a43cac33f27c11ad275d84cc043530e553aff716038fd005be7ef6ea0f177c6032ce4f25211d73c5ea5c', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455335, 'jti': 'fcb05ea4-c83d-4611-bc7e-e90fe0af7cb3', 'type': 'access', 'sub': '666d8c271cafb7830f3ca43c', 'nbf': 1718455335, 'csrf': 'e08f2e94-133d-4742-b639-6afb339e82ef', 'exp': 1718456235}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c271cafb7830f3ca43c'), email='admin@test.com', password='__hash__scrypt:32768:8:1$PIuy5CuRlDEKv1J0$c4747dc45ecc1bd8b421de978e63a2a4c167087d5c994adb9faa58fc1f39f46fd2b4153d01bccf4cdf755364e4326a994956c300f002f6bb5b658b402f8e1086', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455335, 'jti': '3e3bf240-8a64-4fa2-93ec-a77261a6cac1', 'type': 'access', 'sub': '666d8c271cafb7830f3ca43f', 'nbf': 1718455335, 'csrf': '8259270a-22e3-4e21-bc87-91b619f967b1', 'exp': 1718456235}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c271cafb7830f3ca43f'), email='admin@test.com', password='__hash__scrypt:32768:8:1$YKAJ628YP1B0XVvt$a8e620721637a17ef4ec6667349b4afd1e98ad8659b07ec3c7b8310c67d7c3f9dddf23a3313a78b67d4d332848b40ffb6a35e99e815cdb4403861cdffcb3b06f', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455335, 'jti': '24d5bcc6-ebb9-4382-9c59-402f530a9141', 'type': 'access', 'sub': '666d8c271cafb7830f3ca445', 'nbf': 1718455335, 'csrf': 'ed34fb92-39f2-451e-bfdc-adc52a167383', 'exp': 1718456235}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455336, 'jti': '49cc0084-1f8e-414c-96cd-cec6fac411e3', 'type': 'access', 'sub': '666d8c281cafb7830f3ca44a', 'nbf': 1718455336, 'csrf': '6f89e7b7-116c-4091-9a59-14dae540bd7f', 'exp': 1718456236}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized DELETE request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455336, 'jti': 'd1ab5cc7-e86d-4b99-9cf6-2c1bcc32667a', 'type': 'access', 'sub': '666d8c281cafb7830f3ca44f', 'nbf': 1718455336, 'csrf': 'dec1795c-a2d7-48bb-9306-4e40c7ad2123', 'exp': 1718456236}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455337, 'jti': 'fd1d736a-5cc5-438d-b629-f6446a8b64e4', 'type': 'access', 'sub': '666d8c291cafb7830f3ca454', 'nbf': 1718455337, 'csrf': 'f55f66e3-9018-4ad5-b546-c98835549831', 'exp': 1718456237}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455337, 'jti': 'fa62f153-4cbb-429e-889b-c795c60b82a6', 'type': 'access', 'sub': '666d8c291cafb7830f3ca456', 'nbf': 1718455337, 'csrf': '13e68465-b19d-4dd3-b146-31bb6d43ebdc', 'exp': 1718456237}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455337, 'jti': 'dbb77fe6-01d5-4589-9f83-97fa1b66d228', 'type': 'access', 'sub': '666d8c291cafb7830f3ca458', 'nbf': 1718455337, 'csrf': 'f722dc9c-a0b8-4085-8580-a08066afa5d4', 'exp': 1718456237}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455337, 'jti': '0caea744-6e8a-4657-b551-48af7e84b8f0', 'type': 'access', 'sub': '666d8c291cafb7830f3ca45a', 'nbf': 1718455337, 'csrf': 'c1ce5ae7-8c83-4c1d-ae5b-2b0886fe5036', 'exp': 1718456237}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455337, 'jti': 'b7645d6c-393b-4481-843f-17fb43340090', 'type': 'access', 'sub': '666d8c291cafb7830f3ca45c', 'nbf': 1718455337, 'csrf': '6a128f8c-2b72-41d6-8f35-5c4d028c33c4', 'exp': 1718456237}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455337, 'jti': 'b7645d6c-393b-4481-843f-17fb43340090', 'type': 'access', 'sub': '666d8c291cafb7830f3ca45c', 'nbf': 1718455337, 'csrf': '6a128f8c-2b72-41d6-8f35-5c4d028c33c4', 'exp': 1718456237}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455337, 'jti': 'b7645d6c-393b-4481-843f-17fb43340090', 'type': 'access', 'sub': '666d8c291cafb7830f3ca45c', 'nbf': 1718455337, 'csrf': '6a128f8c-2b72-41d6-8f35-5c4d028c33c4', 'exp': 1718456237}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455337, 'jti': 'b7645d6c-393b-4481-843f-17fb43340090', 'type': 'access', 'sub': '666d8c291cafb7830f3ca45c', 'nbf': 1718455337, 'csrf': '6a128f8c-2b72-41d6-8f35-5c4d028c33c4', 'exp': 1718456237}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455337, 'jti': 'b7645d6c-393b-4481-843f-17fb43340090', 'type': 'access', 'sub': '666d8c291cafb7830f3ca45c', 'nbf': 1718455337, 'csrf': '6a128f8c-2b72-41d6-8f35-5c4d028c33c4', 'exp': 1718456237}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455337, 'jti': 'b7645d6c-393b-4481-843f-17fb43340090', 'type': 'access', 'sub': '666d8c291cafb7830f3ca45c', 'nbf': 1718455337, 'csrf': '6a128f8c-2b72-41d6-8f35-5c4d028c33c4', 'exp': 1718456237}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455338, 'jti': 'e199e592-f9df-4d20-b3b9-d8cc76a1f269', 'type': 'access', 'sub': '666d8c2a1cafb7830f3ca45e', 'nbf': 1718455338, 'csrf': '8ce7541f-4b36-4e61-8a81-1cd07209b9db', 'exp': 1718456238}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455338, 'jti': 'e199e592-f9df-4d20-b3b9-d8cc76a1f269', 'type': 'access', 'sub': '666d8c2a1cafb7830f3ca45e', 'nbf': 1718455338, 'csrf': '8ce7541f-4b36-4e61-8a81-1cd07209b9db', 'exp': 1718456238}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455338, 'jti': 'e199e592-f9df-4d20-b3b9-d8cc76a1f269', 'type': 'access', 'sub': '666d8c2a1cafb7830f3ca45e', 'nbf': 1718455338, 'csrf': '8ce7541f-4b36-4e61-8a81-1cd07209b9db', 'exp': 1718456238}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455338, 'jti': 'e199e592-f9df-4d20-b3b9-d8cc76a1f269', 'type': 'access', 'sub': '666d8c2a1cafb7830f3ca45e', 'nbf': 1718455338, 'csrf': '8ce7541f-4b36-4e61-8a81-1cd07209b9db', 'exp': 1718456238}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455338, 'jti': 'e199e592-f9df-4d20-b3b9-d8cc76a1f269', 'type': 'access', 'sub': '666d8c2a1cafb7830f3ca45e', 'nbf': 1718455338, 'csrf': '8ce7541f-4b36-4e61-8a81-1cd07209b9db', 'exp': 1718456238}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455338, 'jti': 'e199e592-f9df-4d20-b3b9-d8cc76a1f269', 'type': 'access', 'sub': '666d8c2a1cafb7830f3ca45e', 'nbf': 1718455338, 'csrf': '8ce7541f-4b36-4e61-8a81-1cd07209b9db', 'exp': 1718456238}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455339, 'jti': '92e7fe5a-e566-4b3a-8895-1e152a41078a', 'type': 'access', 'sub': '666d8c2b1cafb7830f3ca460', 'nbf': 1718455339, 'csrf': '567ab39b-25c2-4f2e-8126-83c4ec2a61d8', 'exp': 1718456239}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455339, 'jti': '77c336b7-f82d-44c9-9413-4616456b5754', 'type': 'access', 'sub': '666d8c2b1cafb7830f3ca462', 'nbf': 1718455339, 'csrf': '1d62a458-d015-49d9-8406-2c62d60d912d', 'exp': 1718456239}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455360, 'jti': '34bf6a06-c362-4092-b776-69fe6b005932', 'type': 'access', 'sub': '666d8c40c3ba61a4b1086a66', 'nbf': 1718455360, 'csrf': '722a0bca-c865-4453-bff3-921af5db1e96', 'exp': 1718456260}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666d8c40c3ba61a4b1086a66') email='test@test.com' password='__hash__scrypt:32768:8:1$jjTWBNrLR6zhPRVJ$5498b550c6229e24c1d156cedfe380787cae6a29f466aad4b8bcc463d3d07d3bc4c28399edc4b49b2c12caf18d4776766b6bef31350efc2e3220c877c29d4570' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455360, 'jti': '3a39048c-c9fd-44b9-9c88-52656529d1fe', 'type': 'access', 'sub': '666d8c40c3ba61a4b1086a6b', 'nbf': 1718455360, 'csrf': '3325d90c-33c4-433c-9a19-eb20441583da', 'exp': 1718456260}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666d8c40c3ba61a4b1086a6b') email='test@test.com' password='__hash__scrypt:32768:8:1$2ZklRZ54LSD7ZGvF$4f5fb938e719954f462826d3158f53859ebd626d9b486d6d6e8ebc1c89252c8d30708391a43bc62246214a56af4f0ef95e528c6feebc5e00158edbb73e810c4c' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455360, 'jti': '55df3efc-bd45-4a03-bf3d-8ed08a68786b', 'type': 'access', 'sub': '666d8c40c3ba61a4b1086a6e', 'nbf': 1718455360, 'csrf': '1c89a8c2-72f1-4236-88d1-84e4957b5294', 'exp': 1718456260}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666d8c40c3ba61a4b1086a6e') email='test@test.com' password='__hash__scrypt:32768:8:1$VcagKWs3lTqQLGjl$43f9f879622bdec533f85193988f49ffb4dc263b1b20a37fcf7d207a28a250ede6bcb6b3de1189539d5be9e298da6683884a5a1f0e9236eff2309b3555f80095' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455361, 'jti': '5893a376-7a6d-445d-b3b0-01177b888c52', 'type': 'access', 'sub': '666d8c41c3ba61a4b1086a7a', 'nbf': 1718455361, 'csrf': 'df639ddf-887e-4610-b585-7b5fa00f7aee', 'exp': 1718456261}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c41c3ba61a4b1086a7a'), email='admin@test.com', password='__hash__scrypt:32768:8:1$01IRybOEff3EkIpu$d5705dd08243b9cc6e06726e9c323eea81590fde84183ca20f6cf1ac455f0054311f9e515b6e5f39f1355533c3e5ca4b6354fed29797ed4dc5fdf4f2dd4bfd47', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455361, 'jti': '00eb91ce-39bc-43b5-9a56-2953a8e46157', 'type': 'access', 'sub': '666d8c41c3ba61a4b1086a7d', 'nbf': 1718455361, 'csrf': '30e9a6fe-6761-43c7-be29-97a6cc735d31', 'exp': 1718456261}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c41c3ba61a4b1086a7d'), email='admin@test.com', password='__hash__scrypt:32768:8:1$7sw20QQuDrxJgPO0$7dcd7165deb8fa9f77f3a21a3f460e5b3c095269b33cb73206319b025c64c386b3f1eb2525344c0c83557d6c5e99c39287bc3ccc59db26f8d8f9cbfdfdf2bd70', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455361, 'jti': 'e2f33e7e-6671-4a96-83cb-e4df329a5ccc', 'type': 'access', 'sub': '666d8c41c3ba61a4b1086a7f', 'nbf': 1718455361, 'csrf': '3dd1ca28-0725-4c2a-940d-071e05da8bb2', 'exp': 1718456261}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c41c3ba61a4b1086a7f'), email='admin@test.com', password='__hash__scrypt:32768:8:1$ZECCDYUAOUqLroP4$488cd9cfff29c199199a54e1eced042fdae13bb804044b8103ec94880d779691fa8cd21daffbcf1a3fa0470d83e655426b12c4d3a59673fc42936446fc2d2333', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455361, 'jti': '77989281-4d19-4167-bf01-ba1577b61a50', 'type': 'access', 'sub': '666d8c41c3ba61a4b1086a81', 'nbf': 1718455361, 'csrf': '927bd4c4-60f2-454c-8884-b8f935567efa', 'exp': 1718456261}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c41c3ba61a4b1086a81'), email='admin@test.com', password='__hash__scrypt:32768:8:1$XajTLkDe19DXTW4t$f44cbb901f77b87b7efcaf14238d4fc3bb88e8e6d3a9c4b437d3968b3bf68937804ed9054b4f833c233138597ff3c91bf6941bce641b254cb50379fc2a049208', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455362, 'jti': 'cae89f34-aa49-4018-a0f5-fa8d7ab7277c', 'type': 'access', 'sub': '666d8c42c3ba61a4b1086a83', 'nbf': 1718455362, 'csrf': '6821c3b2-79f1-41f6-9454-9bec4d7cc03d', 'exp': 1718456262}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c42c3ba61a4b1086a83'), email='admin@test.com', password='__hash__scrypt:32768:8:1$eWs2lsNLTEfCdgxx$fc6f0d412a359a2c8eae6690ca0de6ffa99d22e64dc4e5610c6c1a86d80031918a0a52e4fb315ec39cca841e310de9441cd44c71b8dea168f2e234decb736135', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455362, 'jti': '46d520a8-60a6-4c99-8afd-f3b34c3bdf77', 'type': 'access', 'sub': '666d8c42c3ba61a4b1086a85', 'nbf': 1718455362, 'csrf': '1de05456-f99f-4a44-b92e-9a7f2c217776', 'exp': 1718456262}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c42c3ba61a4b1086a85'), email='admin@test.com', password='__hash__scrypt:32768:8:1$8FKwLVnBGbQSTbrF$cc88a5299d86bddaa809e48a115fd108414ad700a04083399a4aa38f369f2984d5ca7b2499fb98634c85df080111932e8ffda2797281e3311d090b6eb5740d67', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455362, 'jti': 'cba81832-ecf1-42ed-8f7f-87b21243e6cc', 'type': 'access', 'sub': '666d8c42c3ba61a4b1086a87', 'nbf': 1718455362, 'csrf': '1a27c359-60a9-4bd7-a261-a70cbdd528d0', 'exp': 1718456262}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c42c3ba61a4b1086a87'), email='admin@test.com', password='__hash__scrypt:32768:8:1$dTIdyukFD1B5YhHn$f55fb81251c5ee86767026852dbe84e8ac11ab52571de5f642b01b811f1c269b0e07d0b861d5fcf71a1c78cadce05cb26ec2a349aa8a32bbff2cc28811eb57ae', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455362, 'jti': 'cba81832-ecf1-42ed-8f7f-87b21243e6cc', 'type': 'access', 'sub': '666d8c42c3ba61a4b1086a87', 'nbf': 1718455362, 'csrf': '1a27c359-60a9-4bd7-a261-a70cbdd528d0', 'exp': 1718456262}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c42c3ba61a4b1086a87'), email='admin@test.com', password='__hash__scrypt:32768:8:1$dTIdyukFD1B5YhHn$f55fb81251c5ee86767026852dbe84e8ac11ab52571de5f642b01b811f1c269b0e07d0b861d5fcf71a1c78cadce05cb26ec2a349aa8a32bbff2cc28811eb57ae', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:Public Official already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = public_official_service.create_public_official(public_official)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\publicofficial_data_manager_mongodb.py", line 14, in create_public_official
    raise ObjectAlreadyExistsException("Public Official already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: Public Official already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455362, 'jti': 'ccf1eeaf-1507-4775-9109-06d129996f8d', 'type': 'access', 'sub': '666d8c42c3ba61a4b1086a8a', 'nbf': 1718455362, 'csrf': '40b5b1d3-4309-4ab9-a19b-bb02cb3f4469', 'exp': 1718456262}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c42c3ba61a4b1086a8a'), email='admin@test.com', password='__hash__scrypt:32768:8:1$XaWDhV9OGzQEndIe$1655701bb53549f81441e313f2923b381aee5a4081e0b313cb7da0b81f30a1f553c94dddf708c370cce9232ab17d28b2280eed2f9e3622ca03a9e1c096ab82fa', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455362, 'jti': 'ccf1eeaf-1507-4775-9109-06d129996f8d', 'type': 'access', 'sub': '666d8c42c3ba61a4b1086a8a', 'nbf': 1718455362, 'csrf': '40b5b1d3-4309-4ab9-a19b-bb02cb3f4469', 'exp': 1718456262}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c42c3ba61a4b1086a8a'), email='admin@test.com', password='__hash__scrypt:32768:8:1$XaWDhV9OGzQEndIe$1655701bb53549f81441e313f2923b381aee5a4081e0b313cb7da0b81f30a1f553c94dddf708c370cce9232ab17d28b2280eed2f9e3622ca03a9e1c096ab82fa', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455362, 'jti': 'ccf1eeaf-1507-4775-9109-06d129996f8d', 'type': 'access', 'sub': '666d8c42c3ba61a4b1086a8a', 'nbf': 1718455362, 'csrf': '40b5b1d3-4309-4ab9-a19b-bb02cb3f4469', 'exp': 1718456262}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c42c3ba61a4b1086a8a'), email='admin@test.com', password='__hash__scrypt:32768:8:1$XaWDhV9OGzQEndIe$1655701bb53549f81441e313f2923b381aee5a4081e0b313cb7da0b81f30a1f553c94dddf708c370cce9232ab17d28b2280eed2f9e3622ca03a9e1c096ab82fa', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455362, 'jti': 'ccf1eeaf-1507-4775-9109-06d129996f8d', 'type': 'access', 'sub': '666d8c42c3ba61a4b1086a8a', 'nbf': 1718455362, 'csrf': '40b5b1d3-4309-4ab9-a19b-bb02cb3f4469', 'exp': 1718456262}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455362, 'jti': '6b8d87c7-102b-4b00-aea7-54c7f89054cf', 'type': 'access', 'sub': '666d8c42c3ba61a4b1086a8f', 'nbf': 1718455362, 'csrf': '56ad95c3-0282-4561-b55a-94cb997e07c5', 'exp': 1718456262}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c42c3ba61a4b1086a8f'), email='admin@test.com', password='__hash__scrypt:32768:8:1$wxbNtxa07fRZI8MF$5d91001334516f0f8f8541cbb48bc730a2624cffb87b2df2a70468f9f02d31970fad76cd4bbb9feb1696e8d2b90d278f12e61476c2b84cd0bf5000784ed9502e', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455362, 'jti': '6b8d87c7-102b-4b00-aea7-54c7f89054cf', 'type': 'access', 'sub': '666d8c42c3ba61a4b1086a8f', 'nbf': 1718455362, 'csrf': '56ad95c3-0282-4561-b55a-94cb997e07c5', 'exp': 1718456262}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c42c3ba61a4b1086a8f'), email='admin@test.com', password='__hash__scrypt:32768:8:1$wxbNtxa07fRZI8MF$5d91001334516f0f8f8541cbb48bc730a2624cffb87b2df2a70468f9f02d31970fad76cd4bbb9feb1696e8d2b90d278f12e61476c2b84cd0bf5000784ed9502e', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455362, 'jti': '6b8d87c7-102b-4b00-aea7-54c7f89054cf', 'type': 'access', 'sub': '666d8c42c3ba61a4b1086a8f', 'nbf': 1718455362, 'csrf': '56ad95c3-0282-4561-b55a-94cb997e07c5', 'exp': 1718456262}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c42c3ba61a4b1086a8f'), email='admin@test.com', password='__hash__scrypt:32768:8:1$wxbNtxa07fRZI8MF$5d91001334516f0f8f8541cbb48bc730a2624cffb87b2df2a70468f9f02d31970fad76cd4bbb9feb1696e8d2b90d278f12e61476c2b84cd0bf5000784ed9502e', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455362, 'jti': '05ba599f-5d18-40e2-b09e-ba09418bd36e', 'type': 'access', 'sub': '666d8c42c3ba61a4b1086a93', 'nbf': 1718455362, 'csrf': 'da21828a-e8d3-40d1-82e9-ec570892beb0', 'exp': 1718456262}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
ERROR:app.extensions:Unauthorized DELETE request to /public-officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455363, 'jti': '93698452-9181-4f44-9e56-706d58d0da35', 'type': 'access', 'sub': '666d8c43c3ba61a4b1086a95', 'nbf': 1718455363, 'csrf': '0bc0ae25-569e-435d-a8b6-312852f024c5', 'exp': 1718456263}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c43c3ba61a4b1086a95'), email='admin@test.com', password='__hash__scrypt:32768:8:1$R6DQHeYTDImQdhlB$573c35be32189776e20313041c076f784f61c55ce47d11aa93b0ed691c35ae3324d43e7cbab013bc14d865258147e6e817f76120b04c9a738d73182c1ddd90ad', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455363, 'jti': '93698452-9181-4f44-9e56-706d58d0da35', 'type': 'access', 'sub': '666d8c43c3ba61a4b1086a95', 'nbf': 1718455363, 'csrf': '0bc0ae25-569e-435d-a8b6-312852f024c5', 'exp': 1718456263}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c43c3ba61a4b1086a95'), email='admin@test.com', password='__hash__scrypt:32768:8:1$R6DQHeYTDImQdhlB$573c35be32189776e20313041c076f784f61c55ce47d11aa93b0ed691c35ae3324d43e7cbab013bc14d865258147e6e817f76120b04c9a738d73182c1ddd90ad', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455363, 'jti': '93698452-9181-4f44-9e56-706d58d0da35', 'type': 'access', 'sub': '666d8c43c3ba61a4b1086a95', 'nbf': 1718455363, 'csrf': '0bc0ae25-569e-435d-a8b6-312852f024c5', 'exp': 1718456263}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c43c3ba61a4b1086a95'), email='admin@test.com', password='__hash__scrypt:32768:8:1$R6DQHeYTDImQdhlB$573c35be32189776e20313041c076f784f61c55ce47d11aa93b0ed691c35ae3324d43e7cbab013bc14d865258147e6e817f76120b04c9a738d73182c1ddd90ad', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455363, 'jti': 'e7eb63b1-d3c9-4391-9207-d6a8f9e0cf6b', 'type': 'access', 'sub': '666d8c43c3ba61a4b1086a9b', 'nbf': 1718455363, 'csrf': '060c87d8-78d2-484a-81c1-34c20d5a153d', 'exp': 1718456263}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c43c3ba61a4b1086a9b'), email='admin@test.com', password='__hash__scrypt:32768:8:1$wDV3iue8g81A57K6$e2b56af3998de4749d384e381bf6eecf4c7291b344fd19fb6898cad29803d316761e166a83c4770d43910766ec3915e90f5452755dfc84628ae0e252720cc05f', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting public official by ID 666d8c43c3ba61a4b1086a9c
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455363, 'jti': 'ff17a815-2ffa-4048-9678-cc59bcafcc00', 'type': 'access', 'sub': '666d8c43c3ba61a4b1086aa0', 'nbf': 1718455363, 'csrf': 'd57379d6-e883-4d99-89e4-b4b436721dfc', 'exp': 1718456263}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c43c3ba61a4b1086aa0'), email='admin@test.com', password='__hash__scrypt:32768:8:1$J7v095oEFN88BJ9W$443991b594f528f180a3a0df479e118a9729697367235115accda936bee4732df5993b85d8ba765f77c43b5c07fa3e190171a10acd3a532bad082766800a7be4', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455363, 'jti': 'ff17a815-2ffa-4048-9678-cc59bcafcc00', 'type': 'access', 'sub': '666d8c43c3ba61a4b1086aa0', 'nbf': 1718455363, 'csrf': 'd57379d6-e883-4d99-89e4-b4b436721dfc', 'exp': 1718456263}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8c43c3ba61a4b1086aa1')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455363, 'jti': '3e2bfcc7-90d5-4825-84c7-0494c89d3cbb', 'type': 'access', 'sub': '666d8c43c3ba61a4b1086aa3', 'nbf': 1718455363, 'csrf': '72bde936-14c0-4a13-bc8f-2d92d2ef0e46', 'exp': 1718456263}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c43c3ba61a4b1086aa3'), email='admin@test.com', password='__hash__scrypt:32768:8:1$7AC7PWd7lY9jJLHJ$ac58ee35c4a34f6525986015e05a2691c614c02fb92fe7040ce16921e247853222e3439ec7e7b466b230323b963903e49594df56383b513b5fd0b0c9ced625ec', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455363, 'jti': '3e2bfcc7-90d5-4825-84c7-0494c89d3cbb', 'type': 'access', 'sub': '666d8c43c3ba61a4b1086aa3', 'nbf': 1718455363, 'csrf': '72bde936-14c0-4a13-bc8f-2d92d2ef0e46', 'exp': 1718456263}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8c43c3ba61a4b1086aa4')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455364, 'jti': '3dddab7b-16f6-454e-9105-67c60369b550', 'type': 'access', 'sub': '666d8c43c3ba61a4b1086aa6', 'nbf': 1718455364, 'csrf': '5e2eaa38-b34f-4d9b-aaed-b6ee3451f57a', 'exp': 1718456264}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455364, 'jti': '4a074a16-204b-448c-b785-43abfbda57b3', 'type': 'access', 'sub': '666d8c44c3ba61a4b1086aa8', 'nbf': 1718455364, 'csrf': 'cff30dac-abf9-4125-a6dd-2afedc95d8d0', 'exp': 1718456264}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c44c3ba61a4b1086aa8'), email='admin@test.com', password='__hash__scrypt:32768:8:1$1KVMUTniCBoXh4jU$11685ecf970a4ff50f9a2ffc50eafd550631180f3b721dc795d64a5b0a3f2161f8b3692e87205122c5b0f6b462da345279199a4d02c6fef9723840b0540b5425', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455364, 'jti': '4a074a16-204b-448c-b785-43abfbda57b3', 'type': 'access', 'sub': '666d8c44c3ba61a4b1086aa8', 'nbf': 1718455364, 'csrf': 'cff30dac-abf9-4125-a6dd-2afedc95d8d0', 'exp': 1718456264}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8c44c3ba61a4b1086aa9')
INFO:app.extensions:po_data={'name_eng': 'newname123', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455364, 'jti': '1ad91677-1d06-4469-a04d-3d882c7e50a4', 'type': 'access', 'sub': '666d8c44c3ba61a4b1086aab', 'nbf': 1718455364, 'csrf': 'a86b9bfa-b4e2-4d82-867b-adf827ba07cc', 'exp': 1718456264}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c44c3ba61a4b1086aab'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Igmv0LCXPTr65Ebe$a08bbe8a14726c4f642b33427571c337971c9aeb63f8aa4ecd51e7bbcf525dadd4bb41a44e5f8b2a026821d3bc646b7fb71ae8520f36e6f44d3f2b7c8423840c', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455364, 'jti': '1ad91677-1d06-4469-a04d-3d882c7e50a4', 'type': 'access', 'sub': '666d8c44c3ba61a4b1086aab', 'nbf': 1718455364, 'csrf': 'a86b9bfa-b4e2-4d82-867b-adf827ba07cc', 'exp': 1718456264}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8c44c3ba61a4b1086aac')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטי134man', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455364, 'jti': 'bc4f2b83-0a7c-4573-943e-b1c902de54ab', 'type': 'access', 'sub': '666d8c44c3ba61a4b1086aae', 'nbf': 1718455364, 'csrf': '13961da5-839b-4d33-a138-8e50b1b7932e', 'exp': 1718456264}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c44c3ba61a4b1086aae'), email='admin@test.com', password='__hash__scrypt:32768:8:1$S37XbzoIPc0IiFy5$c5df053a159d6cb3fd434dedefb184de8a33b1c3fb0f164a43e34dc9c559577a5604b1de8505ca848aa81dad63ee9e4be59dd99f42431016726fed8b3338c251', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455364, 'jti': 'bc4f2b83-0a7c-4573-943e-b1c902de54ab', 'type': 'access', 'sub': '666d8c44c3ba61a4b1086aae', 'nbf': 1718455364, 'csrf': '13961da5-839b-4d33-a138-8e50b1b7932e', 'exp': 1718456264}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8c44c3ba61a4b1086aaf')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'myposition123', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455364, 'jti': '749ad3e9-b594-4545-9095-8efb3c1af9ce', 'type': 'access', 'sub': '666d8c44c3ba61a4b1086ab1', 'nbf': 1718455364, 'csrf': '738bfc90-3018-44f9-b049-c677e02a7148', 'exp': 1718456264}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c44c3ba61a4b1086ab1'), email='admin@test.com', password='__hash__scrypt:32768:8:1$87qJHjEhRbjCjS5T$23333d720c0b5bd219950beac5a26c6c34c1a9a7916d99a10d7b9ab8e2fbb3e857f92aa3eadd2097fa26cc307eb934e50be1a77d832a6ab3d435327336c5206d', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455364, 'jti': '749ad3e9-b594-4545-9095-8efb3c1af9ce', 'type': 'access', 'sub': '666d8c44c3ba61a4b1086ab1', 'nbf': 1718455364, 'csrf': '738bfc90-3018-44f9-b049-c677e02a7148', 'exp': 1718456264}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8c44c3ba61a4b1086ab2')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'myspace': 'myhandle', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455365, 'jti': 'bd3a4318-c585-4016-be42-8a553f795498', 'type': 'access', 'sub': '666d8c45c3ba61a4b1086ab7', 'nbf': 1718455365, 'csrf': 'ffd79f8c-1fcc-4277-86bc-632d9f8ebd32', 'exp': 1718456265}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455365, 'jti': '3a8dab90-bf82-4b45-a148-12f53da8e820', 'type': 'access', 'sub': '666d8c45c3ba61a4b1086abc', 'nbf': 1718455365, 'csrf': '30cc356c-71fe-4af5-8c86-ab5a24feb33a', 'exp': 1718456265}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized DELETE request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455366, 'jti': '66d1565f-c0c0-4810-be74-9da56e11970f', 'type': 'access', 'sub': '666d8c45c3ba61a4b1086ac1', 'nbf': 1718455366, 'csrf': 'a3b14f3c-97b9-4891-a64b-7f3b2da96b21', 'exp': 1718456266}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455366, 'jti': '0c00c09c-356a-487c-9c5e-223c0fa68208', 'type': 'access', 'sub': '666d8c46c3ba61a4b1086ac6', 'nbf': 1718455366, 'csrf': 'f56536d9-0a7f-42ab-848a-aabb867cc137', 'exp': 1718456266}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455366, 'jti': 'd4c696ed-79d1-4f89-9b0f-6a0a92ebb116', 'type': 'access', 'sub': '666d8c46c3ba61a4b1086ac8', 'nbf': 1718455366, 'csrf': '60772c6d-5e12-4533-a71f-aeb8c363637f', 'exp': 1718456266}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455366, 'jti': 'be416805-f279-498a-b086-e87011ee56ea', 'type': 'access', 'sub': '666d8c46c3ba61a4b1086aca', 'nbf': 1718455366, 'csrf': '95312ecb-25db-4689-9385-ba4f7ab75e16', 'exp': 1718456266}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455366, 'jti': 'f895c0af-5a4a-43db-a2d3-510a9cb819f6', 'type': 'access', 'sub': '666d8c46c3ba61a4b1086acc', 'nbf': 1718455366, 'csrf': '752987a1-87e7-4f35-ac4b-49dbff4479a8', 'exp': 1718456266}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455367, 'jti': '1aa0db2c-98a8-42fb-9513-e88a3ebc9996', 'type': 'access', 'sub': '666d8c47c3ba61a4b1086ace', 'nbf': 1718455367, 'csrf': '16aa81d1-27ea-444d-b9c5-0203df91d1cd', 'exp': 1718456267}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455367, 'jti': '1aa0db2c-98a8-42fb-9513-e88a3ebc9996', 'type': 'access', 'sub': '666d8c47c3ba61a4b1086ace', 'nbf': 1718455367, 'csrf': '16aa81d1-27ea-444d-b9c5-0203df91d1cd', 'exp': 1718456267}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455367, 'jti': '1aa0db2c-98a8-42fb-9513-e88a3ebc9996', 'type': 'access', 'sub': '666d8c47c3ba61a4b1086ace', 'nbf': 1718455367, 'csrf': '16aa81d1-27ea-444d-b9c5-0203df91d1cd', 'exp': 1718456267}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455367, 'jti': '1aa0db2c-98a8-42fb-9513-e88a3ebc9996', 'type': 'access', 'sub': '666d8c47c3ba61a4b1086ace', 'nbf': 1718455367, 'csrf': '16aa81d1-27ea-444d-b9c5-0203df91d1cd', 'exp': 1718456267}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455367, 'jti': '1aa0db2c-98a8-42fb-9513-e88a3ebc9996', 'type': 'access', 'sub': '666d8c47c3ba61a4b1086ace', 'nbf': 1718455367, 'csrf': '16aa81d1-27ea-444d-b9c5-0203df91d1cd', 'exp': 1718456267}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455367, 'jti': '1aa0db2c-98a8-42fb-9513-e88a3ebc9996', 'type': 'access', 'sub': '666d8c47c3ba61a4b1086ace', 'nbf': 1718455367, 'csrf': '16aa81d1-27ea-444d-b9c5-0203df91d1cd', 'exp': 1718456267}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455367, 'jti': 'bfc07bc1-8747-4633-b6b8-4ffdeaf26390', 'type': 'access', 'sub': '666d8c47c3ba61a4b1086ad0', 'nbf': 1718455367, 'csrf': '669de8c7-e887-4902-9606-d4493cb05db7', 'exp': 1718456267}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455367, 'jti': 'bfc07bc1-8747-4633-b6b8-4ffdeaf26390', 'type': 'access', 'sub': '666d8c47c3ba61a4b1086ad0', 'nbf': 1718455367, 'csrf': '669de8c7-e887-4902-9606-d4493cb05db7', 'exp': 1718456267}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455367, 'jti': 'bfc07bc1-8747-4633-b6b8-4ffdeaf26390', 'type': 'access', 'sub': '666d8c47c3ba61a4b1086ad0', 'nbf': 1718455367, 'csrf': '669de8c7-e887-4902-9606-d4493cb05db7', 'exp': 1718456267}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455367, 'jti': 'bfc07bc1-8747-4633-b6b8-4ffdeaf26390', 'type': 'access', 'sub': '666d8c47c3ba61a4b1086ad0', 'nbf': 1718455367, 'csrf': '669de8c7-e887-4902-9606-d4493cb05db7', 'exp': 1718456267}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455367, 'jti': 'bfc07bc1-8747-4633-b6b8-4ffdeaf26390', 'type': 'access', 'sub': '666d8c47c3ba61a4b1086ad0', 'nbf': 1718455367, 'csrf': '669de8c7-e887-4902-9606-d4493cb05db7', 'exp': 1718456267}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455367, 'jti': 'bfc07bc1-8747-4633-b6b8-4ffdeaf26390', 'type': 'access', 'sub': '666d8c47c3ba61a4b1086ad0', 'nbf': 1718455367, 'csrf': '669de8c7-e887-4902-9606-d4493cb05db7', 'exp': 1718456267}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455368, 'jti': '1c74f42c-2d72-43dc-bc9d-56de9f036603', 'type': 'access', 'sub': '666d8c48c3ba61a4b1086ad2', 'nbf': 1718455368, 'csrf': '2d60d5a5-0c14-4ffa-b3df-4d8394fc20b7', 'exp': 1718456268}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455368, 'jti': 'b7e356d1-bfe5-4197-8a51-fc16cc8687da', 'type': 'access', 'sub': '666d8c48c3ba61a4b1086ad4', 'nbf': 1718455368, 'csrf': '04a2cd7a-fc64-4bc6-b078-1395a4395d4f', 'exp': 1718456268}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455451, 'jti': '083a4b43-44e6-46a2-8681-5c05d3021c98', 'type': 'access', 'sub': '666d8c9b676cffab45954d02', 'nbf': 1718455451, 'csrf': '8701a5cf-cbd9-4ae5-85d2-8f72aa0c9227', 'exp': 1718456351}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666d8c9b676cffab45954d02') email='test@test.com' password='__hash__scrypt:32768:8:1$2Jbm6i7rJkzM32JC$8c4d44ca92f639ef39cade81ddee5edaf4e3cb4251eb43dae37f46dce1c7b24c68f08ef36bb79671a18812f719de05a5a3306a90e38baaac41bb412c2f91d4ee' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455452, 'jti': '6134ceae-9483-417d-8bf7-5e058d6514a2', 'type': 'access', 'sub': '666d8c9c676cffab45954d07', 'nbf': 1718455452, 'csrf': '8165c025-3501-4e3a-88fa-363b4acea67c', 'exp': 1718456352}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666d8c9c676cffab45954d07') email='test@test.com' password='__hash__scrypt:32768:8:1$FlWOv2Xf61u4htjW$9f86c812ffab61ef50c069a2a0215a67d25ab5fdee36c9e90247a1a3e55927709ff47e61b3c1ec566811a1d4ab6985c6af31ad17adb16be193ed87a118fb0854' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455452, 'jti': 'afd59f26-7bc3-4e0f-80c5-17306ce53613', 'type': 'access', 'sub': '666d8c9c676cffab45954d0a', 'nbf': 1718455452, 'csrf': 'f9301e90-26e6-42a9-8ba4-c48c36223bac', 'exp': 1718456352}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666d8c9c676cffab45954d0a') email='test@test.com' password='__hash__scrypt:32768:8:1$jXvieIpFuBhO4qAW$2d1779c0c820f1ad46587fc31667cc699dd6fb0193ddc6db6106df360ee2eda519e94cf7701a9ab398e1eac51d41f92d541d524879c28edf98bb2e573eead6b2' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455452, 'jti': '1f41d268-0343-4505-a49d-6906fb7ef96b', 'type': 'access', 'sub': '666d8c9c676cffab45954d16', 'nbf': 1718455452, 'csrf': '5381ee2f-bbd0-42a3-b001-b4fa148af751', 'exp': 1718456352}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c9c676cffab45954d16'), email='admin@test.com', password='__hash__scrypt:32768:8:1$eWKgliHpoCvBAUAx$7cbd27f3bcd68f75ab146911cdcc8f0ccee2f9aaaf9810fd739e24bd38464da82c43ef4036678daf7b95e7bfed5191c2c3ff7bfa823d715cf17affee7a5dd1c5', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455453, 'jti': '0c49a9f6-7828-4b33-b57f-e39da5f51d34', 'type': 'access', 'sub': '666d8c9d676cffab45954d19', 'nbf': 1718455453, 'csrf': '0faf0a42-2b71-415d-8c42-f04a064555d9', 'exp': 1718456353}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c9d676cffab45954d19'), email='admin@test.com', password='__hash__scrypt:32768:8:1$6BRjM1WewS0wGFXb$ba623046b25b7d7f5f1e8a9240efe33342753eb9df4a27bb0d8ce525b4a687c5dcc60594a0983fc900e623602b5cebc4cd5866b9b46fc7ef57d635e46ed7a15a', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455453, 'jti': 'dcc06243-e37a-4881-935e-5217ac926a4e', 'type': 'access', 'sub': '666d8c9d676cffab45954d1b', 'nbf': 1718455453, 'csrf': 'c22bb52b-265a-429a-b1e8-a78bffc85b3d', 'exp': 1718456353}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c9d676cffab45954d1b'), email='admin@test.com', password='__hash__scrypt:32768:8:1$mRVTunADCbK6sLwB$8357f07a8857f62d77a78113871b1f4ec226f1490117f0fae91544ada1669af6d278e47678af7e6b6d33a55553c718722f51b539c39a42188c9de057c9bedb7f', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455453, 'jti': '0d03037f-9c99-40d1-a581-e70585507b13', 'type': 'access', 'sub': '666d8c9d676cffab45954d1d', 'nbf': 1718455453, 'csrf': 'c3005e1c-19cd-41ff-9075-cebb3444ab20', 'exp': 1718456353}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c9d676cffab45954d1d'), email='admin@test.com', password='__hash__scrypt:32768:8:1$kriOYaJqN1wuQTrn$797d504c4dba3c91e91d07090247d59baac6e283038c41d5b73a9d0b7e55f161afa09a011fec21545d8958868e7b9b1a48ad4d1bd9a73428e3d874663accf633', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455453, 'jti': '48d5576c-33ec-42fe-8652-ab9345d68789', 'type': 'access', 'sub': '666d8c9d676cffab45954d1f', 'nbf': 1718455453, 'csrf': '8402dd66-4efa-43a0-9f86-ad10deabbae2', 'exp': 1718456353}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c9d676cffab45954d1f'), email='admin@test.com', password='__hash__scrypt:32768:8:1$9fNeIvBAFsACqw8M$57c01b2eb0fdd03bd07daea08f80ca40adfb8ca95cd0c0edea012a169e678a5d08ed070791582e115650ac2ad743759c6db0438143255b36ec9152cd59ef082b', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455453, 'jti': '1c21499e-c427-4c4d-8b3a-6d75eed37f02', 'type': 'access', 'sub': '666d8c9d676cffab45954d21', 'nbf': 1718455453, 'csrf': '7b0a1320-5d10-4ef6-831f-483aedf8a1b4', 'exp': 1718456353}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c9d676cffab45954d21'), email='admin@test.com', password='__hash__scrypt:32768:8:1$c8JmAydK59U4m3la$ec78ab90e5005c3b5151923bcdac6dc9aef2c28bb05a126e4848ba966c5d1572812993d4a23991e30fac77f7706450b6fd92fae5b8a37b2979dc39eec2b99391', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455454, 'jti': '394d52c2-2929-423f-987e-a5b70b2e28ae', 'type': 'access', 'sub': '666d8c9d676cffab45954d23', 'nbf': 1718455454, 'csrf': '9f2a7469-e025-4079-b822-c0f85fc7c8bc', 'exp': 1718456354}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c9d676cffab45954d23'), email='admin@test.com', password='__hash__scrypt:32768:8:1$p6xAcsBGvq0Ig7NJ$2e2bfbb746a22ea7011469b869a2999bc403098deab1e9f0940988b94a13ae4725b91ea9df8a183b615097719fac76577165a65685d5383a0885150e5bb38dcf', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455454, 'jti': '394d52c2-2929-423f-987e-a5b70b2e28ae', 'type': 'access', 'sub': '666d8c9d676cffab45954d23', 'nbf': 1718455454, 'csrf': '9f2a7469-e025-4079-b822-c0f85fc7c8bc', 'exp': 1718456354}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c9d676cffab45954d23'), email='admin@test.com', password='__hash__scrypt:32768:8:1$p6xAcsBGvq0Ig7NJ$2e2bfbb746a22ea7011469b869a2999bc403098deab1e9f0940988b94a13ae4725b91ea9df8a183b615097719fac76577165a65685d5383a0885150e5bb38dcf', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:Public Official already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = public_official_service.create_public_official(public_official)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\publicofficial_data_manager_mongodb.py", line 14, in create_public_official
    raise ObjectAlreadyExistsException("Public Official already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: Public Official already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455454, 'jti': 'fff5aeaf-7de3-42d0-899c-0d3a0b8ec1fa', 'type': 'access', 'sub': '666d8c9e676cffab45954d26', 'nbf': 1718455454, 'csrf': 'cae6535c-4a82-4e08-8191-c5513e65bcad', 'exp': 1718456354}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c9e676cffab45954d26'), email='admin@test.com', password='__hash__scrypt:32768:8:1$7zmdd7Og4Mrzqwfu$ea8eb4f21d36ac71ba67bb7d756de3dcc2aabab2fea7ed977e57726f2e28448b15da0091a4b6b5dce8aa8063c2ee35be0c6c57dddd60915449bc640f15647e48', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455454, 'jti': 'fff5aeaf-7de3-42d0-899c-0d3a0b8ec1fa', 'type': 'access', 'sub': '666d8c9e676cffab45954d26', 'nbf': 1718455454, 'csrf': 'cae6535c-4a82-4e08-8191-c5513e65bcad', 'exp': 1718456354}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c9e676cffab45954d26'), email='admin@test.com', password='__hash__scrypt:32768:8:1$7zmdd7Og4Mrzqwfu$ea8eb4f21d36ac71ba67bb7d756de3dcc2aabab2fea7ed977e57726f2e28448b15da0091a4b6b5dce8aa8063c2ee35be0c6c57dddd60915449bc640f15647e48', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455454, 'jti': 'fff5aeaf-7de3-42d0-899c-0d3a0b8ec1fa', 'type': 'access', 'sub': '666d8c9e676cffab45954d26', 'nbf': 1718455454, 'csrf': 'cae6535c-4a82-4e08-8191-c5513e65bcad', 'exp': 1718456354}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c9e676cffab45954d26'), email='admin@test.com', password='__hash__scrypt:32768:8:1$7zmdd7Og4Mrzqwfu$ea8eb4f21d36ac71ba67bb7d756de3dcc2aabab2fea7ed977e57726f2e28448b15da0091a4b6b5dce8aa8063c2ee35be0c6c57dddd60915449bc640f15647e48', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455454, 'jti': 'fff5aeaf-7de3-42d0-899c-0d3a0b8ec1fa', 'type': 'access', 'sub': '666d8c9e676cffab45954d26', 'nbf': 1718455454, 'csrf': 'cae6535c-4a82-4e08-8191-c5513e65bcad', 'exp': 1718456354}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455454, 'jti': '1d52fd8b-3034-4470-820e-f0ffdc561da0', 'type': 'access', 'sub': '666d8c9e676cffab45954d2b', 'nbf': 1718455454, 'csrf': '486dc706-7776-4ce4-8172-e4b9c3d1672a', 'exp': 1718456354}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c9e676cffab45954d2b'), email='admin@test.com', password='__hash__scrypt:32768:8:1$UV11nhiadwOqhniV$5da084de627cb054a46749565f33970ee8e9e2ffcf778a9a5374db8b87522429b968aeb140ef2ca09344fdbd2f3ad1b78cb8a2b529e5c025c2e72e356469cb6c', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455454, 'jti': '1d52fd8b-3034-4470-820e-f0ffdc561da0', 'type': 'access', 'sub': '666d8c9e676cffab45954d2b', 'nbf': 1718455454, 'csrf': '486dc706-7776-4ce4-8172-e4b9c3d1672a', 'exp': 1718456354}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c9e676cffab45954d2b'), email='admin@test.com', password='__hash__scrypt:32768:8:1$UV11nhiadwOqhniV$5da084de627cb054a46749565f33970ee8e9e2ffcf778a9a5374db8b87522429b968aeb140ef2ca09344fdbd2f3ad1b78cb8a2b529e5c025c2e72e356469cb6c', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455454, 'jti': '1d52fd8b-3034-4470-820e-f0ffdc561da0', 'type': 'access', 'sub': '666d8c9e676cffab45954d2b', 'nbf': 1718455454, 'csrf': '486dc706-7776-4ce4-8172-e4b9c3d1672a', 'exp': 1718456354}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c9e676cffab45954d2b'), email='admin@test.com', password='__hash__scrypt:32768:8:1$UV11nhiadwOqhniV$5da084de627cb054a46749565f33970ee8e9e2ffcf778a9a5374db8b87522429b968aeb140ef2ca09344fdbd2f3ad1b78cb8a2b529e5c025c2e72e356469cb6c', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455454, 'jti': '457853c7-119c-4ee1-8018-fedfdad07ced', 'type': 'access', 'sub': '666d8c9e676cffab45954d2f', 'nbf': 1718455454, 'csrf': '56880088-5ade-4e1f-a873-a9286260096e', 'exp': 1718456354}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
ERROR:app.extensions:Unauthorized DELETE request to /public-officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455454, 'jti': 'fd1a8c4a-639a-46b5-9715-aa5b05315cc7', 'type': 'access', 'sub': '666d8c9e676cffab45954d31', 'nbf': 1718455454, 'csrf': 'd944fddd-349e-41fd-8900-e7b3c65b6f2b', 'exp': 1718456354}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c9e676cffab45954d31'), email='admin@test.com', password='__hash__scrypt:32768:8:1$M42iNIcs2X57JXnh$45c2c6ab32a658d108bf079121af325d6bfb6107bff0ff1c22f7051166c2326a12e9c56d96518e5c4323119694ca0de5d8144ce32abb40b321d4a70a7b080628', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455454, 'jti': 'fd1a8c4a-639a-46b5-9715-aa5b05315cc7', 'type': 'access', 'sub': '666d8c9e676cffab45954d31', 'nbf': 1718455454, 'csrf': 'd944fddd-349e-41fd-8900-e7b3c65b6f2b', 'exp': 1718456354}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c9e676cffab45954d31'), email='admin@test.com', password='__hash__scrypt:32768:8:1$M42iNIcs2X57JXnh$45c2c6ab32a658d108bf079121af325d6bfb6107bff0ff1c22f7051166c2326a12e9c56d96518e5c4323119694ca0de5d8144ce32abb40b321d4a70a7b080628', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455454, 'jti': 'fd1a8c4a-639a-46b5-9715-aa5b05315cc7', 'type': 'access', 'sub': '666d8c9e676cffab45954d31', 'nbf': 1718455454, 'csrf': 'd944fddd-349e-41fd-8900-e7b3c65b6f2b', 'exp': 1718456354}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c9e676cffab45954d31'), email='admin@test.com', password='__hash__scrypt:32768:8:1$M42iNIcs2X57JXnh$45c2c6ab32a658d108bf079121af325d6bfb6107bff0ff1c22f7051166c2326a12e9c56d96518e5c4323119694ca0de5d8144ce32abb40b321d4a70a7b080628', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455454, 'jti': '6c29403c-9b80-4910-86b7-03d4d291a815', 'type': 'access', 'sub': '666d8c9e676cffab45954d37', 'nbf': 1718455454, 'csrf': 'aba05471-c92d-4c59-aef6-82f9edad8b93', 'exp': 1718456354}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c9e676cffab45954d37'), email='admin@test.com', password='__hash__scrypt:32768:8:1$4JiGwTHs5Nu5m7Cm$6039f218dae1bc1a96340c9eb498bf26da9d79c9c41131bc3982c22e85cced0de10fed11302a568498f7905068e0e5d97c00f7f4cf1f7f4f9bbf06e03823301e', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting public official by ID 666d8c9e676cffab45954d38
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455455, 'jti': '99f1b04a-3f8f-4bab-a9da-2940a666ed34', 'type': 'access', 'sub': '666d8c9f676cffab45954d3c', 'nbf': 1718455455, 'csrf': '74d4ae89-5f47-4fab-acbf-0db70285baae', 'exp': 1718456355}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c9f676cffab45954d3c'), email='admin@test.com', password='__hash__scrypt:32768:8:1$uapA0K2yfHZNMbQm$5e977fa7eeea75f6b147cb51c28f7f0822eb4c98047bc44ccd87c9d4880ab5c27fecead84954232d72ae7265e6fcb6076bf68bdce39f536ec018e94627477606', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455455, 'jti': '99f1b04a-3f8f-4bab-a9da-2940a666ed34', 'type': 'access', 'sub': '666d8c9f676cffab45954d3c', 'nbf': 1718455455, 'csrf': '74d4ae89-5f47-4fab-acbf-0db70285baae', 'exp': 1718456355}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8c9f676cffab45954d3d')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455455, 'jti': 'd75873f5-df0e-4806-ba8b-5bb5061e3cd9', 'type': 'access', 'sub': '666d8c9f676cffab45954d3f', 'nbf': 1718455455, 'csrf': '27b23047-bdd5-415a-8865-25c31b6b5bca', 'exp': 1718456355}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c9f676cffab45954d3f'), email='admin@test.com', password='__hash__scrypt:32768:8:1$I5NnwqgLQmszmagC$142e9dc8d85e5ea706d9d364d052ca4a78d61332e5c5039328efb37d396e5d0c6fbbaf2672cc7c7125ff4f762d92b444291030d4d2f036177d03035a5d2dec10', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455455, 'jti': 'd75873f5-df0e-4806-ba8b-5bb5061e3cd9', 'type': 'access', 'sub': '666d8c9f676cffab45954d3f', 'nbf': 1718455455, 'csrf': '27b23047-bdd5-415a-8865-25c31b6b5bca', 'exp': 1718456355}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8c9f676cffab45954d40')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455455, 'jti': '6a136b67-2e7a-45a5-9305-c39fb8d92cae', 'type': 'access', 'sub': '666d8c9f676cffab45954d42', 'nbf': 1718455455, 'csrf': '0743a182-bff0-452b-b4f8-c60004ad1c73', 'exp': 1718456355}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455456, 'jti': '88d8da7c-14b7-4254-a1b8-b6980ddf027e', 'type': 'access', 'sub': '666d8c9f676cffab45954d44', 'nbf': 1718455456, 'csrf': 'b6c898ec-cdf5-4a05-8207-90089a26d415', 'exp': 1718456356}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8c9f676cffab45954d44'), email='admin@test.com', password='__hash__scrypt:32768:8:1$3X4Tk4L8JVEbwnw8$02151b6d254c8c3f280a9d1ae1896c4fab8aba0b6ca25acc84f83028ec589af2ef3dc959023f70dbd085adf764b903e70c656cd679eb40fa17508ad8f4c6d6ab', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455456, 'jti': '88d8da7c-14b7-4254-a1b8-b6980ddf027e', 'type': 'access', 'sub': '666d8c9f676cffab45954d44', 'nbf': 1718455456, 'csrf': 'b6c898ec-cdf5-4a05-8207-90089a26d415', 'exp': 1718456356}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8ca0676cffab45954d45')
INFO:app.extensions:po_data={'name_eng': 'newname123', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455456, 'jti': '48afa00e-f56a-4397-a87e-ca6019a2101f', 'type': 'access', 'sub': '666d8ca0676cffab45954d47', 'nbf': 1718455456, 'csrf': '573b57bb-ab7e-4729-b0b3-3ac534d27316', 'exp': 1718456356}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8ca0676cffab45954d47'), email='admin@test.com', password='__hash__scrypt:32768:8:1$87jI9H7l6RTISQBp$30407447f4aadca75669febce9f9435c3e5c45d7aed73d59292200c028e4a6a4463dbd3ae46306d10da1fb80dae98349367f97b3aee32ca98717fb08d75cc6d8', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455456, 'jti': '48afa00e-f56a-4397-a87e-ca6019a2101f', 'type': 'access', 'sub': '666d8ca0676cffab45954d47', 'nbf': 1718455456, 'csrf': '573b57bb-ab7e-4729-b0b3-3ac534d27316', 'exp': 1718456356}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8ca0676cffab45954d48')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטי134man', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455456, 'jti': 'db0683c6-dfb7-456a-86ad-8935c800d78e', 'type': 'access', 'sub': '666d8ca0676cffab45954d4a', 'nbf': 1718455456, 'csrf': '72301323-bee7-4b98-8502-f2f5e8ef7bef', 'exp': 1718456356}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8ca0676cffab45954d4a'), email='admin@test.com', password='__hash__scrypt:32768:8:1$sh9pt0e7m9pptDdS$107b778713abc0e6647cee2756d3472038d01c08fc756c1a42caddb1c1437f88aba66489b773fd6f580a19db0e83f40e077cfe6b0ee3d9bc98c2a682426bdd1f', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455456, 'jti': 'db0683c6-dfb7-456a-86ad-8935c800d78e', 'type': 'access', 'sub': '666d8ca0676cffab45954d4a', 'nbf': 1718455456, 'csrf': '72301323-bee7-4b98-8502-f2f5e8ef7bef', 'exp': 1718456356}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8ca0676cffab45954d4b')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'myposition123', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455456, 'jti': 'd988b5a0-5697-4136-a9ac-4fc88427bb23', 'type': 'access', 'sub': '666d8ca0676cffab45954d4d', 'nbf': 1718455456, 'csrf': 'dfc93ad2-10f2-4d05-a551-74c69838ab2d', 'exp': 1718456356}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8ca0676cffab45954d4d'), email='admin@test.com', password='__hash__scrypt:32768:8:1$4BlT2vrAnh3e4KB7$d4bf39355b804fe5c5bdcaef1057f1da8a516ed9c1416aca3ddceaf353db9899812d24b1e5cf6c7a0fe03d83a388681a971314326ef2e4c4e459b7257276d74a', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455456, 'jti': 'd988b5a0-5697-4136-a9ac-4fc88427bb23', 'type': 'access', 'sub': '666d8ca0676cffab45954d4d', 'nbf': 1718455456, 'csrf': 'dfc93ad2-10f2-4d05-a551-74c69838ab2d', 'exp': 1718456356}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8ca0676cffab45954d4e')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'myspace': 'myhandle', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455457, 'jti': '6d242779-a08f-4269-a4ab-0685a3829d6f', 'type': 'access', 'sub': '666d8ca0676cffab45954d53', 'nbf': 1718455457, 'csrf': '9c5c1e6c-5ffd-47f6-a888-962f7027ad5a', 'exp': 1718456357}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455457, 'jti': 'dc060a5c-ad6f-43ed-ae93-ece308f9783b', 'type': 'access', 'sub': '666d8ca1676cffab45954d58', 'nbf': 1718455457, 'csrf': '712bff1c-d942-47da-b4ca-a33cbedbb5ed', 'exp': 1718456357}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized DELETE request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455457, 'jti': '0b77ca44-cd92-43a0-a19c-60b4c5ade340', 'type': 'access', 'sub': '666d8ca1676cffab45954d5d', 'nbf': 1718455457, 'csrf': '5c480902-db4b-4434-94ae-7458ecb1e542', 'exp': 1718456357}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455458, 'jti': '8b338849-f5f1-4a64-bead-83682cc6a5ea', 'type': 'access', 'sub': '666d8ca2676cffab45954d62', 'nbf': 1718455458, 'csrf': 'd64e2967-bd43-453f-aee7-167d396a259f', 'exp': 1718456358}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455458, 'jti': '9fc2403e-1cd2-4812-b7e6-31affdf48986', 'type': 'access', 'sub': '666d8ca2676cffab45954d64', 'nbf': 1718455458, 'csrf': 'b4f61a21-fbcb-43b5-ac84-f3503607e83c', 'exp': 1718456358}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455458, 'jti': '6503c7bb-7408-4c2c-b5b3-22c8b406d731', 'type': 'access', 'sub': '666d8ca2676cffab45954d66', 'nbf': 1718455458, 'csrf': '6de67f4f-4982-4ee0-a907-14409c858e82', 'exp': 1718456358}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455458, 'jti': '7ed0d450-90bb-4564-8257-3c665263c04a', 'type': 'access', 'sub': '666d8ca2676cffab45954d68', 'nbf': 1718455458, 'csrf': '39074f41-616b-4ec3-ac78-4085ba5369be', 'exp': 1718456358}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455458, 'jti': '7553106d-f52c-41f9-b900-9966d3d1f4a3', 'type': 'access', 'sub': '666d8ca2676cffab45954d6a', 'nbf': 1718455458, 'csrf': '2e763992-3ef9-4b37-9a11-11ebc9cf2c11', 'exp': 1718456358}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455458, 'jti': '7553106d-f52c-41f9-b900-9966d3d1f4a3', 'type': 'access', 'sub': '666d8ca2676cffab45954d6a', 'nbf': 1718455458, 'csrf': '2e763992-3ef9-4b37-9a11-11ebc9cf2c11', 'exp': 1718456358}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455458, 'jti': '7553106d-f52c-41f9-b900-9966d3d1f4a3', 'type': 'access', 'sub': '666d8ca2676cffab45954d6a', 'nbf': 1718455458, 'csrf': '2e763992-3ef9-4b37-9a11-11ebc9cf2c11', 'exp': 1718456358}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455458, 'jti': '7553106d-f52c-41f9-b900-9966d3d1f4a3', 'type': 'access', 'sub': '666d8ca2676cffab45954d6a', 'nbf': 1718455458, 'csrf': '2e763992-3ef9-4b37-9a11-11ebc9cf2c11', 'exp': 1718456358}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455458, 'jti': '7553106d-f52c-41f9-b900-9966d3d1f4a3', 'type': 'access', 'sub': '666d8ca2676cffab45954d6a', 'nbf': 1718455458, 'csrf': '2e763992-3ef9-4b37-9a11-11ebc9cf2c11', 'exp': 1718456358}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455458, 'jti': '7553106d-f52c-41f9-b900-9966d3d1f4a3', 'type': 'access', 'sub': '666d8ca2676cffab45954d6a', 'nbf': 1718455458, 'csrf': '2e763992-3ef9-4b37-9a11-11ebc9cf2c11', 'exp': 1718456358}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455459, 'jti': '82193144-7c24-477e-874c-039542341892', 'type': 'access', 'sub': '666d8ca3676cffab45954d6c', 'nbf': 1718455459, 'csrf': '4acbec40-4c14-4ece-b894-eb09eb5dd8f4', 'exp': 1718456359}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455459, 'jti': '82193144-7c24-477e-874c-039542341892', 'type': 'access', 'sub': '666d8ca3676cffab45954d6c', 'nbf': 1718455459, 'csrf': '4acbec40-4c14-4ece-b894-eb09eb5dd8f4', 'exp': 1718456359}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455459, 'jti': '82193144-7c24-477e-874c-039542341892', 'type': 'access', 'sub': '666d8ca3676cffab45954d6c', 'nbf': 1718455459, 'csrf': '4acbec40-4c14-4ece-b894-eb09eb5dd8f4', 'exp': 1718456359}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455459, 'jti': '82193144-7c24-477e-874c-039542341892', 'type': 'access', 'sub': '666d8ca3676cffab45954d6c', 'nbf': 1718455459, 'csrf': '4acbec40-4c14-4ece-b894-eb09eb5dd8f4', 'exp': 1718456359}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455459, 'jti': '82193144-7c24-477e-874c-039542341892', 'type': 'access', 'sub': '666d8ca3676cffab45954d6c', 'nbf': 1718455459, 'csrf': '4acbec40-4c14-4ece-b894-eb09eb5dd8f4', 'exp': 1718456359}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455459, 'jti': '82193144-7c24-477e-874c-039542341892', 'type': 'access', 'sub': '666d8ca3676cffab45954d6c', 'nbf': 1718455459, 'csrf': '4acbec40-4c14-4ece-b894-eb09eb5dd8f4', 'exp': 1718456359}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455460, 'jti': '4ac93f3e-62a8-401b-aea4-305b4c1c2ded', 'type': 'access', 'sub': '666d8ca4676cffab45954d6e', 'nbf': 1718455460, 'csrf': '52540aa5-0f17-4093-9a14-7cbcd6f72786', 'exp': 1718456360}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455460, 'jti': 'c943fb1f-1264-4f28-ae3b-766d66add78c', 'type': 'access', 'sub': '666d8ca4676cffab45954d70', 'nbf': 1718455460, 'csrf': '9fe50f39-2608-452c-a06c-b92d123986e5', 'exp': 1718456360}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455500, 'jti': '161a2b00-d706-497c-8a88-0ed4361d63de', 'type': 'access', 'sub': '666d8cccd77d4391da2b246e', 'nbf': 1718455500, 'csrf': '3d60b8fb-64b0-46e1-9033-e7f90ad5bbf5', 'exp': 1718456400}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666d8cccd77d4391da2b246e') email='test@test.com' password='__hash__scrypt:32768:8:1$a5Lsu15jj2nxbnKX$9bdd478133a599f704cf67530544526c8afd53ceee4de99dd63d00ed92c7410881dec4fbe27a3ee551ba8d7997dce73803eacc4b653263247fc71e04e0a6af1c' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455500, 'jti': 'd30f2f32-a978-4eac-8daf-2a5baf41223b', 'type': 'access', 'sub': '666d8cccd77d4391da2b2473', 'nbf': 1718455500, 'csrf': '872ccfbd-9695-4e50-bb90-561ebfe54b49', 'exp': 1718456400}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666d8cccd77d4391da2b2473') email='test@test.com' password='__hash__scrypt:32768:8:1$z4on1psg2j6WpbgG$7f416a86c5f7989d536320d307bdd6aa94a92016af83bcf7220e4bde6785e079b27855faf45f781e50e1f27b4f6b5fa7accfdfe4cdb287c3e5f8c972b7d0e127' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455501, 'jti': 'd9680ec8-7978-48ba-a6e2-9a18323b620a', 'type': 'access', 'sub': '666d8ccdd77d4391da2b2476', 'nbf': 1718455501, 'csrf': 'e6b03e79-3354-4c8f-a930-649c0a09ebe5', 'exp': 1718456401}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666d8ccdd77d4391da2b2476') email='test@test.com' password='__hash__scrypt:32768:8:1$vpNGLHO8uEKsCvCL$6d17cef24ed6943dfb6b4b42406389bb571d94381df69fc577c3f9b7c4dc26df2d0eb1c95596dd95b7924f8b7dfc241e1469435a58976ea91cf2418e9a7f20fd' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455501, 'jti': '51c1916f-8021-4d5d-a503-7cab57e38f32', 'type': 'access', 'sub': '666d8ccdd77d4391da2b2482', 'nbf': 1718455501, 'csrf': 'fae5d2f7-b01f-4d9d-a88b-5860c75779e6', 'exp': 1718456401}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8ccdd77d4391da2b2482'), email='admin@test.com', password='__hash__scrypt:32768:8:1$94HMBwgN0IKQPN2S$fcffe4344954cb2dbc4a01a7ffc18df40dfb5f4be24aa6f37700a155fcf23e8fbfa756e1cdf0af73db378da0259304a4da48b1603c391c8c554ec2e9b338aef2', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455502, 'jti': 'b8cfb8d4-7e23-41e4-87a9-5c4294a9b893', 'type': 'access', 'sub': '666d8cced77d4391da2b2485', 'nbf': 1718455502, 'csrf': '64f112b2-3f7c-4aba-b767-624a25a5d83b', 'exp': 1718456402}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8cced77d4391da2b2485'), email='admin@test.com', password='__hash__scrypt:32768:8:1$EdpdACPdCeHfk5w0$facf1fe5780ab223492de3d4c82c16111597e3382d48cc104beac75f46836f0db8ce651c2760d16d8d189153ab743e38aecbfa2c199a6205be6fd545a624f77d', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455502, 'jti': 'ff4f2ebe-41d3-42b8-be37-c3f9f9ccb436', 'type': 'access', 'sub': '666d8cced77d4391da2b2487', 'nbf': 1718455502, 'csrf': '7e66bf44-fc10-408b-995f-f769860513ef', 'exp': 1718456402}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8cced77d4391da2b2487'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Wsoa9wAq6JwNvjIr$eae17eb7466635b1dfd732712147cf848b021a2c47994f2f02e52186a1e08ba302ae1a42c1ed3b24435e745c804830ed1072345f2e17ab3d8c0e9b0ee300db1c', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455502, 'jti': '89a7122f-d46e-4fed-bc89-040a5565fe4f', 'type': 'access', 'sub': '666d8cced77d4391da2b2489', 'nbf': 1718455502, 'csrf': 'a2b1b9a5-df42-4b5a-aac2-d26ee2b76670', 'exp': 1718456402}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8cced77d4391da2b2489'), email='admin@test.com', password='__hash__scrypt:32768:8:1$QMXo8UWoZHi0bui0$77759e4b0238857b7083c8ee80f4604eeb1b333ceb0f3b5e4eb4820ce814cb63d643a3aa2412dab1721ce73aac262bf9f97f6ef6d0696054aec9e35cd97ae4ad', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455502, 'jti': '8fb9238d-4dbc-4f01-ae42-573d40bacc3f', 'type': 'access', 'sub': '666d8cced77d4391da2b248b', 'nbf': 1718455502, 'csrf': '9ab26eb3-4095-43db-8559-8208da72e415', 'exp': 1718456402}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8cced77d4391da2b248b'), email='admin@test.com', password='__hash__scrypt:32768:8:1$GbGy0IFVeNWBJwy6$1c0f8a07225915c884e599f5020d2d1914ca591a942f69d2edf7ce02e2c16842c4374aab8624fd92f0d91c4b0a8c32fa46cbbcbe2edc6dd74cadc3d4f52d188e', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455502, 'jti': 'fdfc6f0e-64b3-42f1-947b-0ba42b418de5', 'type': 'access', 'sub': '666d8cced77d4391da2b248d', 'nbf': 1718455502, 'csrf': '8c6c34d9-0e32-4d28-9085-8421ec97a3bb', 'exp': 1718456402}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8cced77d4391da2b248d'), email='admin@test.com', password='__hash__scrypt:32768:8:1$7SO1sIgVgsNhpcaK$b7e634c794f227d3971926f54b93ffe99d16f0be75f276c4de5bed56f4fe08e1c2b53f2238c73b809c0a1ba2ec2c0cd0788cd27d2fc9d401595cf8ca8c8abbde', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455503, 'jti': '4ee7a245-6442-4d35-998c-d64b682c6a94', 'type': 'access', 'sub': '666d8cced77d4391da2b248f', 'nbf': 1718455503, 'csrf': 'a66502dd-8575-4c29-8a59-f7a64ef0eccf', 'exp': 1718456403}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8cced77d4391da2b248f'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Lo8RM2hAu1qsSKkt$c0e8a654d43a0bca9374a79fe2006627501ccb73c328a78b053e3257713f7a20bf2f801460e344b76805418a9ba00933f8500030fcf2d18a36d444c514c68506', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455503, 'jti': '4ee7a245-6442-4d35-998c-d64b682c6a94', 'type': 'access', 'sub': '666d8cced77d4391da2b248f', 'nbf': 1718455503, 'csrf': 'a66502dd-8575-4c29-8a59-f7a64ef0eccf', 'exp': 1718456403}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8cced77d4391da2b248f'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Lo8RM2hAu1qsSKkt$c0e8a654d43a0bca9374a79fe2006627501ccb73c328a78b053e3257713f7a20bf2f801460e344b76805418a9ba00933f8500030fcf2d18a36d444c514c68506', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:Public Official already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = public_official_service.create_public_official(public_official)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\publicofficial_data_manager_mongodb.py", line 14, in create_public_official
    raise ObjectAlreadyExistsException("Public Official already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: Public Official already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455503, 'jti': '7eafdbb6-5a31-41d5-9741-366020adb6c7', 'type': 'access', 'sub': '666d8ccfd77d4391da2b2492', 'nbf': 1718455503, 'csrf': '4e441024-e1ca-4d27-8d3b-17d1ca7ed432', 'exp': 1718456403}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8ccfd77d4391da2b2492'), email='admin@test.com', password='__hash__scrypt:32768:8:1$k6ndgKPSo5RyLgVK$382cd4f92f9b7843f05d601f982c7b9222deb5716d51616367338d39bcdefbd4d242e5687dbbe44a5d7c861593c13f25fd8c3f3aa402a8940e915e8fde4e0629', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455503, 'jti': '7eafdbb6-5a31-41d5-9741-366020adb6c7', 'type': 'access', 'sub': '666d8ccfd77d4391da2b2492', 'nbf': 1718455503, 'csrf': '4e441024-e1ca-4d27-8d3b-17d1ca7ed432', 'exp': 1718456403}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8ccfd77d4391da2b2492'), email='admin@test.com', password='__hash__scrypt:32768:8:1$k6ndgKPSo5RyLgVK$382cd4f92f9b7843f05d601f982c7b9222deb5716d51616367338d39bcdefbd4d242e5687dbbe44a5d7c861593c13f25fd8c3f3aa402a8940e915e8fde4e0629', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455503, 'jti': '7eafdbb6-5a31-41d5-9741-366020adb6c7', 'type': 'access', 'sub': '666d8ccfd77d4391da2b2492', 'nbf': 1718455503, 'csrf': '4e441024-e1ca-4d27-8d3b-17d1ca7ed432', 'exp': 1718456403}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8ccfd77d4391da2b2492'), email='admin@test.com', password='__hash__scrypt:32768:8:1$k6ndgKPSo5RyLgVK$382cd4f92f9b7843f05d601f982c7b9222deb5716d51616367338d39bcdefbd4d242e5687dbbe44a5d7c861593c13f25fd8c3f3aa402a8940e915e8fde4e0629', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455503, 'jti': '7eafdbb6-5a31-41d5-9741-366020adb6c7', 'type': 'access', 'sub': '666d8ccfd77d4391da2b2492', 'nbf': 1718455503, 'csrf': '4e441024-e1ca-4d27-8d3b-17d1ca7ed432', 'exp': 1718456403}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455503, 'jti': 'c9eb5b40-6d30-4af5-acac-620b9b3bb87b', 'type': 'access', 'sub': '666d8ccfd77d4391da2b2497', 'nbf': 1718455503, 'csrf': '792c8e55-5b7f-4ebc-a9d3-1692d3788edb', 'exp': 1718456403}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8ccfd77d4391da2b2497'), email='admin@test.com', password='__hash__scrypt:32768:8:1$DnNrU4ZCz3kky6hR$d267eaaacb03240da4913664296a8b666e50971448833231d2986e83899f25a54ad2c2fbc98a0a5d55b918ddb35260c4578b94a2eaf0e88d653a5129759c705a', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455503, 'jti': 'c9eb5b40-6d30-4af5-acac-620b9b3bb87b', 'type': 'access', 'sub': '666d8ccfd77d4391da2b2497', 'nbf': 1718455503, 'csrf': '792c8e55-5b7f-4ebc-a9d3-1692d3788edb', 'exp': 1718456403}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8ccfd77d4391da2b2497'), email='admin@test.com', password='__hash__scrypt:32768:8:1$DnNrU4ZCz3kky6hR$d267eaaacb03240da4913664296a8b666e50971448833231d2986e83899f25a54ad2c2fbc98a0a5d55b918ddb35260c4578b94a2eaf0e88d653a5129759c705a', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455503, 'jti': 'c9eb5b40-6d30-4af5-acac-620b9b3bb87b', 'type': 'access', 'sub': '666d8ccfd77d4391da2b2497', 'nbf': 1718455503, 'csrf': '792c8e55-5b7f-4ebc-a9d3-1692d3788edb', 'exp': 1718456403}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8ccfd77d4391da2b2497'), email='admin@test.com', password='__hash__scrypt:32768:8:1$DnNrU4ZCz3kky6hR$d267eaaacb03240da4913664296a8b666e50971448833231d2986e83899f25a54ad2c2fbc98a0a5d55b918ddb35260c4578b94a2eaf0e88d653a5129759c705a', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455503, 'jti': 'a4ebdeef-585f-4319-923e-891154042767', 'type': 'access', 'sub': '666d8ccfd77d4391da2b249b', 'nbf': 1718455503, 'csrf': '28c3436f-29a3-46c1-9814-715fbf34ee2d', 'exp': 1718456403}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
ERROR:app.extensions:Unauthorized DELETE request to /public-officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455503, 'jti': '1e963f24-64b0-4b6b-87e5-02028ea32890', 'type': 'access', 'sub': '666d8ccfd77d4391da2b249d', 'nbf': 1718455503, 'csrf': '2d11cc20-7245-4e36-8012-e511efb0f8d8', 'exp': 1718456403}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8ccfd77d4391da2b249d'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Bk4WtrngLkr28vZl$c97bed96665e86088e737aa20de8ca1abbd77d454b7c70e0dd6bab300623cac5a785a4f13634f6bb3988edeb1f2517f113938be6d4d27eb8aca52e121a0e72f7', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455503, 'jti': '1e963f24-64b0-4b6b-87e5-02028ea32890', 'type': 'access', 'sub': '666d8ccfd77d4391da2b249d', 'nbf': 1718455503, 'csrf': '2d11cc20-7245-4e36-8012-e511efb0f8d8', 'exp': 1718456403}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8ccfd77d4391da2b249d'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Bk4WtrngLkr28vZl$c97bed96665e86088e737aa20de8ca1abbd77d454b7c70e0dd6bab300623cac5a785a4f13634f6bb3988edeb1f2517f113938be6d4d27eb8aca52e121a0e72f7', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455503, 'jti': '1e963f24-64b0-4b6b-87e5-02028ea32890', 'type': 'access', 'sub': '666d8ccfd77d4391da2b249d', 'nbf': 1718455503, 'csrf': '2d11cc20-7245-4e36-8012-e511efb0f8d8', 'exp': 1718456403}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8ccfd77d4391da2b249d'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Bk4WtrngLkr28vZl$c97bed96665e86088e737aa20de8ca1abbd77d454b7c70e0dd6bab300623cac5a785a4f13634f6bb3988edeb1f2517f113938be6d4d27eb8aca52e121a0e72f7', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455503, 'jti': '792d66d2-29b8-476a-9d79-ce0f85a96923', 'type': 'access', 'sub': '666d8ccfd77d4391da2b24a3', 'nbf': 1718455503, 'csrf': '14faaf21-eb27-4429-97f6-4bf797223f96', 'exp': 1718456403}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8ccfd77d4391da2b24a3'), email='admin@test.com', password='__hash__scrypt:32768:8:1$KQBxfXrUCKNR9Zmx$f58a02f06a981fb08708e38d9397fe02a32264bfc19758f45b9c3f583a729f99db512cf45f1781ad336076ef29251cd2c6a5f3f4e140cf750fb3ad446552cd26', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting public official by ID 666d8ccfd77d4391da2b24a4
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455504, 'jti': 'f9b9e88a-3a99-47c1-b6d8-cacc8bef6c22', 'type': 'access', 'sub': '666d8cd0d77d4391da2b24a8', 'nbf': 1718455504, 'csrf': '38816155-98cf-4d92-9c7a-c5b0fabf1bc8', 'exp': 1718456404}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8cd0d77d4391da2b24a8'), email='admin@test.com', password='__hash__scrypt:32768:8:1$H5kSSdtIIEvehGG9$ef5ed96e1136922d72f2a8a10f11a63fde6d5f2a2d6f36d9bca294ea997d3ec445a16f47475e69efa2d9c1b6e9a7c6e4690627c009cce2e42a450bdc1304d4da', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455504, 'jti': 'f9b9e88a-3a99-47c1-b6d8-cacc8bef6c22', 'type': 'access', 'sub': '666d8cd0d77d4391da2b24a8', 'nbf': 1718455504, 'csrf': '38816155-98cf-4d92-9c7a-c5b0fabf1bc8', 'exp': 1718456404}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8cd0d77d4391da2b24a9')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455504, 'jti': 'ae55d100-8c0e-4f24-b2ed-7168d5806814', 'type': 'access', 'sub': '666d8cd0d77d4391da2b24ab', 'nbf': 1718455504, 'csrf': '2b4d32c9-c201-4eab-8e68-c54543965da3', 'exp': 1718456404}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8cd0d77d4391da2b24ab'), email='admin@test.com', password='__hash__scrypt:32768:8:1$nVZjEmjCI5NU7cVq$c993ef6b3b615d929a5e8e85250f4b2a912731381d56ad13b29126595a65cbb4fdffd757d5355d4e8af64e65623680cfeda72653c65ca3746f244ee92125e88a', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455504, 'jti': 'ae55d100-8c0e-4f24-b2ed-7168d5806814', 'type': 'access', 'sub': '666d8cd0d77d4391da2b24ab', 'nbf': 1718455504, 'csrf': '2b4d32c9-c201-4eab-8e68-c54543965da3', 'exp': 1718456404}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8cd0d77d4391da2b24ac')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455504, 'jti': '3573c3ee-e394-4e40-a712-de89a041d7b3', 'type': 'access', 'sub': '666d8cd0d77d4391da2b24ae', 'nbf': 1718455504, 'csrf': 'e465052b-7106-46d8-b465-006807060ad8', 'exp': 1718456404}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455504, 'jti': 'c6e7b143-b880-4908-a6c4-16e3ca6d4d33', 'type': 'access', 'sub': '666d8cd0d77d4391da2b24b0', 'nbf': 1718455504, 'csrf': 'a34a0b15-7337-45dd-a52b-ed6d30498778', 'exp': 1718456404}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8cd0d77d4391da2b24b0'), email='admin@test.com', password='__hash__scrypt:32768:8:1$KG6GhFUFPBkHJQLP$6a27a4016754218f2194be66248cfc38e3df37db5b930434522c68af301900e720226720617d7d010915f99af76606312277cb5513697daecf9b2f86812578f8', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455504, 'jti': 'c6e7b143-b880-4908-a6c4-16e3ca6d4d33', 'type': 'access', 'sub': '666d8cd0d77d4391da2b24b0', 'nbf': 1718455504, 'csrf': 'a34a0b15-7337-45dd-a52b-ed6d30498778', 'exp': 1718456404}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8cd0d77d4391da2b24b1')
INFO:app.extensions:po_data={'name_eng': 'newname123', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455505, 'jti': '9e3d13ec-1e5f-4ded-a0fc-fe6655168baa', 'type': 'access', 'sub': '666d8cd0d77d4391da2b24b3', 'nbf': 1718455505, 'csrf': '5adda298-4654-46bf-a866-0d8ecac0030b', 'exp': 1718456405}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8cd0d77d4391da2b24b3'), email='admin@test.com', password='__hash__scrypt:32768:8:1$DLfoluLjHvqAc4Uf$13fe7ea9b4af2787f9997194fc8d4c014bbb60ad35d7eeb7ab5ca19a5d007553c4b063ea50f4451201bff2b301718c027ecab2a2c7062326073e5ff09af36901', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455505, 'jti': '9e3d13ec-1e5f-4ded-a0fc-fe6655168baa', 'type': 'access', 'sub': '666d8cd0d77d4391da2b24b3', 'nbf': 1718455505, 'csrf': '5adda298-4654-46bf-a866-0d8ecac0030b', 'exp': 1718456405}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8cd1d77d4391da2b24b4')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטי134man', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455505, 'jti': '6396efea-49a1-4aee-8eb8-aae638e198b9', 'type': 'access', 'sub': '666d8cd1d77d4391da2b24b6', 'nbf': 1718455505, 'csrf': 'dbc78ab9-019e-4926-8d53-ec2746a6e57f', 'exp': 1718456405}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8cd1d77d4391da2b24b6'), email='admin@test.com', password='__hash__scrypt:32768:8:1$6N0hG4MgUeQVMmuN$cf8f5c8686eec8c7416771e3d60db98a73cfbcdc726aec33e9c97e2a61b285a3744d61f80c1b47b398bccaf776f3750b271f2511142e96490c49351a4afd4f71', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455505, 'jti': '6396efea-49a1-4aee-8eb8-aae638e198b9', 'type': 'access', 'sub': '666d8cd1d77d4391da2b24b6', 'nbf': 1718455505, 'csrf': 'dbc78ab9-019e-4926-8d53-ec2746a6e57f', 'exp': 1718456405}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8cd1d77d4391da2b24b7')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'myposition123', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455505, 'jti': 'e29a3c1f-7c8e-4224-8713-f748a4a0c3d4', 'type': 'access', 'sub': '666d8cd1d77d4391da2b24b9', 'nbf': 1718455505, 'csrf': '717a1c43-5913-4c4c-b4d6-92899fc2a3f4', 'exp': 1718456405}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d8cd1d77d4391da2b24b9'), email='admin@test.com', password='__hash__scrypt:32768:8:1$vUd6BTPrnF1gt2gB$e99b780eaf9ba7e0aa6aa70c31b4ed81f9eb7305dba9ba7fccf7ea7097e34c03af0288173b9df6eda0066858e34314095d084c47260e734332da9bfdf917c2f1', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455505, 'jti': 'e29a3c1f-7c8e-4224-8713-f748a4a0c3d4', 'type': 'access', 'sub': '666d8cd1d77d4391da2b24b9', 'nbf': 1718455505, 'csrf': '717a1c43-5913-4c4c-b4d6-92899fc2a3f4', 'exp': 1718456405}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d8cd1d77d4391da2b24ba')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'myspace': 'myhandle', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455505, 'jti': 'abcfd278-32b8-46c9-a0d8-44c8d86ffd53', 'type': 'access', 'sub': '666d8cd1d77d4391da2b24bf', 'nbf': 1718455505, 'csrf': 'e8d6b700-1157-42ab-aa30-cf90261ed342', 'exp': 1718456405}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455506, 'jti': '9b3ba19e-e007-4d91-8bc6-600eb39dc4b9', 'type': 'access', 'sub': '666d8cd2d77d4391da2b24c4', 'nbf': 1718455506, 'csrf': '173bd415-53fa-462c-9f62-19812538fe6e', 'exp': 1718456406}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized DELETE request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455506, 'jti': '1e54a470-6c99-4129-86ea-0e29b293bf4a', 'type': 'access', 'sub': '666d8cd2d77d4391da2b24c9', 'nbf': 1718455506, 'csrf': 'a6b23358-2c5a-485c-9473-76a70aada7b4', 'exp': 1718456406}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455507, 'jti': '2c3d1780-fa73-435d-bde5-cf1804bf175c', 'type': 'access', 'sub': '666d8cd3d77d4391da2b24ce', 'nbf': 1718455507, 'csrf': '39ddbaae-43ce-4d31-8900-98a55c80ea3e', 'exp': 1718456407}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455507, 'jti': '2f640192-6ed7-4155-b313-ac2a79efcbc0', 'type': 'access', 'sub': '666d8cd3d77d4391da2b24d0', 'nbf': 1718455507, 'csrf': 'fb86bed7-c8da-481c-bf19-4b1099c36fb7', 'exp': 1718456407}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455507, 'jti': '9241072f-92c3-4f11-97ec-f9d2606a1d05', 'type': 'access', 'sub': '666d8cd3d77d4391da2b24d2', 'nbf': 1718455507, 'csrf': '3039cfdc-4569-49bb-87a6-7230e30cc0b5', 'exp': 1718456407}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455507, 'jti': '8e30e83b-075d-4363-aa99-891d00b91a06', 'type': 'access', 'sub': '666d8cd3d77d4391da2b24d4', 'nbf': 1718455507, 'csrf': 'ea7fffeb-25b5-4988-8f15-8b1af98c843a', 'exp': 1718456407}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455507, 'jti': 'bef8a3d1-ea48-44e8-af1c-3fc94db48e8a', 'type': 'access', 'sub': '666d8cd3d77d4391da2b24d6', 'nbf': 1718455507, 'csrf': '9f8317a5-1abc-4d28-9d8e-96ccd4f64209', 'exp': 1718456407}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455507, 'jti': 'bef8a3d1-ea48-44e8-af1c-3fc94db48e8a', 'type': 'access', 'sub': '666d8cd3d77d4391da2b24d6', 'nbf': 1718455507, 'csrf': '9f8317a5-1abc-4d28-9d8e-96ccd4f64209', 'exp': 1718456407}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455507, 'jti': 'bef8a3d1-ea48-44e8-af1c-3fc94db48e8a', 'type': 'access', 'sub': '666d8cd3d77d4391da2b24d6', 'nbf': 1718455507, 'csrf': '9f8317a5-1abc-4d28-9d8e-96ccd4f64209', 'exp': 1718456407}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455507, 'jti': 'bef8a3d1-ea48-44e8-af1c-3fc94db48e8a', 'type': 'access', 'sub': '666d8cd3d77d4391da2b24d6', 'nbf': 1718455507, 'csrf': '9f8317a5-1abc-4d28-9d8e-96ccd4f64209', 'exp': 1718456407}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455507, 'jti': 'bef8a3d1-ea48-44e8-af1c-3fc94db48e8a', 'type': 'access', 'sub': '666d8cd3d77d4391da2b24d6', 'nbf': 1718455507, 'csrf': '9f8317a5-1abc-4d28-9d8e-96ccd4f64209', 'exp': 1718456407}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455507, 'jti': 'bef8a3d1-ea48-44e8-af1c-3fc94db48e8a', 'type': 'access', 'sub': '666d8cd3d77d4391da2b24d6', 'nbf': 1718455507, 'csrf': '9f8317a5-1abc-4d28-9d8e-96ccd4f64209', 'exp': 1718456407}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455508, 'jti': '59d89006-e769-4682-bde7-0cec1a90d7a9', 'type': 'access', 'sub': '666d8cd4d77d4391da2b24d8', 'nbf': 1718455508, 'csrf': '3d1ada33-aeb5-490b-b157-9e8751f22dff', 'exp': 1718456408}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455508, 'jti': '59d89006-e769-4682-bde7-0cec1a90d7a9', 'type': 'access', 'sub': '666d8cd4d77d4391da2b24d8', 'nbf': 1718455508, 'csrf': '3d1ada33-aeb5-490b-b157-9e8751f22dff', 'exp': 1718456408}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455508, 'jti': '59d89006-e769-4682-bde7-0cec1a90d7a9', 'type': 'access', 'sub': '666d8cd4d77d4391da2b24d8', 'nbf': 1718455508, 'csrf': '3d1ada33-aeb5-490b-b157-9e8751f22dff', 'exp': 1718456408}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455508, 'jti': '59d89006-e769-4682-bde7-0cec1a90d7a9', 'type': 'access', 'sub': '666d8cd4d77d4391da2b24d8', 'nbf': 1718455508, 'csrf': '3d1ada33-aeb5-490b-b157-9e8751f22dff', 'exp': 1718456408}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455508, 'jti': '59d89006-e769-4682-bde7-0cec1a90d7a9', 'type': 'access', 'sub': '666d8cd4d77d4391da2b24d8', 'nbf': 1718455508, 'csrf': '3d1ada33-aeb5-490b-b157-9e8751f22dff', 'exp': 1718456408}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455508, 'jti': '59d89006-e769-4682-bde7-0cec1a90d7a9', 'type': 'access', 'sub': '666d8cd4d77d4391da2b24d8', 'nbf': 1718455508, 'csrf': '3d1ada33-aeb5-490b-b157-9e8751f22dff', 'exp': 1718456408}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455508, 'jti': 'ee256791-cbe1-4f0b-a99d-935fe221ec36', 'type': 'access', 'sub': '666d8cd4d77d4391da2b24da', 'nbf': 1718455508, 'csrf': '2c65b607-50b5-42c0-bb7d-0fbad47dc51b', 'exp': 1718456408}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718455509, 'jti': '6795def6-d7b1-4100-8975-51c48273ecdc', 'type': 'access', 'sub': '666d8cd5d77d4391da2b24dc', 'nbf': 1718455509, 'csrf': '8220ef09-ec58-4c5f-90d9-e37544028fde', 'exp': 1718456409}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459925, 'jti': '533d4bbe-97c6-4a62-b5cb-875bff94548d', 'type': 'access', 'sub': '666d9e15c896f13a97f513bd', 'nbf': 1718459925, 'csrf': '9df36306-49ca-4c7a-b62c-1028eb358389', 'exp': 1718460825}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666d9e15c896f13a97f513bd') email='test@test.com' password='__hash__scrypt:32768:8:1$NNdDIrYjUj6SEYFh$10c2f8f47f9324f598d344ce24f9be6f47e1dea91f50c8ad27228a14fa95ccb1545e63c3657ce1949d0e7e09713297c5993b684c1f5586c27fd2d152ec49f275' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459926, 'jti': '9747a4c1-bde2-43c7-9d92-2516119713fc', 'type': 'access', 'sub': '666d9e16c896f13a97f513c2', 'nbf': 1718459926, 'csrf': 'cca574d3-e5c2-474d-b6c9-89fa541bb240', 'exp': 1718460826}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666d9e16c896f13a97f513c2') email='test@test.com' password='__hash__scrypt:32768:8:1$oS5QqGO0Q8feus9v$706592bcee7c6cac5e0a7bfd456dfe372e66e13a2919802c0c96478bc9be13695c046b3f8e2108d51576e7d209da43b8682ee08b180b808aca6eb69b56a1ca33' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459926, 'jti': '8bc3d2d6-7f0a-4d44-a0c4-07567b4ac5d4', 'type': 'access', 'sub': '666d9e16c896f13a97f513c5', 'nbf': 1718459926, 'csrf': '11932c71-e596-46f8-8eb9-44df9bfaa706', 'exp': 1718460826}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666d9e16c896f13a97f513c5') email='test@test.com' password='__hash__scrypt:32768:8:1$3oGS5KN0bWXgE8UL$b2360c1e9c63ed2c5af2e8400ab96f5f6e1725b35dbfce54e9add4f33fe90bef12b9124d478ff06c756b03fc477664d0e67bf4572eab2c8b0eb0fd31ddb8bed2' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459927, 'jti': 'f556e117-456d-4e18-ad42-60aa1aacf8ea', 'type': 'access', 'sub': '666d9e17c896f13a97f513d1', 'nbf': 1718459927, 'csrf': '30487c4e-3d83-4fed-b532-db26c92057a6', 'exp': 1718460827}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e17c896f13a97f513d1'), email='admin@test.com', password='__hash__scrypt:32768:8:1$e4oG5N0VkDWPT7hC$826239738576c4c5222c284dca4300ec083edf54e045ae8133f341e31fb91d1b48a33d0c44d47e5cbba95ee389f1c52fa6c29d60693ad3c1c4179306b3e130ff', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459927, 'jti': 'ff615499-1ec7-46ce-8439-7861475a9966', 'type': 'access', 'sub': '666d9e17c896f13a97f513d4', 'nbf': 1718459927, 'csrf': '7f9769be-98f4-45f4-9a34-7104e9680368', 'exp': 1718460827}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e17c896f13a97f513d4'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Wc8xrt4JmhsgIIXF$2e5b1bbd7408678d18780ae25b9a136377b414a7a14546ad31e70aaa5c6460c1f227be9cb4113e2734e98b71ecf8ccdb5405b0586b805582e60cf62afc5ce07d', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459927, 'jti': 'bcf96c96-2297-4274-8d7e-dbb7b84dfd8f', 'type': 'access', 'sub': '666d9e17c896f13a97f513d6', 'nbf': 1718459927, 'csrf': 'cde020bd-3a25-4125-a209-80d18fe16a9f', 'exp': 1718460827}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e17c896f13a97f513d6'), email='admin@test.com', password='__hash__scrypt:32768:8:1$2MIL5YnYza8MaS1u$54c02968fc23f7e5288fabceadb2fc8d506d6ec7286c3a52b1bd0c4eb33a98ebcf31bdf7c1d17a0202e1aefdd7cc64105fd93abbf6bfdb8332f69186434efa72', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459927, 'jti': '6ab7d283-ce05-4af2-935c-cd043c776bae', 'type': 'access', 'sub': '666d9e17c896f13a97f513d8', 'nbf': 1718459927, 'csrf': '1fc8a8f5-e86d-4c5a-8cd7-3bac5093e964', 'exp': 1718460827}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e17c896f13a97f513d8'), email='admin@test.com', password='__hash__scrypt:32768:8:1$s1Pv6fdVDuuPHsv8$473ca17fec3e47ca0232e3e9e9a1b2209239253d691bd36c49e3b5f6b9049f18b39e6bfb4726ab6ce75159354ba0d60557bac2da9136ee59e6d92613c46ef79c', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459927, 'jti': 'fba1963b-df00-4137-89cc-abf791d2ccd3', 'type': 'access', 'sub': '666d9e17c896f13a97f513da', 'nbf': 1718459927, 'csrf': '32202494-6bf9-48dc-b4bf-287b5082d7f0', 'exp': 1718460827}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e17c896f13a97f513da'), email='admin@test.com', password='__hash__scrypt:32768:8:1$prRS3ULqWu74e1es$1a62e47feb5fe4350721e6e6ebf431acd88ec739cf7d524e4d9299cdcd7a4de8f3c388621a6767f07d41f57b2c12377ba8a7e5211a1c18035380a44137f3596e', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459928, 'jti': 'bb9b8ac9-8023-4146-b140-bd9b1cbf59b3', 'type': 'access', 'sub': '666d9e17c896f13a97f513dc', 'nbf': 1718459928, 'csrf': '811dcfa5-a4ae-46b8-8d5d-401d631d6dc1', 'exp': 1718460828}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e17c896f13a97f513dc'), email='admin@test.com', password='__hash__scrypt:32768:8:1$tpNOKvHSLnyO2XQo$39fc482dfb8eb52b376b81be8d08812b2ef0d3375eb69e2adca466660ee1a4dc8f474441985ada5dab33aa3fba8230bf473af9a20b784f605a559a552e42cde4', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459928, 'jti': '7b07b2a6-8d6b-41c1-85ca-b5bdb8eb7d03', 'type': 'access', 'sub': '666d9e18c896f13a97f513de', 'nbf': 1718459928, 'csrf': '491ee47e-b241-4898-b1b9-42cc744961a1', 'exp': 1718460828}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e18c896f13a97f513de'), email='admin@test.com', password='__hash__scrypt:32768:8:1$85rxmePUp6DiqnNt$ba125b7a7febba145230b1bd04be7828215b9ec9cd1e8ad83c3d6af1e73795e71baa4525d82c975db4b358d527f5dc70fca35e9cd5ed467dfedbf15604575780', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459928, 'jti': '7b07b2a6-8d6b-41c1-85ca-b5bdb8eb7d03', 'type': 'access', 'sub': '666d9e18c896f13a97f513de', 'nbf': 1718459928, 'csrf': '491ee47e-b241-4898-b1b9-42cc744961a1', 'exp': 1718460828}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e18c896f13a97f513de'), email='admin@test.com', password='__hash__scrypt:32768:8:1$85rxmePUp6DiqnNt$ba125b7a7febba145230b1bd04be7828215b9ec9cd1e8ad83c3d6af1e73795e71baa4525d82c975db4b358d527f5dc70fca35e9cd5ed467dfedbf15604575780', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:Public Official already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = public_official_service.create_public_official(public_official)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\publicofficial_data_manager_mongodb.py", line 14, in create_public_official
    raise ObjectAlreadyExistsException("Public Official already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: Public Official already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459928, 'jti': '10fcef0e-3ca9-470c-934e-7e426f7829dd', 'type': 'access', 'sub': '666d9e18c896f13a97f513e1', 'nbf': 1718459928, 'csrf': 'aced00ef-bcbc-4f3f-807c-01c544d310ce', 'exp': 1718460828}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e18c896f13a97f513e1'), email='admin@test.com', password='__hash__scrypt:32768:8:1$GY6pwQp0CXkX0VBJ$68cf4de0013bbed1b6316a0298b2f553bdd44eb241796ef654e47f325e61d404fb4fa694579a688f79c9946e272377ae1ab68a8b083e92c64fc32480b0c410ac', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459928, 'jti': '10fcef0e-3ca9-470c-934e-7e426f7829dd', 'type': 'access', 'sub': '666d9e18c896f13a97f513e1', 'nbf': 1718459928, 'csrf': 'aced00ef-bcbc-4f3f-807c-01c544d310ce', 'exp': 1718460828}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e18c896f13a97f513e1'), email='admin@test.com', password='__hash__scrypt:32768:8:1$GY6pwQp0CXkX0VBJ$68cf4de0013bbed1b6316a0298b2f553bdd44eb241796ef654e47f325e61d404fb4fa694579a688f79c9946e272377ae1ab68a8b083e92c64fc32480b0c410ac', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459928, 'jti': '10fcef0e-3ca9-470c-934e-7e426f7829dd', 'type': 'access', 'sub': '666d9e18c896f13a97f513e1', 'nbf': 1718459928, 'csrf': 'aced00ef-bcbc-4f3f-807c-01c544d310ce', 'exp': 1718460828}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e18c896f13a97f513e1'), email='admin@test.com', password='__hash__scrypt:32768:8:1$GY6pwQp0CXkX0VBJ$68cf4de0013bbed1b6316a0298b2f553bdd44eb241796ef654e47f325e61d404fb4fa694579a688f79c9946e272377ae1ab68a8b083e92c64fc32480b0c410ac', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459928, 'jti': '10fcef0e-3ca9-470c-934e-7e426f7829dd', 'type': 'access', 'sub': '666d9e18c896f13a97f513e1', 'nbf': 1718459928, 'csrf': 'aced00ef-bcbc-4f3f-807c-01c544d310ce', 'exp': 1718460828}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459928, 'jti': '01cdf754-b740-43bd-a0d7-79531832abeb', 'type': 'access', 'sub': '666d9e18c896f13a97f513e6', 'nbf': 1718459928, 'csrf': '10a5b456-a249-44a6-8cae-224a458d599d', 'exp': 1718460828}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e18c896f13a97f513e6'), email='admin@test.com', password='__hash__scrypt:32768:8:1$DC3xGFRAPZDO1Sad$14c89ec10b2c19405d86fd2ba75171a1cd6e4dbedb5637c1121a504a6cee4427ca98123fcb76e55636673f25d50a9015f64a3102c2983f5cc3e583bb02bd77b0', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459928, 'jti': '01cdf754-b740-43bd-a0d7-79531832abeb', 'type': 'access', 'sub': '666d9e18c896f13a97f513e6', 'nbf': 1718459928, 'csrf': '10a5b456-a249-44a6-8cae-224a458d599d', 'exp': 1718460828}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e18c896f13a97f513e6'), email='admin@test.com', password='__hash__scrypt:32768:8:1$DC3xGFRAPZDO1Sad$14c89ec10b2c19405d86fd2ba75171a1cd6e4dbedb5637c1121a504a6cee4427ca98123fcb76e55636673f25d50a9015f64a3102c2983f5cc3e583bb02bd77b0', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459928, 'jti': '01cdf754-b740-43bd-a0d7-79531832abeb', 'type': 'access', 'sub': '666d9e18c896f13a97f513e6', 'nbf': 1718459928, 'csrf': '10a5b456-a249-44a6-8cae-224a458d599d', 'exp': 1718460828}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e18c896f13a97f513e6'), email='admin@test.com', password='__hash__scrypt:32768:8:1$DC3xGFRAPZDO1Sad$14c89ec10b2c19405d86fd2ba75171a1cd6e4dbedb5637c1121a504a6cee4427ca98123fcb76e55636673f25d50a9015f64a3102c2983f5cc3e583bb02bd77b0', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459928, 'jti': '04985ae9-c563-42b0-a221-9ed4964c841a', 'type': 'access', 'sub': '666d9e18c896f13a97f513ea', 'nbf': 1718459928, 'csrf': '38e714f5-4033-48ae-b470-9b487230b6be', 'exp': 1718460828}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
ERROR:app.extensions:Unauthorized DELETE request to /public-officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459928, 'jti': '1e1b96a4-0388-4e1d-9d82-584eec9f8921', 'type': 'access', 'sub': '666d9e18c896f13a97f513ec', 'nbf': 1718459928, 'csrf': 'e8993924-e279-4a60-adec-a40ce44a9632', 'exp': 1718460828}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e18c896f13a97f513ec'), email='admin@test.com', password='__hash__scrypt:32768:8:1$BjtaGNGCgV3aPM1T$407da63116b90a9f80a160a291b014d6e975b34e01f219e1a1147624b9781cdce6d28c8a25dcdc3d884f4db75d8e1ed8f9c30d4dfc687431199bb0093bde0a42', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459928, 'jti': '1e1b96a4-0388-4e1d-9d82-584eec9f8921', 'type': 'access', 'sub': '666d9e18c896f13a97f513ec', 'nbf': 1718459928, 'csrf': 'e8993924-e279-4a60-adec-a40ce44a9632', 'exp': 1718460828}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e18c896f13a97f513ec'), email='admin@test.com', password='__hash__scrypt:32768:8:1$BjtaGNGCgV3aPM1T$407da63116b90a9f80a160a291b014d6e975b34e01f219e1a1147624b9781cdce6d28c8a25dcdc3d884f4db75d8e1ed8f9c30d4dfc687431199bb0093bde0a42', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459928, 'jti': '1e1b96a4-0388-4e1d-9d82-584eec9f8921', 'type': 'access', 'sub': '666d9e18c896f13a97f513ec', 'nbf': 1718459928, 'csrf': 'e8993924-e279-4a60-adec-a40ce44a9632', 'exp': 1718460828}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e18c896f13a97f513ec'), email='admin@test.com', password='__hash__scrypt:32768:8:1$BjtaGNGCgV3aPM1T$407da63116b90a9f80a160a291b014d6e975b34e01f219e1a1147624b9781cdce6d28c8a25dcdc3d884f4db75d8e1ed8f9c30d4dfc687431199bb0093bde0a42', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459929, 'jti': '64ac32ed-7544-4649-b701-b4b176290143', 'type': 'access', 'sub': '666d9e19c896f13a97f513f2', 'nbf': 1718459929, 'csrf': '35278658-24d4-4ab0-8c5f-4047a91f08f3', 'exp': 1718460829}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e19c896f13a97f513f2'), email='admin@test.com', password='__hash__scrypt:32768:8:1$7wKA25eXRFSQ9zgt$7d4350846e66cff0ee4a9ecd239e3a8a2bdf31d14abe9bfef641e5c649c6b61a0d816329315d668cca89c8ea6762aa3134d3613299a4751dd3e31d4fb255e2e5', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting public official by ID 666d9e19c896f13a97f513f3
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459929, 'jti': '48a5b6b7-3e43-4dc2-b1f1-5f9a7bf92d18', 'type': 'access', 'sub': '666d9e19c896f13a97f513f7', 'nbf': 1718459929, 'csrf': 'e6960492-470b-4091-8788-602d3d4e9016', 'exp': 1718460829}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e19c896f13a97f513f7'), email='admin@test.com', password='__hash__scrypt:32768:8:1$X6x7n9ArySrYLpXn$7c7e44f23438a510b27a16896b5cab5b67fef113083a8378dd6b15f81c3feb0b611f5fe9905866113e2f50197382f690ceabc571fa8e75ab5977836a97773906', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459929, 'jti': '48a5b6b7-3e43-4dc2-b1f1-5f9a7bf92d18', 'type': 'access', 'sub': '666d9e19c896f13a97f513f7', 'nbf': 1718459929, 'csrf': 'e6960492-470b-4091-8788-602d3d4e9016', 'exp': 1718460829}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d9e19c896f13a97f513f8')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459929, 'jti': '6a9c7316-a6af-4d02-818c-f9ff28ff1f20', 'type': 'access', 'sub': '666d9e19c896f13a97f513fa', 'nbf': 1718459929, 'csrf': 'a05fc61e-a8a5-49ad-968b-4e001b6a5b7a', 'exp': 1718460829}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e19c896f13a97f513fa'), email='admin@test.com', password='__hash__scrypt:32768:8:1$rw16aEIVMtXYxCDS$92642778b4f01bf85ad9912c5e512ebb5559d233aebdcd658b7d232b48e37bce72e54080489103b2cb3ab1fb1b926a84df39661c58ee8a65ee6438c92aa5d02e', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459929, 'jti': '6a9c7316-a6af-4d02-818c-f9ff28ff1f20', 'type': 'access', 'sub': '666d9e19c896f13a97f513fa', 'nbf': 1718459929, 'csrf': 'a05fc61e-a8a5-49ad-968b-4e001b6a5b7a', 'exp': 1718460829}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d9e19c896f13a97f513fb')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459929, 'jti': 'aa7eac3b-5fd2-4858-a65d-f272ea50b25c', 'type': 'access', 'sub': '666d9e19c896f13a97f513fd', 'nbf': 1718459929, 'csrf': '591926f8-a7aa-47c4-ab14-6bef8c049e02', 'exp': 1718460829}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459930, 'jti': '9b6283a8-de02-4346-a0d0-e92e8217b20b', 'type': 'access', 'sub': '666d9e19c896f13a97f513ff', 'nbf': 1718459930, 'csrf': '9efadbb2-19ca-4114-bd3f-8186b5c7c002', 'exp': 1718460830}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e19c896f13a97f513ff'), email='admin@test.com', password='__hash__scrypt:32768:8:1$xVKm21qIQtyi7lym$3b1169b41c53a10c2d0d8c7eff73a1bc8a9b56646cd8bd8fdb06abb362728f9c3f5b9d35566fd2418ec3b8a6a25150dc1196b75b163e0707a04eb0e50eea2d1b', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459930, 'jti': '9b6283a8-de02-4346-a0d0-e92e8217b20b', 'type': 'access', 'sub': '666d9e19c896f13a97f513ff', 'nbf': 1718459930, 'csrf': '9efadbb2-19ca-4114-bd3f-8186b5c7c002', 'exp': 1718460830}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d9e1ac896f13a97f51400')
INFO:app.extensions:po_data={'name_eng': 'newname123', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459930, 'jti': '157c3b63-d570-4fad-bd7c-337ac456d392', 'type': 'access', 'sub': '666d9e1ac896f13a97f51402', 'nbf': 1718459930, 'csrf': '0962b968-fc74-49aa-9cfa-307f377c54ab', 'exp': 1718460830}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e1ac896f13a97f51402'), email='admin@test.com', password='__hash__scrypt:32768:8:1$g4xIlPWNtuiB5MgY$2dd8831bf9f2be6c13efd1145095baa1616624038dc8ddf790c84e9ca8b38dae66238492df7a7986cf77e3d4de3a85048def85559971e30b971304e35ba6251e', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459930, 'jti': '157c3b63-d570-4fad-bd7c-337ac456d392', 'type': 'access', 'sub': '666d9e1ac896f13a97f51402', 'nbf': 1718459930, 'csrf': '0962b968-fc74-49aa-9cfa-307f377c54ab', 'exp': 1718460830}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d9e1ac896f13a97f51403')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטי134man', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459930, 'jti': '7cfedc64-338d-4d58-a80f-819588e5fbe8', 'type': 'access', 'sub': '666d9e1ac896f13a97f51405', 'nbf': 1718459930, 'csrf': '02b0c8b2-a50b-4c35-a1ba-41526782f841', 'exp': 1718460830}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e1ac896f13a97f51405'), email='admin@test.com', password='__hash__scrypt:32768:8:1$vpsVTRUkVKjWwEv8$37bf0f44ae16809c0553d6ea11b123c85c02a547c30dc9cb9c9c92a2f86c5f42a1a23395752ef2694ca6b462e4b684a7ded7a7d92e06bc161b5e5a3b9e894708', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459930, 'jti': '7cfedc64-338d-4d58-a80f-819588e5fbe8', 'type': 'access', 'sub': '666d9e1ac896f13a97f51405', 'nbf': 1718459930, 'csrf': '02b0c8b2-a50b-4c35-a1ba-41526782f841', 'exp': 1718460830}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d9e1ac896f13a97f51406')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'myposition123', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459930, 'jti': '4882bc55-9d48-4701-9f0b-9e35a2687754', 'type': 'access', 'sub': '666d9e1ac896f13a97f51408', 'nbf': 1718459930, 'csrf': 'a706eaea-156f-4fd7-b2b7-764683391fea', 'exp': 1718460830}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666d9e1ac896f13a97f51408'), email='admin@test.com', password='__hash__scrypt:32768:8:1$HjsfWgwPXpegZyvx$da109216029cfc9d5e666aa5126eb6731a5614387bf8353dd1783baf59d8e82ec4d3d5077c43dac0ae9b0edd18eb94f21530f4d997c221bea742ab424fd42bf8', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459930, 'jti': '4882bc55-9d48-4701-9f0b-9e35a2687754', 'type': 'access', 'sub': '666d9e1ac896f13a97f51408', 'nbf': 1718459930, 'csrf': 'a706eaea-156f-4fd7-b2b7-764683391fea', 'exp': 1718460830}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d9e1ac896f13a97f51409')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'myspace': 'myhandle', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459931, 'jti': '82558844-3117-48e0-9b37-4ffe2d1ddd93', 'type': 'access', 'sub': '666d9e1ac896f13a97f5140e', 'nbf': 1718459931, 'csrf': 'ab46ef2b-f7ce-464c-9de9-fbb374e1a22f', 'exp': 1718460831}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459931, 'jti': '2ebd1ed2-5448-4089-8c50-62daab1dc392', 'type': 'access', 'sub': '666d9e1bc896f13a97f51413', 'nbf': 1718459931, 'csrf': 'd8d90754-5d70-4f9d-9747-38b66c6e623f', 'exp': 1718460831}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized DELETE request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459931, 'jti': '2d01476c-a0ea-4cba-abde-8be4ad1ac18f', 'type': 'access', 'sub': '666d9e1bc896f13a97f5141a', 'nbf': 1718459931, 'csrf': 'c0fb5d86-5502-4dbc-ac7f-eb103b9aee05', 'exp': 1718460831}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459931, 'jti': 'd8457abf-ebeb-4801-8c01-19a2b7e1fc69', 'type': 'access', 'sub': '666d9e1bc896f13a97f5141c', 'nbf': 1718459931, 'csrf': 'f6b974c9-85d0-464c-b56f-64571de8804d', 'exp': 1718460831}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459932, 'jti': '3039cc90-e031-4e2d-a62a-7bc6e239ce79', 'type': 'access', 'sub': '666d9e1cc896f13a97f5141e', 'nbf': 1718459932, 'csrf': 'ee106812-7895-44d4-be13-08d18d5b7053', 'exp': 1718460832}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459932, 'jti': '37e559ee-ad66-4dbd-8e2a-00d989807a65', 'type': 'access', 'sub': '666d9e1cc896f13a97f51420', 'nbf': 1718459932, 'csrf': '3026f6a5-4310-4223-bbe8-9cf205fbf95d', 'exp': 1718460832}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459932, 'jti': 'd337d196-80cc-4877-bc16-28e112a797ea', 'type': 'access', 'sub': '666d9e1cc896f13a97f51422', 'nbf': 1718459932, 'csrf': 'b470e541-e158-4373-ad91-58d720b14582', 'exp': 1718460832}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459932, 'jti': 'd337d196-80cc-4877-bc16-28e112a797ea', 'type': 'access', 'sub': '666d9e1cc896f13a97f51422', 'nbf': 1718459932, 'csrf': 'b470e541-e158-4373-ad91-58d720b14582', 'exp': 1718460832}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459932, 'jti': 'd337d196-80cc-4877-bc16-28e112a797ea', 'type': 'access', 'sub': '666d9e1cc896f13a97f51422', 'nbf': 1718459932, 'csrf': 'b470e541-e158-4373-ad91-58d720b14582', 'exp': 1718460832}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459932, 'jti': 'd337d196-80cc-4877-bc16-28e112a797ea', 'type': 'access', 'sub': '666d9e1cc896f13a97f51422', 'nbf': 1718459932, 'csrf': 'b470e541-e158-4373-ad91-58d720b14582', 'exp': 1718460832}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459932, 'jti': 'd337d196-80cc-4877-bc16-28e112a797ea', 'type': 'access', 'sub': '666d9e1cc896f13a97f51422', 'nbf': 1718459932, 'csrf': 'b470e541-e158-4373-ad91-58d720b14582', 'exp': 1718460832}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459932, 'jti': 'd337d196-80cc-4877-bc16-28e112a797ea', 'type': 'access', 'sub': '666d9e1cc896f13a97f51422', 'nbf': 1718459932, 'csrf': 'b470e541-e158-4373-ad91-58d720b14582', 'exp': 1718460832}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459933, 'jti': 'a35f03be-ba0b-4f6e-ad0c-2bda75c891f4', 'type': 'access', 'sub': '666d9e1dc896f13a97f51424', 'nbf': 1718459933, 'csrf': '98455d97-de7d-494c-93c7-ffb16bd7bd81', 'exp': 1718460833}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459933, 'jti': 'a35f03be-ba0b-4f6e-ad0c-2bda75c891f4', 'type': 'access', 'sub': '666d9e1dc896f13a97f51424', 'nbf': 1718459933, 'csrf': '98455d97-de7d-494c-93c7-ffb16bd7bd81', 'exp': 1718460833}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459933, 'jti': 'a35f03be-ba0b-4f6e-ad0c-2bda75c891f4', 'type': 'access', 'sub': '666d9e1dc896f13a97f51424', 'nbf': 1718459933, 'csrf': '98455d97-de7d-494c-93c7-ffb16bd7bd81', 'exp': 1718460833}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459933, 'jti': 'a35f03be-ba0b-4f6e-ad0c-2bda75c891f4', 'type': 'access', 'sub': '666d9e1dc896f13a97f51424', 'nbf': 1718459933, 'csrf': '98455d97-de7d-494c-93c7-ffb16bd7bd81', 'exp': 1718460833}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459933, 'jti': 'a35f03be-ba0b-4f6e-ad0c-2bda75c891f4', 'type': 'access', 'sub': '666d9e1dc896f13a97f51424', 'nbf': 1718459933, 'csrf': '98455d97-de7d-494c-93c7-ffb16bd7bd81', 'exp': 1718460833}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459933, 'jti': 'a35f03be-ba0b-4f6e-ad0c-2bda75c891f4', 'type': 'access', 'sub': '666d9e1dc896f13a97f51424', 'nbf': 1718459933, 'csrf': '98455d97-de7d-494c-93c7-ffb16bd7bd81', 'exp': 1718460833}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459933, 'jti': '587bf0b9-2809-4cc6-8607-fced9bddc707', 'type': 'access', 'sub': '666d9e1dc896f13a97f51426', 'nbf': 1718459933, 'csrf': '9c332e3b-3287-4bff-bc9e-8e107fe42495', 'exp': 1718460833}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718459933, 'jti': '3059d1d2-61a5-4b25-8ccb-20c0782d4e87', 'type': 'access', 'sub': '666d9e1dc896f13a97f51428', 'nbf': 1718459933, 'csrf': '28e0c464-9488-4b54-b54f-30588a974f64', 'exp': 1718460833}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460056, 'jti': 'f8c865f2-b17b-49ec-91c0-405840ea299b', 'type': 'access', 'sub': '666d9e9824a6b4ea656d026b', 'nbf': 1718460056, 'csrf': '5eb79fd4-4212-4d6a-aa3c-609e3aff871c', 'exp': 1718460956}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460057, 'jti': 'a2f46ba3-ea79-4fc1-adc0-5ec95607400f', 'type': 'access', 'sub': '666d9e9924a6b4ea656d0270', 'nbf': 1718460057, 'csrf': 'b9c2c659-f5b4-42b5-a4d7-32c1a75f2871', 'exp': 1718460957}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460074, 'jti': 'ad0b68c9-2af1-404a-9f2d-67b57fdaf899', 'type': 'access', 'sub': '666d9eaa48e75c4e41cf999c', 'nbf': 1718460074, 'csrf': 'c1b0172e-ddd7-429f-917d-dccfbf9e5813', 'exp': 1718460974}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460074, 'jti': 'e9b080d2-81fc-4b6e-a0bb-16e14f6f85af', 'type': 'access', 'sub': '666d9eaa48e75c4e41cf99a1', 'nbf': 1718460074, 'csrf': 'a7578ede-b68e-4b09-87b1-d2f592e6ed57', 'exp': 1718460974}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460116, 'jti': '878d2adf-f96b-4225-ab36-f2d263786ff5', 'type': 'access', 'sub': '666d9ed4f21583a107c54074', 'nbf': 1718460116, 'csrf': '739a26e2-2595-404a-9cec-c2bf08fed829', 'exp': 1718461016}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460117, 'jti': '861d0c4d-9719-4536-acd5-52e560f04b46', 'type': 'access', 'sub': '666d9ed5f21583a107c54079', 'nbf': 1718460117, 'csrf': 'c6bc95ad-3da5-4c55-b871-5efae7f8733c', 'exp': 1718461017}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460230, 'jti': 'b645fcbe-ea7c-43bb-b460-ef181c26aa34', 'type': 'access', 'sub': '666d9f4618d3bba24c40ae3a', 'nbf': 1718460230, 'csrf': 'cf915c69-b02e-4cbf-812b-e9faefd27871', 'exp': 1718461130}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460230, 'jti': 'e5fda33c-23b0-4702-89fe-342edaff4638', 'type': 'access', 'sub': '666d9f4618d3bba24c40ae3f', 'nbf': 1718460230, 'csrf': 'fcba5985-1c5e-4a76-b25a-77f3217b26cb', 'exp': 1718461130}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460467, 'jti': '936b7db4-b73f-4436-bc5d-4b5b5bedbcba', 'type': 'access', 'sub': '666da032113967443d72f04f', 'nbf': 1718460467, 'csrf': '32f8ed83-1114-4584-b2c2-e67935355cb1', 'exp': 1718461367}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460467, 'jti': '711cf153-bfbe-4e2a-ac02-c77c28dba9a3', 'type': 'access', 'sub': '666da033113967443d72f054', 'nbf': 1718460467, 'csrf': '7790ca73-64d2-4c30-8e5a-c7ba37a1994f', 'exp': 1718461367}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460488, 'jti': '0b7d4fdd-ab80-403e-9002-e5783168e191', 'type': 'access', 'sub': '666da0484b441053745ac015', 'nbf': 1718460488, 'csrf': '264708ce-91eb-44d1-9cb9-4cd9db3a052c', 'exp': 1718461388}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460489, 'jti': 'd6e535e0-be30-4097-88c3-1a666af1d336', 'type': 'access', 'sub': '666da0494b441053745ac01a', 'nbf': 1718460489, 'csrf': '9215e563-3b48-4fe9-ac32-448587d82691', 'exp': 1718461389}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460520, 'jti': '965dc392-9d20-4748-89a2-71040078c02e', 'type': 'access', 'sub': '666da0680ef15ebd3df893f8', 'nbf': 1718460520, 'csrf': '042dfd58-27e2-41ef-9ada-4f36913e23d7', 'exp': 1718461420}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460520, 'jti': '50b9ce21-e9e1-4a0d-8f9e-86ad3c512ec3', 'type': 'access', 'sub': '666da0680ef15ebd3df893fd', 'nbf': 1718460520, 'csrf': 'f6d70c65-f5f9-4064-bf98-4168b8ab74dc', 'exp': 1718461420}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460700, 'jti': '90a3532e-76e5-487a-a97b-91b488a5c8f3', 'type': 'access', 'sub': '666da11cfa3a5e326a81e53f', 'nbf': 1718460700, 'csrf': '9d959979-4d80-448b-b01b-acc526cf20e7', 'exp': 1718461600}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666da11cfa3a5e326a81e53f') email='test@test.com' password='__hash__scrypt:32768:8:1$jjjNp2ooAP7zqUtt$595086442b34aeaefe3177349bc5e6a70ae25f42a99bf3e680ea77e478519a7bd17c278563468c479bff5426c58dce9171943af3f6af8f91d4944d55ad61a9ad' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460700, 'jti': '4f4af86d-5092-4cfe-92f1-4234aef6d438', 'type': 'access', 'sub': '666da11cfa3a5e326a81e544', 'nbf': 1718460700, 'csrf': '600f9d2b-4e3a-43e9-9132-96a2d9edfd33', 'exp': 1718461600}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666da11cfa3a5e326a81e544') email='test@test.com' password='__hash__scrypt:32768:8:1$kjBAHccUEcq5omYg$005a5b95c1195875b10d0f1fdd2cc1088aa0301bb584e1959b039d472c38a4409cb28632f9550ac080472db81be59f053cf84672aafe31a6845f8efa247a0694' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460700, 'jti': '572e9ca4-f1b7-43fe-9c63-83d2cd636e49', 'type': 'access', 'sub': '666da11cfa3a5e326a81e547', 'nbf': 1718460700, 'csrf': '30109915-9753-423a-bfe7-4df7f9376d92', 'exp': 1718461600}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666da11cfa3a5e326a81e547') email='test@test.com' password='__hash__scrypt:32768:8:1$n3GVePIh56oWMENx$50f4a510e23dac0a3862f4a7b7a1200a167b187f3bba95a1278a61b0130b424f39b779ee5792a1ac6c01d496efb889315c04a41437ea900cf8fcbca8483e52ff' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460701, 'jti': '2be0a242-3af8-490b-8785-063ac3504be6', 'type': 'access', 'sub': '666da11dfa3a5e326a81e553', 'nbf': 1718460701, 'csrf': '8935de42-4e54-4c91-bc99-1bf5625f2625', 'exp': 1718461601}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da11dfa3a5e326a81e553'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Sw3sKPO5hy3bRrtV$85205062e10d6130afb060a26c95735f1ef550a17dd3b2bdfa1aa8a8bac8a49e8d4aa4afcfdd18bb0911bfc80f473c87da6830e8fbaa7e8f68a90cb54e115ce3', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460701, 'jti': '7bcbbcd0-e421-418e-bb99-dfacef50f53a', 'type': 'access', 'sub': '666da11dfa3a5e326a81e556', 'nbf': 1718460701, 'csrf': '66181a5d-5f94-4851-96ce-3354141c855c', 'exp': 1718461601}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da11dfa3a5e326a81e556'), email='admin@test.com', password='__hash__scrypt:32768:8:1$cJ1Rt76F3IjeNIf9$4f05d928493f01cb71afb4df5b7f5ca519d292658b051eaa4ac8e86216d69fc95020eb3485b516c6a010f653e7fe30f039d65013ea21c1c1e5459092ea88e4d8', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460702, 'jti': '30e7b0e2-89c6-4819-8f6e-a73d37f4e5f6', 'type': 'access', 'sub': '666da11efa3a5e326a81e558', 'nbf': 1718460702, 'csrf': '8b3cc5f1-cd54-4127-aa3c-ca9c791b8b86', 'exp': 1718461602}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da11efa3a5e326a81e558'), email='admin@test.com', password='__hash__scrypt:32768:8:1$3qbwXey3pLcLxX9D$9f526edf324263425e6bacb3224d60bd414d39208882550a0e12953f08f25f0cbdcfd5744a46af476ca3e5435d2c98c5009c13ee88ad667fa25d7e31450361ef', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460702, 'jti': 'b88daf34-4a55-4345-a58e-87888c220e45', 'type': 'access', 'sub': '666da11efa3a5e326a81e55a', 'nbf': 1718460702, 'csrf': '7dbe681d-bd44-4196-a47c-22dfb7de18c1', 'exp': 1718461602}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da11efa3a5e326a81e55a'), email='admin@test.com', password='__hash__scrypt:32768:8:1$mC0E8NtFdYwmle0E$e1d86039c87018a34b0857a894e03355705188a1f73ee89c2b433d16b234ad447eaa4c18b58a5d724c9fb0a70c184a5fc6b5252d64510c52358e54b612b9ce2e', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460702, 'jti': '352bb04d-a788-4534-9ca4-720886e6fe17', 'type': 'access', 'sub': '666da11efa3a5e326a81e55c', 'nbf': 1718460702, 'csrf': '825d6942-0d73-4916-b79f-85f7271ee89c', 'exp': 1718461602}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da11efa3a5e326a81e55c'), email='admin@test.com', password='__hash__scrypt:32768:8:1$KiLKYwaiW2u3rsUp$f27a544953961b3e56626c3098057700f00fbf97e1327090870d656ccfadd00ec990c564360918fb7826cb02015238562493d8a2c30b96aa2393368bc76686fd', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460702, 'jti': '88c6c49e-7ce7-439c-90d2-397b2422fc32', 'type': 'access', 'sub': '666da11efa3a5e326a81e55e', 'nbf': 1718460702, 'csrf': '60e6412f-6d7c-4df8-9df4-d4c3a255f23e', 'exp': 1718461602}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da11efa3a5e326a81e55e'), email='admin@test.com', password='__hash__scrypt:32768:8:1$rHkcuQASqvEm12la$a78085bf7fd7c009d6e78ce045683f867497b43ba5ea974a1e3415a80985c3aed381186be56d9c89019d2ef848a71a1ff33275bcb3e623306171bd826aa466c7', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460702, 'jti': '515e9a54-75b0-47c9-9bb2-7fda9159f4aa', 'type': 'access', 'sub': '666da11efa3a5e326a81e560', 'nbf': 1718460702, 'csrf': '2631000e-e30d-4f48-9337-46cf45e6e738', 'exp': 1718461602}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da11efa3a5e326a81e560'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Dzohi32Y2ez0ycYt$11eda3c565ea586c6f88e5be6cda29cfec306dbfb6a9ee00708884a683d654792a213653f516343991359ce7af36ca9ee2ab1ed69bd63cd286da961cfb934484', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460702, 'jti': '515e9a54-75b0-47c9-9bb2-7fda9159f4aa', 'type': 'access', 'sub': '666da11efa3a5e326a81e560', 'nbf': 1718460702, 'csrf': '2631000e-e30d-4f48-9337-46cf45e6e738', 'exp': 1718461602}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da11efa3a5e326a81e560'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Dzohi32Y2ez0ycYt$11eda3c565ea586c6f88e5be6cda29cfec306dbfb6a9ee00708884a683d654792a213653f516343991359ce7af36ca9ee2ab1ed69bd63cd286da961cfb934484', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:Public Official already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = public_official_service.create_public_official(public_official)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\publicofficial_data_manager_mongodb.py", line 14, in create_public_official
    raise ObjectAlreadyExistsException("Public Official already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: Public Official already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460703, 'jti': 'e0ece2a5-0f35-463e-8bab-b1db0283df96', 'type': 'access', 'sub': '666da11efa3a5e326a81e563', 'nbf': 1718460703, 'csrf': '8868aca1-8afc-40c8-8240-c5d0070dc5f6', 'exp': 1718461603}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da11efa3a5e326a81e563'), email='admin@test.com', password='__hash__scrypt:32768:8:1$mL4VLVUMNU9RQiaX$4e97ba35a0050dd5d4f93eec0952559cf263d3bedd707cdbec5fd6ae154557402c969edf4bae9f72acd74a7e938ff6e2a3cea76f02522959d59ef706da53c2c8', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460703, 'jti': 'e0ece2a5-0f35-463e-8bab-b1db0283df96', 'type': 'access', 'sub': '666da11efa3a5e326a81e563', 'nbf': 1718460703, 'csrf': '8868aca1-8afc-40c8-8240-c5d0070dc5f6', 'exp': 1718461603}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da11efa3a5e326a81e563'), email='admin@test.com', password='__hash__scrypt:32768:8:1$mL4VLVUMNU9RQiaX$4e97ba35a0050dd5d4f93eec0952559cf263d3bedd707cdbec5fd6ae154557402c969edf4bae9f72acd74a7e938ff6e2a3cea76f02522959d59ef706da53c2c8', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460703, 'jti': 'e0ece2a5-0f35-463e-8bab-b1db0283df96', 'type': 'access', 'sub': '666da11efa3a5e326a81e563', 'nbf': 1718460703, 'csrf': '8868aca1-8afc-40c8-8240-c5d0070dc5f6', 'exp': 1718461603}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da11efa3a5e326a81e563'), email='admin@test.com', password='__hash__scrypt:32768:8:1$mL4VLVUMNU9RQiaX$4e97ba35a0050dd5d4f93eec0952559cf263d3bedd707cdbec5fd6ae154557402c969edf4bae9f72acd74a7e938ff6e2a3cea76f02522959d59ef706da53c2c8', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460703, 'jti': 'e0ece2a5-0f35-463e-8bab-b1db0283df96', 'type': 'access', 'sub': '666da11efa3a5e326a81e563', 'nbf': 1718460703, 'csrf': '8868aca1-8afc-40c8-8240-c5d0070dc5f6', 'exp': 1718461603}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460703, 'jti': '916c42ed-1b4c-4397-9dcd-a950bf3352b9', 'type': 'access', 'sub': '666da11ffa3a5e326a81e568', 'nbf': 1718460703, 'csrf': 'facc819b-0336-401f-95d5-c20990c34368', 'exp': 1718461603}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da11ffa3a5e326a81e568'), email='admin@test.com', password='__hash__scrypt:32768:8:1$YE9tLQJIJGlwp3FA$09242f8b3f7f7211478f2bdb98ce71aef505bead593907453f7a16aeb65e264137df73a2e25f3532cdd43bda78eb4cb7e42dd98d4aecc01dc4f9346408d14582', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460703, 'jti': '916c42ed-1b4c-4397-9dcd-a950bf3352b9', 'type': 'access', 'sub': '666da11ffa3a5e326a81e568', 'nbf': 1718460703, 'csrf': 'facc819b-0336-401f-95d5-c20990c34368', 'exp': 1718461603}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da11ffa3a5e326a81e568'), email='admin@test.com', password='__hash__scrypt:32768:8:1$YE9tLQJIJGlwp3FA$09242f8b3f7f7211478f2bdb98ce71aef505bead593907453f7a16aeb65e264137df73a2e25f3532cdd43bda78eb4cb7e42dd98d4aecc01dc4f9346408d14582', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460703, 'jti': '916c42ed-1b4c-4397-9dcd-a950bf3352b9', 'type': 'access', 'sub': '666da11ffa3a5e326a81e568', 'nbf': 1718460703, 'csrf': 'facc819b-0336-401f-95d5-c20990c34368', 'exp': 1718461603}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da11ffa3a5e326a81e568'), email='admin@test.com', password='__hash__scrypt:32768:8:1$YE9tLQJIJGlwp3FA$09242f8b3f7f7211478f2bdb98ce71aef505bead593907453f7a16aeb65e264137df73a2e25f3532cdd43bda78eb4cb7e42dd98d4aecc01dc4f9346408d14582', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460703, 'jti': 'abcb735c-b505-43ed-acfb-7abe1039c85c', 'type': 'access', 'sub': '666da11ffa3a5e326a81e56c', 'nbf': 1718460703, 'csrf': 'ed0ff6bf-10cb-4aa5-aea0-30b30cf237fa', 'exp': 1718461603}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
ERROR:app.extensions:Unauthorized DELETE request to /public-officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460703, 'jti': '786a6114-3aa6-42f1-9655-ef7cd68f0eb1', 'type': 'access', 'sub': '666da11ffa3a5e326a81e56e', 'nbf': 1718460703, 'csrf': 'f42d30a9-91c9-4566-ac2e-8950c97e8ff7', 'exp': 1718461603}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da11ffa3a5e326a81e56e'), email='admin@test.com', password='__hash__scrypt:32768:8:1$f4F2aHWHDDlEQGQc$50d742c9766545fdf40105aa88a0ae448aa1621859536c7ea1ae8ac7c3f59afacd1b11873dc3584ba5182f4356c424666062e2dea0d63f235a25a8975430b227', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460703, 'jti': '786a6114-3aa6-42f1-9655-ef7cd68f0eb1', 'type': 'access', 'sub': '666da11ffa3a5e326a81e56e', 'nbf': 1718460703, 'csrf': 'f42d30a9-91c9-4566-ac2e-8950c97e8ff7', 'exp': 1718461603}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da11ffa3a5e326a81e56e'), email='admin@test.com', password='__hash__scrypt:32768:8:1$f4F2aHWHDDlEQGQc$50d742c9766545fdf40105aa88a0ae448aa1621859536c7ea1ae8ac7c3f59afacd1b11873dc3584ba5182f4356c424666062e2dea0d63f235a25a8975430b227', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460703, 'jti': '786a6114-3aa6-42f1-9655-ef7cd68f0eb1', 'type': 'access', 'sub': '666da11ffa3a5e326a81e56e', 'nbf': 1718460703, 'csrf': 'f42d30a9-91c9-4566-ac2e-8950c97e8ff7', 'exp': 1718461603}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da11ffa3a5e326a81e56e'), email='admin@test.com', password='__hash__scrypt:32768:8:1$f4F2aHWHDDlEQGQc$50d742c9766545fdf40105aa88a0ae448aa1621859536c7ea1ae8ac7c3f59afacd1b11873dc3584ba5182f4356c424666062e2dea0d63f235a25a8975430b227', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460703, 'jti': 'f5179bdf-f8cf-4b2a-b7d2-858da94020b2', 'type': 'access', 'sub': '666da11ffa3a5e326a81e574', 'nbf': 1718460703, 'csrf': '39a2c7d0-a479-400c-8b46-1e9990c5461a', 'exp': 1718461603}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da11ffa3a5e326a81e574'), email='admin@test.com', password='__hash__scrypt:32768:8:1$QCxzg8pLVT0GpvxQ$394f24198e224741751a056eecec52eef67a6f6ab1733a0425f2a8f78c8e44d3181a55fd2bb099d9ff5ce14e645fa1fe0e63ea5030b54bd338b73e40a4e71afb', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting public official by ID 666da11ffa3a5e326a81e575
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460704, 'jti': '493fa92e-bacc-4c23-9d05-c85a29d05f74', 'type': 'access', 'sub': '666da120fa3a5e326a81e579', 'nbf': 1718460704, 'csrf': '1419c986-7b09-4aca-8812-bcb5883e3fa3', 'exp': 1718461604}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da120fa3a5e326a81e579'), email='admin@test.com', password='__hash__scrypt:32768:8:1$01CeXXsRTJPEf4aW$853d547ad6bfa5c8ae756e594d9bcd4406e4887925fa5e6409bf3b8bf058422c6536db75c0d35b36c474cd4a3ea104a31ad265c5d884bd9a1c390dced30dfddd', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460704, 'jti': '493fa92e-bacc-4c23-9d05-c85a29d05f74', 'type': 'access', 'sub': '666da120fa3a5e326a81e579', 'nbf': 1718460704, 'csrf': '1419c986-7b09-4aca-8812-bcb5883e3fa3', 'exp': 1718461604}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666da120fa3a5e326a81e57a')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460704, 'jti': '2b9647d2-1ec3-45f8-ba48-00efe7e0dc6c', 'type': 'access', 'sub': '666da120fa3a5e326a81e57c', 'nbf': 1718460704, 'csrf': 'd572ec96-7c8e-42b7-acca-3b22580fe159', 'exp': 1718461604}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da120fa3a5e326a81e57c'), email='admin@test.com', password='__hash__scrypt:32768:8:1$U1CKZMFV6j7kL9e2$493be3b933b2fffa827ee546f2d0830a3ceaf249cc4acf8fb3813c31fd6629a61e0cfaa5c9be31e6fde7469307338b36d4694570d3c61a770ed0be39058f6052', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460704, 'jti': '2b9647d2-1ec3-45f8-ba48-00efe7e0dc6c', 'type': 'access', 'sub': '666da120fa3a5e326a81e57c', 'nbf': 1718460704, 'csrf': 'd572ec96-7c8e-42b7-acca-3b22580fe159', 'exp': 1718461604}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666da120fa3a5e326a81e57d')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460704, 'jti': '95856073-187c-4368-b6c6-f100a6bf9a50', 'type': 'access', 'sub': '666da120fa3a5e326a81e57f', 'nbf': 1718460704, 'csrf': '227188b1-3ac9-41dc-b49b-13298c53ecb6', 'exp': 1718461604}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460704, 'jti': 'dce51858-a998-4c98-a814-d1064a198345', 'type': 'access', 'sub': '666da120fa3a5e326a81e581', 'nbf': 1718460704, 'csrf': '9c395692-c7b6-49ea-8db8-a33ea2e7b7a3', 'exp': 1718461604}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da120fa3a5e326a81e581'), email='admin@test.com', password='__hash__scrypt:32768:8:1$ybAzjBDX5hJsc2HO$3d584dbb5a72bd354dff4b5dcb42370a50db500803f5992501c8e4124cf2ec12b50a5df6f793c4c5441cb72b4c1d95cfd0dec74a90b4da21da603e49c9d3c906', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460704, 'jti': 'dce51858-a998-4c98-a814-d1064a198345', 'type': 'access', 'sub': '666da120fa3a5e326a81e581', 'nbf': 1718460704, 'csrf': '9c395692-c7b6-49ea-8db8-a33ea2e7b7a3', 'exp': 1718461604}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666da120fa3a5e326a81e582')
INFO:app.extensions:po_data={'name_eng': 'newname123', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460704, 'jti': 'ec82e894-7aee-447b-9d03-e3c6530d9810', 'type': 'access', 'sub': '666da120fa3a5e326a81e584', 'nbf': 1718460704, 'csrf': '8deff112-6159-4833-941c-674c9d63b34a', 'exp': 1718461604}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da120fa3a5e326a81e584'), email='admin@test.com', password='__hash__scrypt:32768:8:1$JMMim2CM05JNVOjI$687b07dbb9c3b0306063b6f8acb02c27ef054a3d8bb0e2f876d10e106723c7aba8032b1a3d2d1d3c7d61499f2ec938817993a301842b9394d0865257dbb56da8', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460704, 'jti': 'ec82e894-7aee-447b-9d03-e3c6530d9810', 'type': 'access', 'sub': '666da120fa3a5e326a81e584', 'nbf': 1718460704, 'csrf': '8deff112-6159-4833-941c-674c9d63b34a', 'exp': 1718461604}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666da120fa3a5e326a81e585')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטי134man', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460705, 'jti': '8e6d6045-0673-4df0-9178-a650c2022cd9', 'type': 'access', 'sub': '666da120fa3a5e326a81e587', 'nbf': 1718460705, 'csrf': 'f3b8c06b-ba27-4db3-8ae4-28643b58149c', 'exp': 1718461605}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da120fa3a5e326a81e587'), email='admin@test.com', password='__hash__scrypt:32768:8:1$OHtJQyClcmdJZgZj$435685665e4088434dfd1804ffba203b3d79245f268592dbe4dea1553bf5e6b7e541a33f033200dbba88c49aa45d828d0f75632f2830958f3861bfa55455a672', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460705, 'jti': '8e6d6045-0673-4df0-9178-a650c2022cd9', 'type': 'access', 'sub': '666da120fa3a5e326a81e587', 'nbf': 1718460705, 'csrf': 'f3b8c06b-ba27-4db3-8ae4-28643b58149c', 'exp': 1718461605}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666da121fa3a5e326a81e588')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'myposition123', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460705, 'jti': '8ddf397a-db61-41a7-89bb-32cdd7aa1b5b', 'type': 'access', 'sub': '666da121fa3a5e326a81e58a', 'nbf': 1718460705, 'csrf': '9fa9509c-ba6c-41ee-b716-8feab02ffaca', 'exp': 1718461605}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da121fa3a5e326a81e58a'), email='admin@test.com', password='__hash__scrypt:32768:8:1$kD6sW4y5rAyMhZAm$dbe59c5e534cf3b1c35d3ed51ad16b5bd4c644329c29ca77c8ac85b63f6092e360e34b355f498c85e95a47f1ba70012a1dd6279df7240a1fbd05d88bbcaae7f9', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460705, 'jti': '8ddf397a-db61-41a7-89bb-32cdd7aa1b5b', 'type': 'access', 'sub': '666da121fa3a5e326a81e58a', 'nbf': 1718460705, 'csrf': '9fa9509c-ba6c-41ee-b716-8feab02ffaca', 'exp': 1718461605}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666da121fa3a5e326a81e58b')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'myspace': 'myhandle', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460705, 'jti': '7573228d-d7bc-4a29-ba82-33deb5deea9c', 'type': 'access', 'sub': '666da121fa3a5e326a81e590', 'nbf': 1718460705, 'csrf': 'acf89cec-4f81-4de9-b903-5663c3bdc335', 'exp': 1718461605}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460706, 'jti': 'ca2093bf-136f-4b61-8820-d9b9c78199a9', 'type': 'access', 'sub': '666da122fa3a5e326a81e595', 'nbf': 1718460706, 'csrf': '9eec2b79-5e52-4c1a-b981-6609ff6ac425', 'exp': 1718461606}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized DELETE request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460706, 'jti': 'ff588b1b-e542-4145-a54b-9affd940bd05', 'type': 'access', 'sub': '666da122fa3a5e326a81e59a', 'nbf': 1718460706, 'csrf': 'c5c31787-add4-44d2-be30-6c6f3911b59c', 'exp': 1718461606}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460707, 'jti': 'dce4eb66-4c7f-411e-becb-6f341d51c85b', 'type': 'access', 'sub': '666da123fa3a5e326a81e59f', 'nbf': 1718460707, 'csrf': 'ea09ba1c-a4ce-46a2-a1e7-b812c132a6c4', 'exp': 1718461607}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460707, 'jti': 'bc4c3c54-75a0-4e2d-aa48-faf5d20b6f46', 'type': 'access', 'sub': '666da123fa3a5e326a81e5a1', 'nbf': 1718460707, 'csrf': '649b434c-bd60-4f8f-ab28-42f858981656', 'exp': 1718461607}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460707, 'jti': '0b5ed28d-a72d-4541-881e-80ba9a939fb5', 'type': 'access', 'sub': '666da123fa3a5e326a81e5a3', 'nbf': 1718460707, 'csrf': '8542aafb-bbe7-4a3d-8eb7-5fa4983c059d', 'exp': 1718461607}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460707, 'jti': '4e0070e6-985d-427f-8e23-271c83d5f0e7', 'type': 'access', 'sub': '666da123fa3a5e326a81e5a5', 'nbf': 1718460707, 'csrf': '1b6a8131-2d87-4bba-82fc-c488c5c13987', 'exp': 1718461607}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460707, 'jti': 'c96cb385-a3e1-4b68-8ed7-8e41f133f21b', 'type': 'access', 'sub': '666da123fa3a5e326a81e5a7', 'nbf': 1718460707, 'csrf': '1e7cab67-56e4-437d-bbc2-acab7034923e', 'exp': 1718461607}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460707, 'jti': 'c96cb385-a3e1-4b68-8ed7-8e41f133f21b', 'type': 'access', 'sub': '666da123fa3a5e326a81e5a7', 'nbf': 1718460707, 'csrf': '1e7cab67-56e4-437d-bbc2-acab7034923e', 'exp': 1718461607}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460707, 'jti': 'c96cb385-a3e1-4b68-8ed7-8e41f133f21b', 'type': 'access', 'sub': '666da123fa3a5e326a81e5a7', 'nbf': 1718460707, 'csrf': '1e7cab67-56e4-437d-bbc2-acab7034923e', 'exp': 1718461607}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460707, 'jti': 'c96cb385-a3e1-4b68-8ed7-8e41f133f21b', 'type': 'access', 'sub': '666da123fa3a5e326a81e5a7', 'nbf': 1718460707, 'csrf': '1e7cab67-56e4-437d-bbc2-acab7034923e', 'exp': 1718461607}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460707, 'jti': 'c96cb385-a3e1-4b68-8ed7-8e41f133f21b', 'type': 'access', 'sub': '666da123fa3a5e326a81e5a7', 'nbf': 1718460707, 'csrf': '1e7cab67-56e4-437d-bbc2-acab7034923e', 'exp': 1718461607}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460707, 'jti': 'c96cb385-a3e1-4b68-8ed7-8e41f133f21b', 'type': 'access', 'sub': '666da123fa3a5e326a81e5a7', 'nbf': 1718460707, 'csrf': '1e7cab67-56e4-437d-bbc2-acab7034923e', 'exp': 1718461607}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460708, 'jti': '87f7ad3d-db5d-4e62-8e60-84e0e2c611b4', 'type': 'access', 'sub': '666da124fa3a5e326a81e5a9', 'nbf': 1718460708, 'csrf': '359e8352-23d8-4a53-9adb-5c4ddbdd5abb', 'exp': 1718461608}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460708, 'jti': '87f7ad3d-db5d-4e62-8e60-84e0e2c611b4', 'type': 'access', 'sub': '666da124fa3a5e326a81e5a9', 'nbf': 1718460708, 'csrf': '359e8352-23d8-4a53-9adb-5c4ddbdd5abb', 'exp': 1718461608}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460708, 'jti': '87f7ad3d-db5d-4e62-8e60-84e0e2c611b4', 'type': 'access', 'sub': '666da124fa3a5e326a81e5a9', 'nbf': 1718460708, 'csrf': '359e8352-23d8-4a53-9adb-5c4ddbdd5abb', 'exp': 1718461608}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460708, 'jti': '87f7ad3d-db5d-4e62-8e60-84e0e2c611b4', 'type': 'access', 'sub': '666da124fa3a5e326a81e5a9', 'nbf': 1718460708, 'csrf': '359e8352-23d8-4a53-9adb-5c4ddbdd5abb', 'exp': 1718461608}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460708, 'jti': '87f7ad3d-db5d-4e62-8e60-84e0e2c611b4', 'type': 'access', 'sub': '666da124fa3a5e326a81e5a9', 'nbf': 1718460708, 'csrf': '359e8352-23d8-4a53-9adb-5c4ddbdd5abb', 'exp': 1718461608}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460708, 'jti': '87f7ad3d-db5d-4e62-8e60-84e0e2c611b4', 'type': 'access', 'sub': '666da124fa3a5e326a81e5a9', 'nbf': 1718460708, 'csrf': '359e8352-23d8-4a53-9adb-5c4ddbdd5abb', 'exp': 1718461608}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460708, 'jti': '3f62104e-777a-481d-b465-f981f0f33bd1', 'type': 'access', 'sub': '666da124fa3a5e326a81e5ab', 'nbf': 1718460708, 'csrf': 'b5ce1a86-bad1-4d52-929f-0c06cc79f6e9', 'exp': 1718461608}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718460708, 'jti': '7bb2adb0-b49e-4d7a-abe3-90a0728fa17e', 'type': 'access', 'sub': '666da124fa3a5e326a81e5ad', 'nbf': 1718460708, 'csrf': '09706a0b-af46-4f89-98bc-d6a7246ea32b', 'exp': 1718461608}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461208, 'jti': '7cdc0494-17b6-4dea-87eb-d7ed8b663ebb', 'type': 'access', 'sub': '666da318a0b1cb34bb47b8dc', 'nbf': 1718461208, 'csrf': '5ceebbef-b363-4025-8f7c-7eb776053f28', 'exp': 1718462108}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666da318a0b1cb34bb47b8dc') email='test@test.com' password='__hash__scrypt:32768:8:1$bnBq1OG5YOwnCo6o$2b7b228ebaa883a951388ad66248dc0f0a34d81a559455baf7785d25a2ee684f8b28295aa1dcf83a67dde0774c1556e4b2c37c05bfaecec84b63e5bb4204484c' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461208, 'jti': '99e3e876-8061-470a-898e-1d8aa9a33e08', 'type': 'access', 'sub': '666da318a0b1cb34bb47b8e1', 'nbf': 1718461208, 'csrf': 'c3943f64-6214-4e9b-bbf0-53df89e30911', 'exp': 1718462108}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666da318a0b1cb34bb47b8e1') email='test@test.com' password='__hash__scrypt:32768:8:1$kuRokhopmgelICTR$12baf28bb81ab45781d609611e1b576ce04809c87513968117dfac09d89b2753a9ae2b97f7837a22a20a543474cfb40e2eafeafbf5f43c90091b7a4b7ac9bbfa' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461208, 'jti': '11c2e78e-99cb-4756-a4af-ebdfe353af85', 'type': 'access', 'sub': '666da318a0b1cb34bb47b8e4', 'nbf': 1718461208, 'csrf': '2175f1fb-62e5-4202-b685-6cfbab295723', 'exp': 1718462108}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666da318a0b1cb34bb47b8e4') email='test@test.com' password='__hash__scrypt:32768:8:1$DZN11mwmlcrQDFAM$deacb86e3fc8952c5d1c3742ca25c440ec2c75cb23d019fad6c3c951a232e7c04deda4ad65f0da492b431f59da0503da53f3a6fc4711fcd0b7a47e348b51698e' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461209, 'jti': '8c8c56de-81b0-4308-bcbd-621d06e97879', 'type': 'access', 'sub': '666da319a0b1cb34bb47b8f0', 'nbf': 1718461209, 'csrf': '522d4c90-338a-4460-bd0a-a937f33c462c', 'exp': 1718462109}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da319a0b1cb34bb47b8f0'), email='admin@test.com', password='__hash__scrypt:32768:8:1$LRIX69dN0a4bgfFh$a3da2cc626af334a17c853d222cad5133728bb4e589be0345e68c928e88b3ce94d14c880612c6bb7e6f3b24ccc1e26a5624403b2a801ebf3dafed945309b64fe', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461209, 'jti': '1469330b-e505-40d6-b10b-c2b69c0454ad', 'type': 'access', 'sub': '666da319a0b1cb34bb47b8f3', 'nbf': 1718461209, 'csrf': 'c5140b0c-0683-4ef8-9fb8-2dbe0d89f121', 'exp': 1718462109}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da319a0b1cb34bb47b8f3'), email='admin@test.com', password='__hash__scrypt:32768:8:1$V5UNs8AsVQ80LQSQ$a26b1d33c6e939aa7e6c3b1c446218a6b8bdc3533344354ea54a47a0c0b4cae1e04db78ba05b5f0b8c36b0fa935adfa05653b6c8d5634305494b0bd995e769e5', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461209, 'jti': '10a5b0b1-1d56-48ff-81f8-7f394b91fff9', 'type': 'access', 'sub': '666da319a0b1cb34bb47b8f5', 'nbf': 1718461209, 'csrf': 'a9f99fc8-87f0-46a2-a287-730116674864', 'exp': 1718462109}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da319a0b1cb34bb47b8f5'), email='admin@test.com', password='__hash__scrypt:32768:8:1$1aUrum3amEFHJzbI$909647fbc764afd8a2809bc8963d1e727495cc70b0cf8fb479cd095d9f83d74ffb7c0de37913593275c0402d1d165d35621cc70b88aa3203a9763ef5c5c7aca7', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461209, 'jti': '176f3673-44ff-4b86-a3f8-88bc7698bbbe', 'type': 'access', 'sub': '666da319a0b1cb34bb47b8f7', 'nbf': 1718461209, 'csrf': 'b8b436fe-92e4-4da8-ad1a-f68d1ef6c8d4', 'exp': 1718462109}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da319a0b1cb34bb47b8f7'), email='admin@test.com', password='__hash__scrypt:32768:8:1$oDOfTFBCHAhFX59w$5250c1e201e29d579307b724a1d451efc834a7d38877ccf08df0621b4baa27e4356c51ec3afda69883904f2ec5e3651110f829e727ce0a1b0f27596ec5da72cc', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461209, 'jti': '0f16d634-a2aa-4a6a-bc66-25b150c30249', 'type': 'access', 'sub': '666da319a0b1cb34bb47b8f9', 'nbf': 1718461209, 'csrf': '1c947d38-d54a-4c0e-94a8-69fa8f996f1e', 'exp': 1718462109}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da319a0b1cb34bb47b8f9'), email='admin@test.com', password='__hash__scrypt:32768:8:1$MGYyA7sRAeJKkK8a$160654d4c799951fe5800ab72d63cb7bea6429f2b0965a232f338f10205e746b3f6b0c9740ce231628841300c9dbaf14dd568f2ba186dd562f10a1d486fda7fb', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461210, 'jti': 'ce5c1e82-f38f-4654-9bfb-fea8fc79794f', 'type': 'access', 'sub': '666da319a0b1cb34bb47b8fb', 'nbf': 1718461210, 'csrf': 'b6b058fc-7b87-4055-b666-ff51fcf20ae3', 'exp': 1718462110}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da319a0b1cb34bb47b8fb'), email='admin@test.com', password='__hash__scrypt:32768:8:1$MBDT50Qk6iDy4kSe$e62b2df2d143266c9b20a9cb0a1cb915f508341ca411ce907fd596bc68060e0893419b8b69c5bc702d92f1a0abb7471d334cae81e353b2243e339e04f361a45f', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461210, 'jti': '59f901f5-a7f3-4e5e-a63d-34475357090d', 'type': 'access', 'sub': '666da31aa0b1cb34bb47b8fd', 'nbf': 1718461210, 'csrf': 'c8feadfe-ec36-476c-a99c-b5b443373c9f', 'exp': 1718462110}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da31aa0b1cb34bb47b8fd'), email='admin@test.com', password='__hash__scrypt:32768:8:1$1M8PWfcppOsSkz8t$c7bd05a4516b51ee3f5fd39efa30dd90683c91e407add19e51f8c665089f854d5ee35ce2d8d5ba6f0b447ebd2d422ca10ac79de66db041eef140413262d51940', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461210, 'jti': '59f901f5-a7f3-4e5e-a63d-34475357090d', 'type': 'access', 'sub': '666da31aa0b1cb34bb47b8fd', 'nbf': 1718461210, 'csrf': 'c8feadfe-ec36-476c-a99c-b5b443373c9f', 'exp': 1718462110}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da31aa0b1cb34bb47b8fd'), email='admin@test.com', password='__hash__scrypt:32768:8:1$1M8PWfcppOsSkz8t$c7bd05a4516b51ee3f5fd39efa30dd90683c91e407add19e51f8c665089f854d5ee35ce2d8d5ba6f0b447ebd2d422ca10ac79de66db041eef140413262d51940', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:Public Official already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = public_official_service.create_public_official(public_official)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\publicofficial_data_manager_mongodb.py", line 14, in create_public_official
    raise ObjectAlreadyExistsException("Public Official already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: Public Official already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461210, 'jti': '810e03f4-ddf4-4d5f-b0eb-1ef590547fbe', 'type': 'access', 'sub': '666da31aa0b1cb34bb47b900', 'nbf': 1718461210, 'csrf': '585fec09-8c57-4535-8315-fe709c488d7c', 'exp': 1718462110}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da31aa0b1cb34bb47b900'), email='admin@test.com', password='__hash__scrypt:32768:8:1$S4gIuoDwMs6yccmi$1aae393ab7a4aa82074539389ad7a94dddb8e4336a0209a1c4f7bf34a433c5f92b3d9055b8a4345e197113d58b8970a4dd66202c31d1336ca14c46a892f23c6f', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461210, 'jti': '810e03f4-ddf4-4d5f-b0eb-1ef590547fbe', 'type': 'access', 'sub': '666da31aa0b1cb34bb47b900', 'nbf': 1718461210, 'csrf': '585fec09-8c57-4535-8315-fe709c488d7c', 'exp': 1718462110}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da31aa0b1cb34bb47b900'), email='admin@test.com', password='__hash__scrypt:32768:8:1$S4gIuoDwMs6yccmi$1aae393ab7a4aa82074539389ad7a94dddb8e4336a0209a1c4f7bf34a433c5f92b3d9055b8a4345e197113d58b8970a4dd66202c31d1336ca14c46a892f23c6f', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461210, 'jti': '810e03f4-ddf4-4d5f-b0eb-1ef590547fbe', 'type': 'access', 'sub': '666da31aa0b1cb34bb47b900', 'nbf': 1718461210, 'csrf': '585fec09-8c57-4535-8315-fe709c488d7c', 'exp': 1718462110}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da31aa0b1cb34bb47b900'), email='admin@test.com', password='__hash__scrypt:32768:8:1$S4gIuoDwMs6yccmi$1aae393ab7a4aa82074539389ad7a94dddb8e4336a0209a1c4f7bf34a433c5f92b3d9055b8a4345e197113d58b8970a4dd66202c31d1336ca14c46a892f23c6f', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461210, 'jti': '810e03f4-ddf4-4d5f-b0eb-1ef590547fbe', 'type': 'access', 'sub': '666da31aa0b1cb34bb47b900', 'nbf': 1718461210, 'csrf': '585fec09-8c57-4535-8315-fe709c488d7c', 'exp': 1718462110}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461210, 'jti': '69f6ad13-016f-4aba-9ed4-cc645b846fed', 'type': 'access', 'sub': '666da31aa0b1cb34bb47b905', 'nbf': 1718461210, 'csrf': '215111b7-2ffd-4299-a981-01a7b49bcea5', 'exp': 1718462110}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da31aa0b1cb34bb47b905'), email='admin@test.com', password='__hash__scrypt:32768:8:1$V868gdmC9OJoUFUK$80d69b17afd7d63dfc7edd8427a584e1aaec7104596c3d82d0f0ece036dc25f54f4613aed765a62ae9c105ed4ce0d09b8473a2f44f89705c2cdc721511ba2598', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461210, 'jti': '69f6ad13-016f-4aba-9ed4-cc645b846fed', 'type': 'access', 'sub': '666da31aa0b1cb34bb47b905', 'nbf': 1718461210, 'csrf': '215111b7-2ffd-4299-a981-01a7b49bcea5', 'exp': 1718462110}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da31aa0b1cb34bb47b905'), email='admin@test.com', password='__hash__scrypt:32768:8:1$V868gdmC9OJoUFUK$80d69b17afd7d63dfc7edd8427a584e1aaec7104596c3d82d0f0ece036dc25f54f4613aed765a62ae9c105ed4ce0d09b8473a2f44f89705c2cdc721511ba2598', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461210, 'jti': '69f6ad13-016f-4aba-9ed4-cc645b846fed', 'type': 'access', 'sub': '666da31aa0b1cb34bb47b905', 'nbf': 1718461210, 'csrf': '215111b7-2ffd-4299-a981-01a7b49bcea5', 'exp': 1718462110}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da31aa0b1cb34bb47b905'), email='admin@test.com', password='__hash__scrypt:32768:8:1$V868gdmC9OJoUFUK$80d69b17afd7d63dfc7edd8427a584e1aaec7104596c3d82d0f0ece036dc25f54f4613aed765a62ae9c105ed4ce0d09b8473a2f44f89705c2cdc721511ba2598', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461210, 'jti': '4bf2d672-72dc-4c7d-851d-f1f20c606975', 'type': 'access', 'sub': '666da31aa0b1cb34bb47b909', 'nbf': 1718461210, 'csrf': '2afb4076-8314-4503-89a5-a2e82e724030', 'exp': 1718462110}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
ERROR:app.extensions:Unauthorized DELETE request to /public-officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461210, 'jti': 'ce868071-6aa9-44a0-908d-8b0516a00950', 'type': 'access', 'sub': '666da31aa0b1cb34bb47b90b', 'nbf': 1718461210, 'csrf': 'b6faabd9-b8ca-44c6-80ca-73e03a409e21', 'exp': 1718462110}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da31aa0b1cb34bb47b90b'), email='admin@test.com', password='__hash__scrypt:32768:8:1$DDs3XZ3w1GdxAXOg$813df287a82037b41fbe6a707597412cacd53c0d663df6da1a77210dca8a7782b3fc4876d45eb4413bc126a7c981e4ce570a28f1900d64d850e1db666db16e29', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461210, 'jti': 'ce868071-6aa9-44a0-908d-8b0516a00950', 'type': 'access', 'sub': '666da31aa0b1cb34bb47b90b', 'nbf': 1718461210, 'csrf': 'b6faabd9-b8ca-44c6-80ca-73e03a409e21', 'exp': 1718462110}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da31aa0b1cb34bb47b90b'), email='admin@test.com', password='__hash__scrypt:32768:8:1$DDs3XZ3w1GdxAXOg$813df287a82037b41fbe6a707597412cacd53c0d663df6da1a77210dca8a7782b3fc4876d45eb4413bc126a7c981e4ce570a28f1900d64d850e1db666db16e29', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461210, 'jti': 'ce868071-6aa9-44a0-908d-8b0516a00950', 'type': 'access', 'sub': '666da31aa0b1cb34bb47b90b', 'nbf': 1718461210, 'csrf': 'b6faabd9-b8ca-44c6-80ca-73e03a409e21', 'exp': 1718462110}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da31aa0b1cb34bb47b90b'), email='admin@test.com', password='__hash__scrypt:32768:8:1$DDs3XZ3w1GdxAXOg$813df287a82037b41fbe6a707597412cacd53c0d663df6da1a77210dca8a7782b3fc4876d45eb4413bc126a7c981e4ce570a28f1900d64d850e1db666db16e29', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461211, 'jti': '04a5dfd5-5754-4601-a540-b23cba87bd6d', 'type': 'access', 'sub': '666da31ba0b1cb34bb47b911', 'nbf': 1718461211, 'csrf': 'b4313206-4b8e-44c8-8ebd-406015e0853c', 'exp': 1718462111}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da31ba0b1cb34bb47b911'), email='admin@test.com', password='__hash__scrypt:32768:8:1$NBtl466CvJp5A6oy$2e65d437716f44e8f22a3c948f22ac35e8e2325587417e001d974e3036877d861f2fed1c3ca904ef4f0766350199fb649ea51c818ae72f68c9edec82edf72038', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting public official by ID 666da31ba0b1cb34bb47b912
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461211, 'jti': '4b9a7c09-99d3-4f61-aa31-941306209c6b', 'type': 'access', 'sub': '666da31ba0b1cb34bb47b916', 'nbf': 1718461211, 'csrf': '42891a80-6d8b-4843-b594-2b7b2c3dc7de', 'exp': 1718462111}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da31ba0b1cb34bb47b916'), email='admin@test.com', password='__hash__scrypt:32768:8:1$IoAHMOErBnJA5sSo$812a07b64d5e1dca676569eea2d8543e8fe570ca67eeb0b0d259de2661332e04a9fce7a6f882a340c8fb1b2816d8a6e1ddd927b07925e218a4420c4df0940464', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461211, 'jti': '4b9a7c09-99d3-4f61-aa31-941306209c6b', 'type': 'access', 'sub': '666da31ba0b1cb34bb47b916', 'nbf': 1718461211, 'csrf': '42891a80-6d8b-4843-b594-2b7b2c3dc7de', 'exp': 1718462111}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666da31ba0b1cb34bb47b917')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461211, 'jti': '3fa418f5-1f93-4c31-afac-5587aea20506', 'type': 'access', 'sub': '666da31ba0b1cb34bb47b919', 'nbf': 1718461211, 'csrf': '310ae7b9-26d4-4c2b-ac8b-ac914e9610c4', 'exp': 1718462111}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da31ba0b1cb34bb47b919'), email='admin@test.com', password='__hash__scrypt:32768:8:1$gPLp0B1kHmNAvgkD$c4deba8295969bce735c630559b09820a269a71d54adb44a582b7ab405cb9d676ecabebc2bcb3190b4addfd8b8ac5896f627501329fbe7adca65413d626df60b', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461211, 'jti': '3fa418f5-1f93-4c31-afac-5587aea20506', 'type': 'access', 'sub': '666da31ba0b1cb34bb47b919', 'nbf': 1718461211, 'csrf': '310ae7b9-26d4-4c2b-ac8b-ac914e9610c4', 'exp': 1718462111}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666da31ba0b1cb34bb47b91a')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461211, 'jti': '5ddea5f3-c949-4e51-9e72-fdf9074a9365', 'type': 'access', 'sub': '666da31ba0b1cb34bb47b91c', 'nbf': 1718461211, 'csrf': 'a2b68168-cf1f-4287-b957-e64212cc2fca', 'exp': 1718462111}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461212, 'jti': '256252fb-1907-4e60-b071-5a3a3fbe1573', 'type': 'access', 'sub': '666da31ba0b1cb34bb47b91e', 'nbf': 1718461212, 'csrf': 'dccd6a3b-f916-42be-aefb-8db026015890', 'exp': 1718462112}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da31ba0b1cb34bb47b91e'), email='admin@test.com', password='__hash__scrypt:32768:8:1$4O8FNZQGP2vVaRY8$b14913d4702dd9ff74889c560a87db0f4af722e83e28f00304b1e116020d9a11dc559fcd475b0f87087d3cc64386b74de662e66b9fe38af39ed368bdadac40e5', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461212, 'jti': '256252fb-1907-4e60-b071-5a3a3fbe1573', 'type': 'access', 'sub': '666da31ba0b1cb34bb47b91e', 'nbf': 1718461212, 'csrf': 'dccd6a3b-f916-42be-aefb-8db026015890', 'exp': 1718462112}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666da31ca0b1cb34bb47b91f')
INFO:app.extensions:po_data={'name_eng': 'newname123', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461212, 'jti': '7c710934-d2cc-43fb-a8d7-5b8c98da92ff', 'type': 'access', 'sub': '666da31ca0b1cb34bb47b921', 'nbf': 1718461212, 'csrf': '8b833183-fcda-4e6d-9bcb-74ba95894e27', 'exp': 1718462112}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da31ca0b1cb34bb47b921'), email='admin@test.com', password='__hash__scrypt:32768:8:1$8ksmednzOWyq5JMi$4438a2ada6dcc9bb976d78deccfcf5787b6dd1927301877d80ae2f3ccc3b244b73865b16cc0d6484eb4bdd4dfaa049f0be68b1f81fa68e93c4311a86ee4136d5', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461212, 'jti': '7c710934-d2cc-43fb-a8d7-5b8c98da92ff', 'type': 'access', 'sub': '666da31ca0b1cb34bb47b921', 'nbf': 1718461212, 'csrf': '8b833183-fcda-4e6d-9bcb-74ba95894e27', 'exp': 1718462112}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666da31ca0b1cb34bb47b922')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטי134man', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461212, 'jti': '9f9bf117-fe3f-49ee-ae6d-707afc04862c', 'type': 'access', 'sub': '666da31ca0b1cb34bb47b924', 'nbf': 1718461212, 'csrf': '8a481ebe-ae74-4ca2-a6aa-359e12ee8930', 'exp': 1718462112}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da31ca0b1cb34bb47b924'), email='admin@test.com', password='__hash__scrypt:32768:8:1$0tTZXe30obYJlBl4$20851ca597ff2834bc7e32433ca47b8fc9424677841cd49498dcd2e28265b70f5e52afafdbcebbdd8c97fd02f63da84a024783ebac505f7fdeeecf6837b65b3c', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461212, 'jti': '9f9bf117-fe3f-49ee-ae6d-707afc04862c', 'type': 'access', 'sub': '666da31ca0b1cb34bb47b924', 'nbf': 1718461212, 'csrf': '8a481ebe-ae74-4ca2-a6aa-359e12ee8930', 'exp': 1718462112}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666da31ca0b1cb34bb47b925')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'myposition123', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461212, 'jti': '5434cd1d-ee08-45d7-ae21-b41b7795da8e', 'type': 'access', 'sub': '666da31ca0b1cb34bb47b927', 'nbf': 1718461212, 'csrf': '45a89589-5b38-4358-9f78-0a85654d1e3b', 'exp': 1718462112}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da31ca0b1cb34bb47b927'), email='admin@test.com', password='__hash__scrypt:32768:8:1$EJbl2PSEIPlZSNcE$7a7b37961937f7cf8bf3afe78c93e49ec223432e4a379a8ff7c2c8c97e986eed8f71b99bfaac18ae87b259fdbb2167a0c11e55301552667df1614056754872a2', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461212, 'jti': '5434cd1d-ee08-45d7-ae21-b41b7795da8e', 'type': 'access', 'sub': '666da31ca0b1cb34bb47b927', 'nbf': 1718461212, 'csrf': '45a89589-5b38-4358-9f78-0a85654d1e3b', 'exp': 1718462112}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666da31ca0b1cb34bb47b928')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'myspace': 'myhandle', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 88, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461213, 'jti': '4b551cc7-9e18-49b9-998d-e1bc706cba78', 'type': 'access', 'sub': '666da31ca0b1cb34bb47b92d', 'nbf': 1718461213, 'csrf': 'e2c70e65-4cd6-4e64-8021-4cc3a0ce7910', 'exp': 1718462113}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461213, 'jti': 'ba96e63a-9e85-46c7-b4b8-9fdc4e4338c3', 'type': 'access', 'sub': '666da31da0b1cb34bb47b932', 'nbf': 1718461213, 'csrf': 'eeea0086-dc06-4abc-ac40-df3756128208', 'exp': 1718462113}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized DELETE request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461213, 'jti': '9b4abf81-abf6-43cf-b8b1-89b8f9fba774', 'type': 'access', 'sub': '666da31da0b1cb34bb47b937', 'nbf': 1718461213, 'csrf': '805afeb7-d195-431d-916e-5ede24f39ec2', 'exp': 1718462113}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461214, 'jti': '7b5a62cb-4a03-48ef-b865-5c17bfd6e867', 'type': 'access', 'sub': '666da31ea0b1cb34bb47b93c', 'nbf': 1718461214, 'csrf': '318e4786-3c77-49f3-bf7c-51954b7b695f', 'exp': 1718462114}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461214, 'jti': '864bf2af-8d4b-4558-b3ca-18304e1eb56a', 'type': 'access', 'sub': '666da31ea0b1cb34bb47b93e', 'nbf': 1718461214, 'csrf': '6076a7c8-8b24-4641-8e1f-36bbcc89a7e0', 'exp': 1718462114}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461214, 'jti': 'e46e9536-bee7-4111-b293-e0cb0bf01c06', 'type': 'access', 'sub': '666da31ea0b1cb34bb47b940', 'nbf': 1718461214, 'csrf': '6e4c3c42-8f8d-420d-ac6d-2ded90ce589e', 'exp': 1718462114}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461214, 'jti': '07c448b3-c41e-4b84-baba-c193c238e7d7', 'type': 'access', 'sub': '666da31ea0b1cb34bb47b942', 'nbf': 1718461214, 'csrf': '43bafe49-90a3-45ae-86d2-3c57dd6b9cae', 'exp': 1718462114}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461214, 'jti': '8392620b-5894-4366-8be6-866ac7d8f515', 'type': 'access', 'sub': '666da31ea0b1cb34bb47b944', 'nbf': 1718461214, 'csrf': 'ed7735e3-6370-4992-aef6-32efbd896d70', 'exp': 1718462114}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461214, 'jti': '8392620b-5894-4366-8be6-866ac7d8f515', 'type': 'access', 'sub': '666da31ea0b1cb34bb47b944', 'nbf': 1718461214, 'csrf': 'ed7735e3-6370-4992-aef6-32efbd896d70', 'exp': 1718462114}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461214, 'jti': '8392620b-5894-4366-8be6-866ac7d8f515', 'type': 'access', 'sub': '666da31ea0b1cb34bb47b944', 'nbf': 1718461214, 'csrf': 'ed7735e3-6370-4992-aef6-32efbd896d70', 'exp': 1718462114}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461214, 'jti': '8392620b-5894-4366-8be6-866ac7d8f515', 'type': 'access', 'sub': '666da31ea0b1cb34bb47b944', 'nbf': 1718461214, 'csrf': 'ed7735e3-6370-4992-aef6-32efbd896d70', 'exp': 1718462114}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461214, 'jti': '8392620b-5894-4366-8be6-866ac7d8f515', 'type': 'access', 'sub': '666da31ea0b1cb34bb47b944', 'nbf': 1718461214, 'csrf': 'ed7735e3-6370-4992-aef6-32efbd896d70', 'exp': 1718462114}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461214, 'jti': '8392620b-5894-4366-8be6-866ac7d8f515', 'type': 'access', 'sub': '666da31ea0b1cb34bb47b944', 'nbf': 1718461214, 'csrf': 'ed7735e3-6370-4992-aef6-32efbd896d70', 'exp': 1718462114}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461215, 'jti': 'd68cfd3f-9be4-446f-ac47-99da95533006', 'type': 'access', 'sub': '666da31fa0b1cb34bb47b946', 'nbf': 1718461215, 'csrf': 'd890d1dd-cd52-4b54-bee7-db08348731fb', 'exp': 1718462115}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461215, 'jti': 'd68cfd3f-9be4-446f-ac47-99da95533006', 'type': 'access', 'sub': '666da31fa0b1cb34bb47b946', 'nbf': 1718461215, 'csrf': 'd890d1dd-cd52-4b54-bee7-db08348731fb', 'exp': 1718462115}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461215, 'jti': 'd68cfd3f-9be4-446f-ac47-99da95533006', 'type': 'access', 'sub': '666da31fa0b1cb34bb47b946', 'nbf': 1718461215, 'csrf': 'd890d1dd-cd52-4b54-bee7-db08348731fb', 'exp': 1718462115}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461215, 'jti': 'd68cfd3f-9be4-446f-ac47-99da95533006', 'type': 'access', 'sub': '666da31fa0b1cb34bb47b946', 'nbf': 1718461215, 'csrf': 'd890d1dd-cd52-4b54-bee7-db08348731fb', 'exp': 1718462115}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461215, 'jti': 'd68cfd3f-9be4-446f-ac47-99da95533006', 'type': 'access', 'sub': '666da31fa0b1cb34bb47b946', 'nbf': 1718461215, 'csrf': 'd890d1dd-cd52-4b54-bee7-db08348731fb', 'exp': 1718462115}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461215, 'jti': 'd68cfd3f-9be4-446f-ac47-99da95533006', 'type': 'access', 'sub': '666da31fa0b1cb34bb47b946', 'nbf': 1718461215, 'csrf': 'd890d1dd-cd52-4b54-bee7-db08348731fb', 'exp': 1718462115}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461216, 'jti': 'e9455f6e-8679-4244-a0fd-8c827d041790', 'type': 'access', 'sub': '666da320a0b1cb34bb47b948', 'nbf': 1718461216, 'csrf': '0c2146a2-58a5-492a-956f-793ecf4d3303', 'exp': 1718462116}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461216, 'jti': '2c76fc2e-1dd8-4313-b7eb-01740c423745', 'type': 'access', 'sub': '666da320a0b1cb34bb47b94a', 'nbf': 1718461216, 'csrf': '7b0d283e-0f30-460b-9b0b-ea153a6b4ca5', 'exp': 1718462116}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461287, 'jti': 'cc286bb6-50db-4a9a-8485-85815f3dbb2e', 'type': 'access', 'sub': '666da36719995e10469457c7', 'nbf': 1718461287, 'csrf': '91cb2df9-6cfa-481e-914e-7ce56df00254', 'exp': 1718462187}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461288, 'jti': 'fcb6b792-9901-4611-a288-6d4eb21063ed', 'type': 'access', 'sub': '666da36819995e10469457cc', 'nbf': 1718461288, 'csrf': '156b33bc-07cf-463e-a611-1443aa7c8725', 'exp': 1718462188}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461319, 'jti': '608e5c11-f5f1-4bcf-836f-f6f5f80ac07e', 'type': 'access', 'sub': '666da387d78c985b370861fd', 'nbf': 1718461319, 'csrf': 'f979f566-6376-4c19-8de7-8081e0959b68', 'exp': 1718462219}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461319, 'jti': '1192d817-509c-4ab3-80a1-eac0e5343404', 'type': 'access', 'sub': '666da387d78c985b37086202', 'nbf': 1718461319, 'csrf': '539fbfee-b9b2-4271-b1dd-a8ac76ce944f', 'exp': 1718462219}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461362, 'jti': '670a5701-d254-4c65-be9b-836108af0f1d', 'type': 'access', 'sub': '666da3b2f57e081e6297b272', 'nbf': 1718461362, 'csrf': 'b566b2e7-4717-45c5-957a-97085d42018a', 'exp': 1718462262}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:'str' object has no attribute 'pop'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 59, in get_all_users
    user_dict.pop('password')
    ^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'pop'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461362, 'jti': '899b7d95-4b2e-4ca6-952e-0f1c6d9f9920', 'type': 'access', 'sub': '666da3b2f57e081e6297b277', 'nbf': 1718461362, 'csrf': '1ee9c115-36c8-49eb-a72d-9a77e4bde7ad', 'exp': 1718462262}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461398, 'jti': '8ef28c85-30bf-4778-9c9b-6198a60b106a', 'type': 'access', 'sub': '666da3d6cd276d06b05a9d51', 'nbf': 1718461398, 'csrf': '55305d0a-cc80-4d48-a53a-901c7d14a6e4', 'exp': 1718462298}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Object of type ObjectId is not JSON serializable
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 62, in get_all_users
    response = jsonify({"users":user_dict_list}), 200
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\json\__init__.py", line 170, in jsonify
    return current_app.json.response(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\json\provider.py", line 215, in response
    f"{self.dumps(obj, **dump_args)}\n", mimetype=self.mimetype
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\json\provider.py", line 180, in dumps
    return json.dumps(obj, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\AppData\Local\Programs\Python\Python312\Lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
          ^^^^^^^^^^^
  File "C:\Users\dnoy1\AppData\Local\Programs\Python\Python312\Lib\json\encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\AppData\Local\Programs\Python\Python312\Lib\json\encoder.py", line 258, in iterencode
    return _iterencode(o, 0)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\json\provider.py", line 120, in _default
    raise TypeError(f"Object of type {type(o).__name__} is not JSON serializable")
TypeError: Object of type ObjectId is not JSON serializable
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461399, 'jti': 'a2509ba4-9aad-4298-af7f-d764f4dc8879', 'type': 'access', 'sub': '666da3d7cd276d06b05a9d56', 'nbf': 1718461399, 'csrf': '51870842-26fa-4ceb-ba50-28dc40b3666e', 'exp': 1718462299}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461734, 'jti': '23b3ea99-8b32-4d5a-a03a-6d2af0b7966b', 'type': 'access', 'sub': '666da526963e7d4f1e789fbf', 'nbf': 1718461734, 'csrf': 'fc753998-ea63-423e-9ff3-d9fd3648a1d6', 'exp': 1718462634}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461734, 'jti': '35f66c1b-e1da-49db-8a1f-6377e5a3a509', 'type': 'access', 'sub': '666da526963e7d4f1e789fc4', 'nbf': 1718461734, 'csrf': 'd127c36f-d8fd-4370-ac12-33b3bc4694c0', 'exp': 1718462634}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461803, 'jti': '74cc3bd4-a58a-4c3b-b91f-6f77460cb968', 'type': 'access', 'sub': '666da56b0192cbd03f4a4b83', 'nbf': 1718461803, 'csrf': '04513a0a-b2e3-4d4b-9214-d80d29f6f4cb', 'exp': 1718462703}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718461804, 'jti': 'da36416e-1ae3-4a91-a94e-8672ca63a79d', 'type': 'access', 'sub': '666da56c0192cbd03f4a4b88', 'nbf': 1718461804, 'csrf': '67633360-2abb-4788-b469-1cd6906fc662', 'exp': 1718462704}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462118, 'jti': 'ac7e40c8-a066-4c7b-b646-381e80d50f6b', 'type': 'access', 'sub': '666da6a6cee805e7b784c7c9', 'nbf': 1718462118, 'csrf': '8fec0daa-7117-400a-b315-55c810d8cd30', 'exp': 1718463018}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462118, 'jti': '8396928d-82bf-4c4f-908f-8c2a057ed7d1', 'type': 'access', 'sub': '666da6a6cee805e7b784c7ce', 'nbf': 1718462118, 'csrf': '86f840bc-7c31-4b4a-b5e8-c8627026ed32', 'exp': 1718463018}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462121, 'jti': '8adc60d0-7fff-44a1-8aa8-ce31e167a003', 'type': 'access', 'sub': '666da6a9debcb1628314a9cd', 'nbf': 1718462121, 'csrf': '20b0bc13-9165-4e3a-a007-257ab2805011', 'exp': 1718463021}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666da6a9debcb1628314a9cd') email='test@test.com' password='__hash__scrypt:32768:8:1$fTpNpeWJz36enbD1$3bb0cb7f708e5ad7148b4d57fce39a732f2b00c6aa31fcb7b5d23f4615272bd61c7c6bc208f260342c1ff1f5048b651d069859f207d65c92e8717ea63bd1e179' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462122, 'jti': 'c72f759b-a072-4653-915c-614454a108e2', 'type': 'access', 'sub': '666da6aadebcb1628314a9d2', 'nbf': 1718462122, 'csrf': '05fe76f3-7cb4-403d-8c35-8ff5a15d7dac', 'exp': 1718463022}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666da6aadebcb1628314a9d2') email='test@test.com' password='__hash__scrypt:32768:8:1$a1y7Es70EVX2U2U0$3ef0d43c759a88266ddcfab6ca94366f1cfdf51a00ce09e8bf79993f39caf5c5c9cd93e4ded56d815ab8ddb58b462ae20646f7a6ea01a0c96010884dae84c78b' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462122, 'jti': 'b3857dd6-5a4f-4346-9623-384bec86fb9a', 'type': 'access', 'sub': '666da6aadebcb1628314a9d5', 'nbf': 1718462122, 'csrf': '7ea098a9-b5bf-4b83-a81f-f0946bab6d1d', 'exp': 1718463022}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666da6aadebcb1628314a9d5') email='test@test.com' password='__hash__scrypt:32768:8:1$K4x7VW6uHo817Igk$ea3f93a0e6c7d80b77d9d6fc8dc73bf59fa4d134b066d19bd9e12c303704139bcc916ec07b6ba7883763dcb64dc9a58d18d9ef3149fe70d0eb4e693efad00187' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 54, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462123, 'jti': 'f5ea2ff8-5878-4bba-a882-0d12cd62e208', 'type': 'access', 'sub': '666da6abdebcb1628314a9e1', 'nbf': 1718462123, 'csrf': 'ce04cf3a-8e10-4e8e-8c46-12a8b67809cd', 'exp': 1718463023}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6abdebcb1628314a9e1'), email='admin@test.com', password='__hash__scrypt:32768:8:1$DvyzUUWauBXAgh7D$fed4b2f5b73e110e70d54811e47e4dac72e3415dab3deae7ee22712486abf588bc58e90e1860fdd507eb60499ca233e61f191902e5c03f604582bb44d3abcc9c', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462123, 'jti': '3a6425f3-aa24-47f9-a4d7-8ff7cf9dad4e', 'type': 'access', 'sub': '666da6abdebcb1628314a9e4', 'nbf': 1718462123, 'csrf': '6bcce9b5-6ab9-44cf-92ae-2025bd0a53d7', 'exp': 1718463023}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6abdebcb1628314a9e4'), email='admin@test.com', password='__hash__scrypt:32768:8:1$7NUdGnbIjGwJFZwd$1a9add6b706c04c686452e4b37bec9e66af97638592dfbce1cc1b8aefe397383e766fc261412d3887571c71cc8e33aaa42bc319b67a5ad26be6b36471b363edf', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462123, 'jti': '9d0de1b9-351b-4750-855b-9fc18cbd05a9', 'type': 'access', 'sub': '666da6abdebcb1628314a9e6', 'nbf': 1718462123, 'csrf': '02b08ae0-341a-4f9a-83eb-d73bf2896b19', 'exp': 1718463023}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6abdebcb1628314a9e6'), email='admin@test.com', password='__hash__scrypt:32768:8:1$oLIAjIftgxdyoGq9$b11fc118a2db93f10cdd3a23492b8de0bdc2d058a4bda67ec22ba0aead0ecca862d4399af3177999510a7d50c939387781a6a33c38c1a2cb2831f23f933ec003', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462123, 'jti': 'd8616376-e4d0-4ac0-9f26-6df14f58709a', 'type': 'access', 'sub': '666da6abdebcb1628314a9e8', 'nbf': 1718462123, 'csrf': '4bda8712-3a9f-4203-923f-9af9e40f2263', 'exp': 1718463023}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6abdebcb1628314a9e8'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Kn2ytfp32cwpAAHs$53c9f313c4bc0a6d1be301ef5f2bd29dfdf4158cc196340482d3919fd2c10e2ca2d99a36bf0bbbe0f8173effd0aa18738848d654d724b6d26206864a32636331', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462123, 'jti': 'ed8c2cfb-e8eb-4adc-97ef-a93574f0b267', 'type': 'access', 'sub': '666da6abdebcb1628314a9ea', 'nbf': 1718462123, 'csrf': 'ff07cbcc-b3ec-4e05-b6e9-03de8df7ff64', 'exp': 1718463023}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6abdebcb1628314a9ea'), email='admin@test.com', password='__hash__scrypt:32768:8:1$pRHFSlcR8eMnRsbp$1aeb38f74ba5342e5db30df30da9e83a7d1c4aa840aae64bfd5a68def5bbca44b21047a3e174d94920abb03763e46f37cfef603e4f14831f886773c66e1b6073', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462124, 'jti': '903ca45b-fe76-4fa6-a8ba-1df24843972d', 'type': 'access', 'sub': '666da6acdebcb1628314a9ec', 'nbf': 1718462124, 'csrf': 'b11995cd-83a0-480a-938c-c8c891e0160c', 'exp': 1718463024}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6acdebcb1628314a9ec'), email='admin@test.com', password='__hash__scrypt:32768:8:1$YGXP8DSxpb57d3DM$257ae6aac671183cbdd90f2f0fcc32dbb6ad23bdfaf033cc883a52c4818c4b87b515e732c11540d4025b70f67034ac11668eea279439b4424a67f538f1f93f05', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 31, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462124, 'jti': '43d5681b-f2d1-4b2b-a8e8-63f71f258a24', 'type': 'access', 'sub': '666da6acdebcb1628314a9ee', 'nbf': 1718462124, 'csrf': '781459bf-47d4-47d2-94ce-27fa0593215a', 'exp': 1718463024}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6acdebcb1628314a9ee'), email='admin@test.com', password='__hash__scrypt:32768:8:1$LCuWLcRpuDCq0OAX$e762aef266b0b478d58db18ceca738c6d88831e1ce64624f3e531bd746fcced51b1065c99b0c3ed00d28abc0d7399a56cb4d5743c6f2c5c2dabb00c1e806b663', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462124, 'jti': '43d5681b-f2d1-4b2b-a8e8-63f71f258a24', 'type': 'access', 'sub': '666da6acdebcb1628314a9ee', 'nbf': 1718462124, 'csrf': '781459bf-47d4-47d2-94ce-27fa0593215a', 'exp': 1718463024}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6acdebcb1628314a9ee'), email='admin@test.com', password='__hash__scrypt:32768:8:1$LCuWLcRpuDCq0OAX$e762aef266b0b478d58db18ceca738c6d88831e1ce64624f3e531bd746fcced51b1065c99b0c3ed00d28abc0d7399a56cb4d5743c6f2c5c2dabb00c1e806b663', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:Public Official already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = public_official_service.create_public_official(public_official)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\publicofficial_data_manager_mongodb.py", line 14, in create_public_official
    raise ObjectAlreadyExistsException("Public Official already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: Public Official already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462124, 'jti': '4c91b464-4a6e-49ab-a682-4dd135628098', 'type': 'access', 'sub': '666da6acdebcb1628314a9f1', 'nbf': 1718462124, 'csrf': 'f916bde0-1558-4d91-83a8-0efa0dc2b1b5', 'exp': 1718463024}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6acdebcb1628314a9f1'), email='admin@test.com', password='__hash__scrypt:32768:8:1$lJQCyGDSFAiOAUtk$1b74358d0c665364c649134b01d1d546896d2d9264c9eca27c436b90de34c4ee741916c11f631d4d515466518b8f0f73e73294d3bc71e75936da15a35558f07b', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462124, 'jti': '4c91b464-4a6e-49ab-a682-4dd135628098', 'type': 'access', 'sub': '666da6acdebcb1628314a9f1', 'nbf': 1718462124, 'csrf': 'f916bde0-1558-4d91-83a8-0efa0dc2b1b5', 'exp': 1718463024}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6acdebcb1628314a9f1'), email='admin@test.com', password='__hash__scrypt:32768:8:1$lJQCyGDSFAiOAUtk$1b74358d0c665364c649134b01d1d546896d2d9264c9eca27c436b90de34c4ee741916c11f631d4d515466518b8f0f73e73294d3bc71e75936da15a35558f07b', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462124, 'jti': '4c91b464-4a6e-49ab-a682-4dd135628098', 'type': 'access', 'sub': '666da6acdebcb1628314a9f1', 'nbf': 1718462124, 'csrf': 'f916bde0-1558-4d91-83a8-0efa0dc2b1b5', 'exp': 1718463024}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6acdebcb1628314a9f1'), email='admin@test.com', password='__hash__scrypt:32768:8:1$lJQCyGDSFAiOAUtk$1b74358d0c665364c649134b01d1d546896d2d9264c9eca27c436b90de34c4ee741916c11f631d4d515466518b8f0f73e73294d3bc71e75936da15a35558f07b', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462124, 'jti': '4c91b464-4a6e-49ab-a682-4dd135628098', 'type': 'access', 'sub': '666da6acdebcb1628314a9f1', 'nbf': 1718462124, 'csrf': 'f916bde0-1558-4d91-83a8-0efa0dc2b1b5', 'exp': 1718463024}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462124, 'jti': 'f1ccff09-d0fc-4844-b6b0-6fd7ad8fdb2f', 'type': 'access', 'sub': '666da6acdebcb1628314a9f6', 'nbf': 1718462124, 'csrf': '1467ba5d-4d9b-4248-9980-74e7175d7165', 'exp': 1718463024}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6acdebcb1628314a9f6'), email='admin@test.com', password='__hash__scrypt:32768:8:1$EC80iNS4AL4IFHK7$8cb7a42d0ae9d105982f2b1a32e8051049879ab6902aeeb9ff7110de50896f6632ba212d130047820441ba829ccd7b0f68a17f47a55ec0c4eb62855644a9c13c', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462124, 'jti': 'f1ccff09-d0fc-4844-b6b0-6fd7ad8fdb2f', 'type': 'access', 'sub': '666da6acdebcb1628314a9f6', 'nbf': 1718462124, 'csrf': '1467ba5d-4d9b-4248-9980-74e7175d7165', 'exp': 1718463024}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6acdebcb1628314a9f6'), email='admin@test.com', password='__hash__scrypt:32768:8:1$EC80iNS4AL4IFHK7$8cb7a42d0ae9d105982f2b1a32e8051049879ab6902aeeb9ff7110de50896f6632ba212d130047820441ba829ccd7b0f68a17f47a55ec0c4eb62855644a9c13c', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462124, 'jti': 'f1ccff09-d0fc-4844-b6b0-6fd7ad8fdb2f', 'type': 'access', 'sub': '666da6acdebcb1628314a9f6', 'nbf': 1718462124, 'csrf': '1467ba5d-4d9b-4248-9980-74e7175d7165', 'exp': 1718463024}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6acdebcb1628314a9f6'), email='admin@test.com', password='__hash__scrypt:32768:8:1$EC80iNS4AL4IFHK7$8cb7a42d0ae9d105982f2b1a32e8051049879ab6902aeeb9ff7110de50896f6632ba212d130047820441ba829ccd7b0f68a17f47a55ec0c4eb62855644a9c13c', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462124, 'jti': 'c0b3c0d7-b8ce-4362-95cb-821f9d83a32b', 'type': 'access', 'sub': '666da6acdebcb1628314a9fa', 'nbf': 1718462124, 'csrf': 'cca73e21-118e-4252-88f6-dc24fefa9c2a', 'exp': 1718463024}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
ERROR:app.extensions:Unauthorized DELETE request to /public-officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462124, 'jti': '805e7232-5055-437f-b8ea-799a9f1197dd', 'type': 'access', 'sub': '666da6acdebcb1628314a9fc', 'nbf': 1718462124, 'csrf': '021bb8c4-a791-492b-83cf-bcc1c7522459', 'exp': 1718463024}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6acdebcb1628314a9fc'), email='admin@test.com', password='__hash__scrypt:32768:8:1$furnzRNJKpRq4kuS$021f2db864309af567c1a624b9021bbcd9b58a48ce7decc56a70b786674805b606ee6f72409bc24d414c7822a985a7aba4a00e88d3820c792111f75491a66f5b', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462124, 'jti': '805e7232-5055-437f-b8ea-799a9f1197dd', 'type': 'access', 'sub': '666da6acdebcb1628314a9fc', 'nbf': 1718462124, 'csrf': '021bb8c4-a791-492b-83cf-bcc1c7522459', 'exp': 1718463024}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6acdebcb1628314a9fc'), email='admin@test.com', password='__hash__scrypt:32768:8:1$furnzRNJKpRq4kuS$021f2db864309af567c1a624b9021bbcd9b58a48ce7decc56a70b786674805b606ee6f72409bc24d414c7822a985a7aba4a00e88d3820c792111f75491a66f5b', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462124, 'jti': '805e7232-5055-437f-b8ea-799a9f1197dd', 'type': 'access', 'sub': '666da6acdebcb1628314a9fc', 'nbf': 1718462124, 'csrf': '021bb8c4-a791-492b-83cf-bcc1c7522459', 'exp': 1718463024}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6acdebcb1628314a9fc'), email='admin@test.com', password='__hash__scrypt:32768:8:1$furnzRNJKpRq4kuS$021f2db864309af567c1a624b9021bbcd9b58a48ce7decc56a70b786674805b606ee6f72409bc24d414c7822a985a7aba4a00e88d3820c792111f75491a66f5b', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462125, 'jti': '44d81670-a003-4a76-b2cb-7e2a401971df', 'type': 'access', 'sub': '666da6addebcb1628314aa02', 'nbf': 1718462125, 'csrf': 'f39eb015-5e49-4b41-aa0f-2f6f30cb3837', 'exp': 1718463025}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6addebcb1628314aa02'), email='admin@test.com', password='__hash__scrypt:32768:8:1$LTy6fUUXEkGAAraR$57c66bb17130036466da93cb5b2b337a8b37c891dae67209c33ab145bf5e576aa5c5eeb7e6b909f2be0daf1075388e3ac305cbb68a64c4d4548ec4aaf1adb7ac', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting public official by ID 666da6addebcb1628314aa03
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462125, 'jti': '5f9019bd-6733-4a14-8e95-ae486e90f7c8', 'type': 'access', 'sub': '666da6addebcb1628314aa07', 'nbf': 1718462125, 'csrf': '8566121b-86d6-47f0-a412-936fcc772084', 'exp': 1718463025}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6addebcb1628314aa07'), email='admin@test.com', password='__hash__scrypt:32768:8:1$VQhWwtNzJ8cWEqK2$1292c3ecc48bb62c6b45d63bf55fe651ad12ba20752cd26de95b4d64fb3b9eb2ee1c204f7af1990687cb0ed998590252922746eb3e728ece6393e36316816ece', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462125, 'jti': '5f9019bd-6733-4a14-8e95-ae486e90f7c8', 'type': 'access', 'sub': '666da6addebcb1628314aa07', 'nbf': 1718462125, 'csrf': '8566121b-86d6-47f0-a412-936fcc772084', 'exp': 1718463025}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666da6addebcb1628314aa08')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462125, 'jti': '24436e9f-e20f-440a-9d1d-4fb8df15eb66', 'type': 'access', 'sub': '666da6addebcb1628314aa0a', 'nbf': 1718462125, 'csrf': 'a58e6642-0643-41c4-8d8b-cd6a716a2879', 'exp': 1718463025}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6addebcb1628314aa0a'), email='admin@test.com', password='__hash__scrypt:32768:8:1$HtlIWD4Q4K38Yf7G$3247b070f738817a308e09af0eedf43b1651cbb9c686e3d9e84ae81952cfb48b5e6d6684e8903d6a9e3fb75b6e27bc7949462fc2cd26f6776f2e37f43288c61d', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462125, 'jti': '24436e9f-e20f-440a-9d1d-4fb8df15eb66', 'type': 'access', 'sub': '666da6addebcb1628314aa0a', 'nbf': 1718462125, 'csrf': 'a58e6642-0643-41c4-8d8b-cd6a716a2879', 'exp': 1718463025}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666da6addebcb1628314aa0b')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 89, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462125, 'jti': '68037986-50c4-4d53-a8c3-0b2af723bf48', 'type': 'access', 'sub': '666da6addebcb1628314aa0d', 'nbf': 1718462125, 'csrf': 'b424d7d1-1731-414c-998c-a6a8aa14276f', 'exp': 1718463025}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462126, 'jti': '0227452f-669d-4af8-93d2-7cb168f14d48', 'type': 'access', 'sub': '666da6addebcb1628314aa0f', 'nbf': 1718462126, 'csrf': 'd6e3c630-0c6e-49dc-9629-190f440053a4', 'exp': 1718463026}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6addebcb1628314aa0f'), email='admin@test.com', password='__hash__scrypt:32768:8:1$8Eg5Vlxa6bbwiupd$6b8375b8a0e84c3d8db2f7fe49e5183415469a2b54487304ac69b02fe0c730fd4d16c0aa33009d0eed6cd9fbe41264c25149f7c12f9314bb28cfcc89e689aac5', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462126, 'jti': '0227452f-669d-4af8-93d2-7cb168f14d48', 'type': 'access', 'sub': '666da6addebcb1628314aa0f', 'nbf': 1718462126, 'csrf': 'd6e3c630-0c6e-49dc-9629-190f440053a4', 'exp': 1718463026}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666da6aedebcb1628314aa10')
INFO:app.extensions:po_data={'name_eng': 'newname123', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 89, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462126, 'jti': 'e3c0adaf-9302-40dc-9fbb-c6a5e39c16d3', 'type': 'access', 'sub': '666da6aedebcb1628314aa12', 'nbf': 1718462126, 'csrf': '9cb023b1-4173-404a-afcd-3c9edd6a67e7', 'exp': 1718463026}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6aedebcb1628314aa12'), email='admin@test.com', password='__hash__scrypt:32768:8:1$LjHZPATs0Ru531gQ$2c769e04b2ae6659677ca51cc955afe4d161115371ae8a5d4bc294860b6f672520ccc5ab604ac0d5f00bcecda4d9708d784962c9328b2caa2d870ccc46d6b20a', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462126, 'jti': 'e3c0adaf-9302-40dc-9fbb-c6a5e39c16d3', 'type': 'access', 'sub': '666da6aedebcb1628314aa12', 'nbf': 1718462126, 'csrf': '9cb023b1-4173-404a-afcd-3c9edd6a67e7', 'exp': 1718463026}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666da6aedebcb1628314aa13')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטי134man', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 89, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462126, 'jti': '26a23651-1430-467d-9a42-c6d17724feeb', 'type': 'access', 'sub': '666da6aedebcb1628314aa15', 'nbf': 1718462126, 'csrf': 'e280951f-d8e1-4d65-822a-e745dda354d1', 'exp': 1718463026}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6aedebcb1628314aa15'), email='admin@test.com', password='__hash__scrypt:32768:8:1$vFQWUnHz0BvZM5D5$c029c16864c1fec378701f245f4eb9458a039893f41f94622e1ee652040aa6a697001a0a05c48be4c6cf86b2b8d3486ca5733cc0db39a187d0f05ed4cb3ce838', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462126, 'jti': '26a23651-1430-467d-9a42-c6d17724feeb', 'type': 'access', 'sub': '666da6aedebcb1628314aa15', 'nbf': 1718462126, 'csrf': 'e280951f-d8e1-4d65-822a-e745dda354d1', 'exp': 1718463026}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666da6aedebcb1628314aa16')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'myposition123', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 89, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462126, 'jti': '2d56f236-da99-4e39-8393-b324639856c1', 'type': 'access', 'sub': '666da6aedebcb1628314aa18', 'nbf': 1718462126, 'csrf': 'a02a18dc-40aa-4f03-adfd-c75daff1ad21', 'exp': 1718463026}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666da6aedebcb1628314aa18'), email='admin@test.com', password='__hash__scrypt:32768:8:1$w6FViYWSKFdpCNJt$bc889cf7a5bee6416f4e59b3ba2e0074a9796c9e79f5e2afa1f21888d210b32f162fe98ef96224b528a325acf16e20130a6bd572aeea5945e2f0f216e18028f1', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462126, 'jti': '2d56f236-da99-4e39-8393-b324639856c1', 'type': 'access', 'sub': '666da6aedebcb1628314aa18', 'nbf': 1718462126, 'csrf': 'a02a18dc-40aa-4f03-adfd-c75daff1ad21', 'exp': 1718463026}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666da6aedebcb1628314aa19')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'myspace': 'myhandle', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 89, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462127, 'jti': '7367e667-0ed7-495c-911a-1478c0211124', 'type': 'access', 'sub': '666da6aedebcb1628314aa1e', 'nbf': 1718462127, 'csrf': '24e03027-7366-4adb-8fe3-51cb25d3f65c', 'exp': 1718463027}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462127, 'jti': '4818d2b4-8794-43ff-8b21-cfd1369251a4', 'type': 'access', 'sub': '666da6afdebcb1628314aa23', 'nbf': 1718462127, 'csrf': '1d8f05f9-2cb7-4d2f-bc0c-15b368d5554c', 'exp': 1718463027}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized DELETE request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462127, 'jti': '3f379c25-6f52-4116-b3ff-955c85864754', 'type': 'access', 'sub': '666da6afdebcb1628314aa28', 'nbf': 1718462127, 'csrf': 'cb087b4a-39af-4b29-833f-4d37cf478202', 'exp': 1718463027}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462128, 'jti': '0bc994d5-d5b4-4502-a791-0972a1f8a29f', 'type': 'access', 'sub': '666da6b0debcb1628314aa2d', 'nbf': 1718462128, 'csrf': 'a12323a0-aae5-4b3a-8b3d-5e579a51c26d', 'exp': 1718463028}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized GET request to /users/all
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462128, 'jti': 'd1dacd19-58d4-42a6-8eb6-4ce3d367e377', 'type': 'access', 'sub': '666da6b0debcb1628314aa2f', 'nbf': 1718462128, 'csrf': '4255b528-37e1-4584-81ff-fb1607c431b4', 'exp': 1718463028}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462128, 'jti': 'bf8f0a65-5e06-4515-93ba-5fdf1aa03dc7', 'type': 'access', 'sub': '666da6b0debcb1628314aa31', 'nbf': 1718462128, 'csrf': 'ba7a9573-abc0-4786-85f4-7641a5c82543', 'exp': 1718463028}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462128, 'jti': '58264510-b5bc-4281-b6d8-d32987e3e580', 'type': 'access', 'sub': '666da6b0debcb1628314aa33', 'nbf': 1718462128, 'csrf': '9c800cd3-7d6e-4f30-8a40-bfa0f56f32e8', 'exp': 1718463028}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462128, 'jti': '50be6fbb-0aeb-4899-8ad7-b17b608d7035', 'type': 'access', 'sub': '666da6b0debcb1628314aa35', 'nbf': 1718462128, 'csrf': '87c6d02f-8af3-4be4-a0ed-9295abbfaf68', 'exp': 1718463028}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462128, 'jti': '50be6fbb-0aeb-4899-8ad7-b17b608d7035', 'type': 'access', 'sub': '666da6b0debcb1628314aa35', 'nbf': 1718462128, 'csrf': '87c6d02f-8af3-4be4-a0ed-9295abbfaf68', 'exp': 1718463028}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462128, 'jti': '50be6fbb-0aeb-4899-8ad7-b17b608d7035', 'type': 'access', 'sub': '666da6b0debcb1628314aa35', 'nbf': 1718462128, 'csrf': '87c6d02f-8af3-4be4-a0ed-9295abbfaf68', 'exp': 1718463028}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462128, 'jti': '50be6fbb-0aeb-4899-8ad7-b17b608d7035', 'type': 'access', 'sub': '666da6b0debcb1628314aa35', 'nbf': 1718462128, 'csrf': '87c6d02f-8af3-4be4-a0ed-9295abbfaf68', 'exp': 1718463028}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462128, 'jti': '50be6fbb-0aeb-4899-8ad7-b17b608d7035', 'type': 'access', 'sub': '666da6b0debcb1628314aa35', 'nbf': 1718462128, 'csrf': '87c6d02f-8af3-4be4-a0ed-9295abbfaf68', 'exp': 1718463028}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462128, 'jti': '50be6fbb-0aeb-4899-8ad7-b17b608d7035', 'type': 'access', 'sub': '666da6b0debcb1628314aa35', 'nbf': 1718462128, 'csrf': '87c6d02f-8af3-4be4-a0ed-9295abbfaf68', 'exp': 1718463028}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462129, 'jti': 'e7acede8-6977-4fe9-aee6-f5d4301fd8b3', 'type': 'access', 'sub': '666da6b1debcb1628314aa37', 'nbf': 1718462129, 'csrf': '30cac702-d029-4a08-b0fb-93d5ae8960ee', 'exp': 1718463029}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462129, 'jti': 'e7acede8-6977-4fe9-aee6-f5d4301fd8b3', 'type': 'access', 'sub': '666da6b1debcb1628314aa37', 'nbf': 1718462129, 'csrf': '30cac702-d029-4a08-b0fb-93d5ae8960ee', 'exp': 1718463029}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462129, 'jti': 'e7acede8-6977-4fe9-aee6-f5d4301fd8b3', 'type': 'access', 'sub': '666da6b1debcb1628314aa37', 'nbf': 1718462129, 'csrf': '30cac702-d029-4a08-b0fb-93d5ae8960ee', 'exp': 1718463029}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462129, 'jti': 'e7acede8-6977-4fe9-aee6-f5d4301fd8b3', 'type': 'access', 'sub': '666da6b1debcb1628314aa37', 'nbf': 1718462129, 'csrf': '30cac702-d029-4a08-b0fb-93d5ae8960ee', 'exp': 1718463029}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462129, 'jti': 'e7acede8-6977-4fe9-aee6-f5d4301fd8b3', 'type': 'access', 'sub': '666da6b1debcb1628314aa37', 'nbf': 1718462129, 'csrf': '30cac702-d029-4a08-b0fb-93d5ae8960ee', 'exp': 1718463029}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462129, 'jti': 'e7acede8-6977-4fe9-aee6-f5d4301fd8b3', 'type': 'access', 'sub': '666da6b1debcb1628314aa37', 'nbf': 1718462129, 'csrf': '30cac702-d029-4a08-b0fb-93d5ae8960ee', 'exp': 1718463029}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 32, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462130, 'jti': 'ca7298e6-91ec-4566-b670-791e99008bba', 'type': 'access', 'sub': '666da6b2debcb1628314aa39', 'nbf': 1718462130, 'csrf': '13f161b5-3b58-4e41-a85c-3635b29766f3', 'exp': 1718463030}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718462130, 'jti': '6ce1025c-8324-4770-b4fe-a45610f27de8', 'type': 'access', 'sub': '666da6b2debcb1628314aa3b', 'nbf': 1718462130, 'csrf': 'd404028a-53ed-445c-b6eb-67a4b4eba559', 'exp': 1718463030}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467202, 'jti': 'e3807e5d-8f43-44e3-ab97-6ed54dca72ef', 'type': 'access', 'sub': '666dba82ff1281bc08540db3', 'nbf': 1718467202, 'csrf': 'b3b1ed72-cd2e-40a6-932e-7ec3c9f31ac8', 'exp': 1718468102, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467203, 'jti': '0ad13450-0dab-4bb8-9dd1-89c5bd531776', 'type': 'access', 'sub': '666dba83ff1281bc08540db8', 'nbf': 1718467203, 'csrf': 'cbdca8b2-3963-4e31-bcda-e2ca3da85301', 'exp': 1718468103, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467460, 'jti': '21170d23-04b6-4577-9329-b4546eb63223', 'type': 'access', 'sub': '666dbb848b73292fe0051d2a', 'nbf': 1718467460, 'csrf': '5d75cad5-57c9-4707-8ec3-803e6008790c', 'exp': 1718468360, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666dbb848b73292fe0051d2a') email='test@test.com' password='__hash__scrypt:32768:8:1$qEdu67d9CERts2dJ$ec325965efa39491b411ea6c9fc02213a3dce63359c5fa660bbdd5ac97846dbdb6eab86d6fedda4a329bc3fcc3e9387b13cdd26d93cf501f0c837a9d8b9a177b' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467460, 'jti': '9ea00c60-2460-42b6-b2f7-dc914d893961', 'type': 'access', 'sub': '666dbb848b73292fe0051d2f', 'nbf': 1718467460, 'csrf': 'b0da75bc-caa1-4d60-8b60-64472e9e7898', 'exp': 1718468360, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666dbb848b73292fe0051d2f') email='test@test.com' password='__hash__scrypt:32768:8:1$1LkdzRTg0MqSTPwv$f5ed6f54d137e4c8bd6ec9ec42558f0c586d8aed87faf01ac4d4321ca5529262e6fecd81766494284c77bd09873f61df7f591800d339bff017f57232c01d1398' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467460, 'jti': 'd7cb6bc1-e28f-4741-80be-14e56b2c636d', 'type': 'access', 'sub': '666dbb848b73292fe0051d32', 'nbf': 1718467460, 'csrf': '3c67490d-af01-40c9-8234-3fda2862c87e', 'exp': 1718468360, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666dbb848b73292fe0051d32') email='test@test.com' password='__hash__scrypt:32768:8:1$44ROhQHxDKjL90sg$affd9ce6076f9cdf0549c5ac59f0d2278e310e81df655e43399e09c324cfa530734b18c38c155c0040ee8d8d4ddda0402f01dfc999e97ec4b299052fbf92dbfc' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467461, 'jti': '83face2e-e864-4af1-bb72-0bd6501dc1db', 'type': 'access', 'sub': '666dbb858b73292fe0051d3e', 'nbf': 1718467461, 'csrf': 'cab01f5d-a8af-4d63-85b2-95324841e3d8', 'exp': 1718468361, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb858b73292fe0051d3e'), email='admin@test.com', password='__hash__scrypt:32768:8:1$uc11jIyxaaSDJvTl$a4266d41260344cc7ad24b9ed45cdc66af4af1dc2a136704e94677c77e098b7009921a6495020c8fe3e6cb5a7f5a38a202590076c8fe90ec04b651cd7f7601e6', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467461, 'jti': '1d29db87-3664-4346-9b22-b9757f321e87', 'type': 'access', 'sub': '666dbb858b73292fe0051d41', 'nbf': 1718467461, 'csrf': '9841945a-3b52-42dd-8153-4ad48b82f283', 'exp': 1718468361, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb858b73292fe0051d41'), email='admin@test.com', password='__hash__scrypt:32768:8:1$ZfmOKWBdUCSigGkA$a674b7a397ebe920b699fabb7bf6dd84741dd424b51e66210d974ed503c248dfef753e9d8f53508adb75d974ed2531e2bb06c27128868bfa1c8b92ac5de1cfe9', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467462, 'jti': 'feac40e3-4c8d-4eae-96f1-282274716017', 'type': 'access', 'sub': '666dbb868b73292fe0051d43', 'nbf': 1718467462, 'csrf': '3407baa2-0caa-4461-be3c-0511b2b66046', 'exp': 1718468362, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb868b73292fe0051d43'), email='admin@test.com', password='__hash__scrypt:32768:8:1$CiDcpMrbZzQXlAWU$dd6177acafe7259dcc568246f6bd89f8a478b506260f03b91a34b166c7bfb8f16ef7750513b64988f7f83012894a94a6b62b380e8cc9d053c95af813e8940bb0', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467462, 'jti': '0aa81cd7-dc3f-449d-80d1-90c94468e620', 'type': 'access', 'sub': '666dbb868b73292fe0051d45', 'nbf': 1718467462, 'csrf': '2073b76c-3166-4fb2-99a9-2e510b5b5f4a', 'exp': 1718468362, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb868b73292fe0051d45'), email='admin@test.com', password='__hash__scrypt:32768:8:1$6EbqwoAI3V47Ukn5$8f60e4e7ce667d7401626e717534e11ada9932843cc6247875238e8d92796203d3c548b836b371754c9c64de32acae7e891e2740e9d1b66181934761c6e090f1', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467462, 'jti': '93c5d30f-d94d-4625-9aa0-49b6172e62ff', 'type': 'access', 'sub': '666dbb868b73292fe0051d47', 'nbf': 1718467462, 'csrf': 'f77485c2-0f8b-457d-9970-5a4ff800dfc1', 'exp': 1718468362, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb868b73292fe0051d47'), email='admin@test.com', password='__hash__scrypt:32768:8:1$XD3krWQLZVCa0ggr$22b198a50e8b794a695a288de5ddef143e71a937e75a2b814d6160c9ed3526ee19eab44a9c234cf4f9e0827e3dd1d1eef750b962b4d89e02f4250fa397dc9afd', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467462, 'jti': 'e5472e1a-ad76-4e31-a307-ab63ddd85045', 'type': 'access', 'sub': '666dbb868b73292fe0051d49', 'nbf': 1718467462, 'csrf': 'b7dab415-8f0d-4b0a-9297-65fd0611e0d3', 'exp': 1718468362, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb868b73292fe0051d49'), email='admin@test.com', password='__hash__scrypt:32768:8:1$YMRn1q0c1C6yYsat$1f86050476d723f8ebab21b3ff8b066635ac85f3e562a468203c111586b47dabf1fe27bbc2ebc219cde7249218381f5bb44f09f4fe00601b3ab4c00d7b4d4921', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467462, 'jti': '5161fdae-1e20-4cc7-8a79-e080b451146e', 'type': 'access', 'sub': '666dbb868b73292fe0051d4b', 'nbf': 1718467462, 'csrf': '26fd159c-4fce-48c5-926e-131a4ab2a776', 'exp': 1718468362, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb868b73292fe0051d4b'), email='admin@test.com', password='__hash__scrypt:32768:8:1$0r8VT1JmGbEnU7T5$fdb37e7f69dac2ae881c9af481b14d9d4983df5006837a2af908a9042fa383c0d37ec826ef39b589a8e5956d13da852056ed679be20663fd0de83b101212c313', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467462, 'jti': '5161fdae-1e20-4cc7-8a79-e080b451146e', 'type': 'access', 'sub': '666dbb868b73292fe0051d4b', 'nbf': 1718467462, 'csrf': '26fd159c-4fce-48c5-926e-131a4ab2a776', 'exp': 1718468362, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb868b73292fe0051d4b'), email='admin@test.com', password='__hash__scrypt:32768:8:1$0r8VT1JmGbEnU7T5$fdb37e7f69dac2ae881c9af481b14d9d4983df5006837a2af908a9042fa383c0d37ec826ef39b589a8e5956d13da852056ed679be20663fd0de83b101212c313', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:Public Official already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 33, in create_public_official
    public_official = public_official_service.create_public_official(public_official)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\publicofficial_data_manager_mongodb.py", line 14, in create_public_official
    raise ObjectAlreadyExistsException("Public Official already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: Public Official already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467463, 'jti': 'ed9cffef-7388-4961-bd64-a89ae889ee05', 'type': 'access', 'sub': '666dbb868b73292fe0051d4e', 'nbf': 1718467463, 'csrf': 'e93a0f91-f688-4d57-b7d6-231670269412', 'exp': 1718468363, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb868b73292fe0051d4e'), email='admin@test.com', password='__hash__scrypt:32768:8:1$c3RfVwafa8PB8yTE$5ed9ba9877100db293134c2d25333660801ecd0ca60c8f57903d0f3ca24d04f36917a3e3a0c62c947c2c5fea6bc4d7bf812127dd518badef29a2ab4938938c7d', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467463, 'jti': 'ed9cffef-7388-4961-bd64-a89ae889ee05', 'type': 'access', 'sub': '666dbb868b73292fe0051d4e', 'nbf': 1718467463, 'csrf': 'e93a0f91-f688-4d57-b7d6-231670269412', 'exp': 1718468363, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb868b73292fe0051d4e'), email='admin@test.com', password='__hash__scrypt:32768:8:1$c3RfVwafa8PB8yTE$5ed9ba9877100db293134c2d25333660801ecd0ca60c8f57903d0f3ca24d04f36917a3e3a0c62c947c2c5fea6bc4d7bf812127dd518badef29a2ab4938938c7d', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467463, 'jti': 'ed9cffef-7388-4961-bd64-a89ae889ee05', 'type': 'access', 'sub': '666dbb868b73292fe0051d4e', 'nbf': 1718467463, 'csrf': 'e93a0f91-f688-4d57-b7d6-231670269412', 'exp': 1718468363, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb868b73292fe0051d4e'), email='admin@test.com', password='__hash__scrypt:32768:8:1$c3RfVwafa8PB8yTE$5ed9ba9877100db293134c2d25333660801ecd0ca60c8f57903d0f3ca24d04f36917a3e3a0c62c947c2c5fea6bc4d7bf812127dd518badef29a2ab4938938c7d', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467463, 'jti': 'ed9cffef-7388-4961-bd64-a89ae889ee05', 'type': 'access', 'sub': '666dbb868b73292fe0051d4e', 'nbf': 1718467463, 'csrf': 'e93a0f91-f688-4d57-b7d6-231670269412', 'exp': 1718468363, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467463, 'jti': '1c345744-301f-43b3-9047-93762971390d', 'type': 'access', 'sub': '666dbb878b73292fe0051d53', 'nbf': 1718467463, 'csrf': '53a5562b-6bcd-46b9-8a86-89817ce980a3', 'exp': 1718468363, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb878b73292fe0051d53'), email='admin@test.com', password='__hash__scrypt:32768:8:1$ISDPFgY6Op2LTwZt$dee008b797731564adf87350ae3c0df4f4d45b81d579fd68e76d3339abac36f430616f917bd5544c3bb9391969d51b816c4d7cd6046b72e96d26959ef5c18ce6', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467463, 'jti': '1c345744-301f-43b3-9047-93762971390d', 'type': 'access', 'sub': '666dbb878b73292fe0051d53', 'nbf': 1718467463, 'csrf': '53a5562b-6bcd-46b9-8a86-89817ce980a3', 'exp': 1718468363, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb878b73292fe0051d53'), email='admin@test.com', password='__hash__scrypt:32768:8:1$ISDPFgY6Op2LTwZt$dee008b797731564adf87350ae3c0df4f4d45b81d579fd68e76d3339abac36f430616f917bd5544c3bb9391969d51b816c4d7cd6046b72e96d26959ef5c18ce6', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467463, 'jti': '1c345744-301f-43b3-9047-93762971390d', 'type': 'access', 'sub': '666dbb878b73292fe0051d53', 'nbf': 1718467463, 'csrf': '53a5562b-6bcd-46b9-8a86-89817ce980a3', 'exp': 1718468363, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb878b73292fe0051d53'), email='admin@test.com', password='__hash__scrypt:32768:8:1$ISDPFgY6Op2LTwZt$dee008b797731564adf87350ae3c0df4f4d45b81d579fd68e76d3339abac36f430616f917bd5544c3bb9391969d51b816c4d7cd6046b72e96d26959ef5c18ce6', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467463, 'jti': 'ae148553-2a79-4310-8a38-5521048e5ddf', 'type': 'access', 'sub': '666dbb878b73292fe0051d57', 'nbf': 1718467463, 'csrf': 'd7820fe7-abdc-49e1-9ec3-20c31441a2f7', 'exp': 1718468363, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467463, 'jti': 'd6d2ddbe-cc00-4c98-af39-06fde3cd80df', 'type': 'access', 'sub': '666dbb878b73292fe0051d59', 'nbf': 1718467463, 'csrf': '9f4ccd31-f6a4-49f3-a21c-d38c5563ff17', 'exp': 1718468363, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb878b73292fe0051d59'), email='admin@test.com', password='__hash__scrypt:32768:8:1$WmJmQfM5adzoMUHE$86469aff12f92eac7c750516de267a09c7a78e33e9d32b0fb2cd56ad882d8021bd52c0f71c8d9a68123c42d1b999cb16cef9ea7bc506568ebffd42d511e7ee41', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467463, 'jti': 'd6d2ddbe-cc00-4c98-af39-06fde3cd80df', 'type': 'access', 'sub': '666dbb878b73292fe0051d59', 'nbf': 1718467463, 'csrf': '9f4ccd31-f6a4-49f3-a21c-d38c5563ff17', 'exp': 1718468363, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb878b73292fe0051d59'), email='admin@test.com', password='__hash__scrypt:32768:8:1$WmJmQfM5adzoMUHE$86469aff12f92eac7c750516de267a09c7a78e33e9d32b0fb2cd56ad882d8021bd52c0f71c8d9a68123c42d1b999cb16cef9ea7bc506568ebffd42d511e7ee41', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467463, 'jti': 'd6d2ddbe-cc00-4c98-af39-06fde3cd80df', 'type': 'access', 'sub': '666dbb878b73292fe0051d59', 'nbf': 1718467463, 'csrf': '9f4ccd31-f6a4-49f3-a21c-d38c5563ff17', 'exp': 1718468363, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb878b73292fe0051d59'), email='admin@test.com', password='__hash__scrypt:32768:8:1$WmJmQfM5adzoMUHE$86469aff12f92eac7c750516de267a09c7a78e33e9d32b0fb2cd56ad882d8021bd52c0f71c8d9a68123c42d1b999cb16cef9ea7bc506568ebffd42d511e7ee41', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467463, 'jti': 'a52e9a9b-7020-4593-9924-045bc955a1f6', 'type': 'access', 'sub': '666dbb878b73292fe0051d5f', 'nbf': 1718467463, 'csrf': '110e388d-2e21-4629-ae60-68d8fa0b6ddb', 'exp': 1718468363, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb878b73292fe0051d5f'), email='admin@test.com', password='__hash__scrypt:32768:8:1$5lIq4TMMcSU0ekEu$118ff1693b1cc6e5c82d477bad9757b6c26797276eea73b09486b5d02de08a6693a82977c8853a96ef047455e9b6f8d89b077e660fc163477af6dcd5592eeea9', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting public official by ID 666dbb878b73292fe0051d60
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467464, 'jti': 'fe7a17d8-ea82-4b09-8874-29bd75af68c3', 'type': 'access', 'sub': '666dbb888b73292fe0051d64', 'nbf': 1718467464, 'csrf': '33b6bfb3-d461-49fe-acbb-0a48e3de5a64', 'exp': 1718468364, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb888b73292fe0051d64'), email='admin@test.com', password='__hash__scrypt:32768:8:1$dPEMpCfbaDKXxQ9q$3ba6102be73b69e47eb9b5aa9c89bef5027947e177423b2d30c600fe9264e962c342ec5365900498b379b20c32d502629ed7046891a0cf4aaba71aac83da95b2', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467464, 'jti': 'fe7a17d8-ea82-4b09-8874-29bd75af68c3', 'type': 'access', 'sub': '666dbb888b73292fe0051d64', 'nbf': 1718467464, 'csrf': '33b6bfb3-d461-49fe-acbb-0a48e3de5a64', 'exp': 1718468364, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dbb888b73292fe0051d65')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467464, 'jti': 'd86edd94-4ca5-4a97-b0fb-1ce68859d8ab', 'type': 'access', 'sub': '666dbb888b73292fe0051d67', 'nbf': 1718467464, 'csrf': 'b40c9033-cf92-4a89-997b-5bece8abae54', 'exp': 1718468364, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb888b73292fe0051d67'), email='admin@test.com', password='__hash__scrypt:32768:8:1$XXzkD9ekaYkF9wDa$ac7ccb1ebf78f93acc0962e42adbbbf87ea08d25ce1f8ae7ed34cbba34fb2d8ae61e5af605091e43d890ee6eb35cc2124c8b5b030a865998f7d9cee201328148', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467464, 'jti': 'd86edd94-4ca5-4a97-b0fb-1ce68859d8ab', 'type': 'access', 'sub': '666dbb888b73292fe0051d67', 'nbf': 1718467464, 'csrf': 'b40c9033-cf92-4a89-997b-5bece8abae54', 'exp': 1718468364, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dbb888b73292fe0051d68')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 81, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467464, 'jti': 'bbae23c2-f8ac-4239-9cd1-5c90ab681c13', 'type': 'access', 'sub': '666dbb888b73292fe0051d6a', 'nbf': 1718467464, 'csrf': '55fc9236-a631-4881-b0c3-6bdc1928db2a', 'exp': 1718468364, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467464, 'jti': '53a8accf-8270-4846-a347-765d3a78b71f', 'type': 'access', 'sub': '666dbb888b73292fe0051d6c', 'nbf': 1718467464, 'csrf': '2f3d0e17-b000-4f0d-9c51-54a7d7241be9', 'exp': 1718468364, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb888b73292fe0051d6c'), email='admin@test.com', password='__hash__scrypt:32768:8:1$AXSxKpIqugQB15V8$3d0eea0a515ef36c98cca3f45ada2ba6a01d0e2a95f0ca6bad2152278790a451d61899dc7650732faade9cb6963819d7afe9b38682d33595bd9f426bb6f9a550', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467464, 'jti': '53a8accf-8270-4846-a347-765d3a78b71f', 'type': 'access', 'sub': '666dbb888b73292fe0051d6c', 'nbf': 1718467464, 'csrf': '2f3d0e17-b000-4f0d-9c51-54a7d7241be9', 'exp': 1718468364, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dbb888b73292fe0051d6d')
INFO:app.extensions:po_data={'name_eng': 'newname123', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 81, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467464, 'jti': '9165a3e6-1d27-4a22-8011-6e874c15c20a', 'type': 'access', 'sub': '666dbb888b73292fe0051d6f', 'nbf': 1718467464, 'csrf': '6727d02b-dd51-4580-acca-780784e19aa6', 'exp': 1718468364, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb888b73292fe0051d6f'), email='admin@test.com', password='__hash__scrypt:32768:8:1$TcwttkyyHaJ28eg5$ff05fc6064890f627df4d7e5ffaa05d0d511661bc1dac81db7ce782e6c58e718ad7b16ed58c03ca671d8d8daa0d48ec4b1ef0ad8d3912da5b1df2b43515656a8', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467464, 'jti': '9165a3e6-1d27-4a22-8011-6e874c15c20a', 'type': 'access', 'sub': '666dbb888b73292fe0051d6f', 'nbf': 1718467464, 'csrf': '6727d02b-dd51-4580-acca-780784e19aa6', 'exp': 1718468364, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dbb888b73292fe0051d70')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטי134man', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 81, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467464, 'jti': 'f064ecc4-27fe-49c7-b790-f6d77d3a78d8', 'type': 'access', 'sub': '666dbb888b73292fe0051d72', 'nbf': 1718467464, 'csrf': '0959eb0a-3a1f-4014-92ee-1f703d1f30e4', 'exp': 1718468364, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb888b73292fe0051d72'), email='admin@test.com', password='__hash__scrypt:32768:8:1$KvHscU0eCFjtFsqS$285cad66650561dd0357d805f7116cb49e6fd824388e6b38e63a7eb55a41fa885691b414b964a8d21270cb6ee4c12fc2a267541ea641ad641b2ac1dffa9ea765', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467464, 'jti': 'f064ecc4-27fe-49c7-b790-f6d77d3a78d8', 'type': 'access', 'sub': '666dbb888b73292fe0051d72', 'nbf': 1718467464, 'csrf': '0959eb0a-3a1f-4014-92ee-1f703d1f30e4', 'exp': 1718468364, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dbb888b73292fe0051d73')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'myposition123', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 81, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467465, 'jti': 'd0aaa19b-81f0-441b-852f-e656ef55bf94', 'type': 'access', 'sub': '666dbb898b73292fe0051d75', 'nbf': 1718467465, 'csrf': '5aa3f105-8ac1-4385-b59b-e7388d9fb057', 'exp': 1718468365, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbb898b73292fe0051d75'), email='admin@test.com', password='__hash__scrypt:32768:8:1$2tgtDqs2ZWdkLpkB$26a4f89f0e3013fc53dda95f4c9efb99107a46ccabd17829bc96155eab48f45c875d9597c2a83b6149eb86ac1e91646d512f7f0c26213100a6f6efcc6318738b', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467465, 'jti': 'd0aaa19b-81f0-441b-852f-e656ef55bf94', 'type': 'access', 'sub': '666dbb898b73292fe0051d75', 'nbf': 1718467465, 'csrf': '5aa3f105-8ac1-4385-b59b-e7388d9fb057', 'exp': 1718468365, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dbb898b73292fe0051d76')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'myspace': 'myhandle', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 81, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467465, 'jti': 'add6a6b3-8677-42c1-a895-99b2c75c43c1', 'type': 'access', 'sub': '666dbb898b73292fe0051d7b', 'nbf': 1718467465, 'csrf': '44dc52d5-d2a9-411a-8579-5b4d69dbffc1', 'exp': 1718468365, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467465, 'jti': '755f0d9b-d72b-4a53-a629-627dadee9fbf', 'type': 'access', 'sub': '666dbb898b73292fe0051d80', 'nbf': 1718467465, 'csrf': 'fa7a39ed-9405-4dea-aa92-43ee4d1d4e14', 'exp': 1718468365, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467466, 'jti': '731732ea-943c-49ef-8dd8-7a73e6d860dc', 'type': 'access', 'sub': '666dbb8a8b73292fe0051d85', 'nbf': 1718467466, 'csrf': 'f8b83753-6db2-4a51-9698-681fb535cf88', 'exp': 1718468366, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467466, 'jti': '956d5b68-75f2-4fe5-bf1b-6ec933ea62dd', 'type': 'access', 'sub': '666dbb8a8b73292fe0051d8a', 'nbf': 1718467466, 'csrf': '03ff45ea-9e77-4c1b-a8f3-22fd830cc154', 'exp': 1718468366, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467466, 'jti': '9161eeb4-c2a1-41ed-b70d-86c95ce02feb', 'type': 'access', 'sub': '666dbb8a8b73292fe0051d8c', 'nbf': 1718467466, 'csrf': 'fd31f4be-91c9-4950-bed1-71ce5618ec12', 'exp': 1718468366, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467467, 'jti': '71ce316a-6012-4eaf-ab0a-277d3f35e83c', 'type': 'access', 'sub': '666dbb8b8b73292fe0051d8e', 'nbf': 1718467467, 'csrf': '1f51caad-0976-4f30-aea1-4bcd84a2e55c', 'exp': 1718468367, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467467, 'jti': 'e9c1ae8b-fc2e-4a1b-b44c-204f4ea103e6', 'type': 'access', 'sub': '666dbb8b8b73292fe0051d90', 'nbf': 1718467467, 'csrf': '261437df-618e-4eca-b7a0-35762cf22e35', 'exp': 1718468367, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467467, 'jti': '95289bce-5e0c-4b7a-b8cd-8a28e0fe3ee9', 'type': 'access', 'sub': '666dbb8b8b73292fe0051d92', 'nbf': 1718467467, 'csrf': '4d24bbca-a7bd-498c-8e63-504cf5500ced', 'exp': 1718468367, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467467, 'jti': '9d3d7e0f-82c8-489f-993d-9683ab92f590', 'type': 'access', 'sub': '666dbb8b8b73292fe0051d94', 'nbf': 1718467467, 'csrf': '25a015b5-ec80-4157-8912-af91f3c3f1f8', 'exp': 1718468367, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467467, 'jti': '980e8fb3-6837-4ce1-8cf4-b5c04b6933a0', 'type': 'access', 'sub': '666dbb8b8b73292fe0051d96', 'nbf': 1718467467, 'csrf': '048e00d8-b949-4e51-9b2a-219a003d09e0', 'exp': 1718468367, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467467, 'jti': '52b61e6b-22e5-44bd-8596-8c7cf719577d', 'type': 'access', 'sub': '666dbb8b8b73292fe0051d98', 'nbf': 1718467467, 'csrf': 'bd5a4a9c-f1b5-45f1-85ce-dee5054f7763', 'exp': 1718468367, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467510, 'jti': '1af330c4-2136-4645-be88-af4380740ad8', 'type': 'access', 'sub': '666dbbb68217d39a6c3b370f', 'nbf': 1718467510, 'csrf': '5cc70767-e39b-4595-a902-e446faeee8e6', 'exp': 1718468410, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666dbbb68217d39a6c3b370f') email='test@test.com' password='__hash__scrypt:32768:8:1$EMKvfWLab0OUF2cT$550e2e49b6c00be91af65c96809ca5da02e087e97bab0d707ff3312d90ebd5b1f72cc1c6d23f02712fed82457e35a0db48b9f51a58fc06ef398ed00b3f170a96' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467510, 'jti': '5d6c84b4-bfa6-476f-a5dd-5a8ec1f20ccb', 'type': 'access', 'sub': '666dbbb68217d39a6c3b3714', 'nbf': 1718467510, 'csrf': 'f42646bf-6151-48f2-b06a-4b726ac22e4d', 'exp': 1718468410, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666dbbb68217d39a6c3b3714') email='test@test.com' password='__hash__scrypt:32768:8:1$gnImrMOCSaD8KIvi$c5f6806a272d2beba2c742d8e8d896926f5e2223b3e85c505bf8576c4e37e324bf7c10834fb2b83d8e9fab14fc1ff6fff0116f7026a19ca1c38cb6756248673c' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467510, 'jti': 'e8e21c36-03a6-497a-9701-2205d45e7187', 'type': 'access', 'sub': '666dbbb68217d39a6c3b3717', 'nbf': 1718467510, 'csrf': '8ef060e3-0d2d-43ed-92b8-a7b70d92cd1a', 'exp': 1718468410, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666dbbb68217d39a6c3b3717') email='test@test.com' password='__hash__scrypt:32768:8:1$YzM8JLCTmPssOK14$a0f86b19808b70145d49e9245f9bd2dd2e7d1c6a6da534bf6c8115e1bd14f4edee0505466265afee062edb5d48a92820baae9303d58a855ba16f6790f03fcc5b' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467511, 'jti': 'e7a06210-da75-418d-857d-026594ea71b8', 'type': 'access', 'sub': '666dbbb78217d39a6c3b3723', 'nbf': 1718467511, 'csrf': '382ad9eb-66ed-4b0f-9a73-fa55546759c6', 'exp': 1718468411, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbb78217d39a6c3b3723'), email='admin@test.com', password='__hash__scrypt:32768:8:1$ykFMIwJsrrolG5eR$6f8a781a374921bf54fb697545d6564995b3696eec94a5a70f3cacaaad460bfa86dbf09c84404b591a1b6d26f1a9b518049e15a1f79d7cb5b166f6a85ac06df3', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467511, 'jti': 'e83a999f-fbea-492a-8a67-68699aab8a7d', 'type': 'access', 'sub': '666dbbb78217d39a6c3b3726', 'nbf': 1718467511, 'csrf': 'e86365db-a282-4efa-a3dc-e481237e3eea', 'exp': 1718468411, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbb78217d39a6c3b3726'), email='admin@test.com', password='__hash__scrypt:32768:8:1$bAkHrqxtmGLYeUQ8$73eff9f81eeb7d18bf1de4acfd49dcb0807da7d82f460f884cf267cfe06bd42406477b38c4ff7ddc533964fe002b3fab7c31c24602e2c03e05182bb9ad372557', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467512, 'jti': '4fe7deda-ce5c-4046-b44c-a3965b44b640', 'type': 'access', 'sub': '666dbbb78217d39a6c3b3728', 'nbf': 1718467512, 'csrf': 'a0441aac-acd6-4aa9-be1c-b98d6c08f89e', 'exp': 1718468412, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbb78217d39a6c3b3728'), email='admin@test.com', password='__hash__scrypt:32768:8:1$5YlfU0v1PJaLQcb3$0957a45e09e88843088b16b14df98c79d9d3db75de13fb00ae202774544a67d517e617cb30cc76825dcc5da5717f696c52c41667507392faf75a2ff6537c2cdc', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467512, 'jti': '369300d0-7c27-4209-9fae-f44b8204bb68', 'type': 'access', 'sub': '666dbbb88217d39a6c3b372a', 'nbf': 1718467512, 'csrf': 'd45d7088-54a4-4890-9c68-32534aea1298', 'exp': 1718468412, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbb88217d39a6c3b372a'), email='admin@test.com', password='__hash__scrypt:32768:8:1$T3ga4zISBqjRWDL9$e8bfda57b060cbc7fb36c4a2f02289fa35d0dc3d867e505ab669da5d3e4e259432e034e1249f991fcd4b8b3a338b21f0406262551f0d22b7a7e21748ca475dfd', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467512, 'jti': '9d6721e2-9f40-4a40-81c8-71524b219314', 'type': 'access', 'sub': '666dbbb88217d39a6c3b372c', 'nbf': 1718467512, 'csrf': '968e7ff9-4290-444e-9dcd-0cf414064cc9', 'exp': 1718468412, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbb88217d39a6c3b372c'), email='admin@test.com', password='__hash__scrypt:32768:8:1$qyLv1uwlFgRe8PoF$d10d636510692dbced0cd85f5ded84ced7f5950f867888d590187cca2ea77b03c1dad098eb5a54132b28704ca84767e50c46c40359e19173ed1b305485fb48ee', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467512, 'jti': '846f38e4-70ea-42d4-b21a-9a9ef2fad420', 'type': 'access', 'sub': '666dbbb88217d39a6c3b372e', 'nbf': 1718467512, 'csrf': '9ab5287d-617a-484c-b458-e20c79b43cb3', 'exp': 1718468412, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbb88217d39a6c3b372e'), email='admin@test.com', password='__hash__scrypt:32768:8:1$rq4lpIEmLK5P6SFt$92fa7fbd2da3e5a8603a39d939f788908b2422cde57ba026f85654c240850ad2ff10c3f6410f95a8cadf87a764c8e3b1995437c2f66ed70012ce222bb711d411', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467512, 'jti': '516858b3-d5c6-4488-8a9f-0f76ed3799f3', 'type': 'access', 'sub': '666dbbb88217d39a6c3b3730', 'nbf': 1718467512, 'csrf': '95201064-12e6-4f05-b05a-b2e8f5524714', 'exp': 1718468412, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbb88217d39a6c3b3730'), email='admin@test.com', password='__hash__scrypt:32768:8:1$PwaWSX2ArhobAYoV$d2a5003c22c1f76037a668cce9fcc40d4175149c341dddde55bdff427371e93efe17e4cdfc9bca887325fe9584ed9b765b560284aa33c3d3e8e3bd1d6d770e25', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467512, 'jti': '516858b3-d5c6-4488-8a9f-0f76ed3799f3', 'type': 'access', 'sub': '666dbbb88217d39a6c3b3730', 'nbf': 1718467512, 'csrf': '95201064-12e6-4f05-b05a-b2e8f5524714', 'exp': 1718468412, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbb88217d39a6c3b3730'), email='admin@test.com', password='__hash__scrypt:32768:8:1$PwaWSX2ArhobAYoV$d2a5003c22c1f76037a668cce9fcc40d4175149c341dddde55bdff427371e93efe17e4cdfc9bca887325fe9584ed9b765b560284aa33c3d3e8e3bd1d6d770e25', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:Public Official already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 33, in create_public_official
    public_official = public_official_service.create_public_official(public_official)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\publicofficial_data_manager_mongodb.py", line 14, in create_public_official
    raise ObjectAlreadyExistsException("Public Official already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: Public Official already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467512, 'jti': 'a7fd4159-717c-40d2-b990-c1dfa72d38e0', 'type': 'access', 'sub': '666dbbb88217d39a6c3b3733', 'nbf': 1718467512, 'csrf': '7906ad87-5841-40eb-8eb6-97ebf94e0718', 'exp': 1718468412, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbb88217d39a6c3b3733'), email='admin@test.com', password='__hash__scrypt:32768:8:1$AS7Ynpk0a6F9xVgG$1f4fbea22dfa0da2fe1cd46be3fa7c11c783c8dbdb92a0f10cb15b592eb67c8782647934e1ed5b913c12a164ba86bea97a3b14ca819299559e752035ffb146d1', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467512, 'jti': 'a7fd4159-717c-40d2-b990-c1dfa72d38e0', 'type': 'access', 'sub': '666dbbb88217d39a6c3b3733', 'nbf': 1718467512, 'csrf': '7906ad87-5841-40eb-8eb6-97ebf94e0718', 'exp': 1718468412, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbb88217d39a6c3b3733'), email='admin@test.com', password='__hash__scrypt:32768:8:1$AS7Ynpk0a6F9xVgG$1f4fbea22dfa0da2fe1cd46be3fa7c11c783c8dbdb92a0f10cb15b592eb67c8782647934e1ed5b913c12a164ba86bea97a3b14ca819299559e752035ffb146d1', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467512, 'jti': 'a7fd4159-717c-40d2-b990-c1dfa72d38e0', 'type': 'access', 'sub': '666dbbb88217d39a6c3b3733', 'nbf': 1718467512, 'csrf': '7906ad87-5841-40eb-8eb6-97ebf94e0718', 'exp': 1718468412, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbb88217d39a6c3b3733'), email='admin@test.com', password='__hash__scrypt:32768:8:1$AS7Ynpk0a6F9xVgG$1f4fbea22dfa0da2fe1cd46be3fa7c11c783c8dbdb92a0f10cb15b592eb67c8782647934e1ed5b913c12a164ba86bea97a3b14ca819299559e752035ffb146d1', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467512, 'jti': 'a7fd4159-717c-40d2-b990-c1dfa72d38e0', 'type': 'access', 'sub': '666dbbb88217d39a6c3b3733', 'nbf': 1718467512, 'csrf': '7906ad87-5841-40eb-8eb6-97ebf94e0718', 'exp': 1718468412, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467513, 'jti': 'b9d2288f-0cd5-4a04-b327-f8f100ef8c47', 'type': 'access', 'sub': '666dbbb98217d39a6c3b3738', 'nbf': 1718467513, 'csrf': 'c90d6612-eadd-4606-93f6-bf98aa8ed655', 'exp': 1718468413, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbb98217d39a6c3b3738'), email='admin@test.com', password='__hash__scrypt:32768:8:1$DMvFxJlPdvRUGLbd$4fefc041e3c2c13002e2785a88a51f50bb4477fdaffbdc4ae5b5e2a1b00de56a16bcceac8f176f7608b060314ccffbb24f2ee6f8501212f935cbab51bf1d3b97', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467513, 'jti': 'b9d2288f-0cd5-4a04-b327-f8f100ef8c47', 'type': 'access', 'sub': '666dbbb98217d39a6c3b3738', 'nbf': 1718467513, 'csrf': 'c90d6612-eadd-4606-93f6-bf98aa8ed655', 'exp': 1718468413, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbb98217d39a6c3b3738'), email='admin@test.com', password='__hash__scrypt:32768:8:1$DMvFxJlPdvRUGLbd$4fefc041e3c2c13002e2785a88a51f50bb4477fdaffbdc4ae5b5e2a1b00de56a16bcceac8f176f7608b060314ccffbb24f2ee6f8501212f935cbab51bf1d3b97', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467513, 'jti': 'b9d2288f-0cd5-4a04-b327-f8f100ef8c47', 'type': 'access', 'sub': '666dbbb98217d39a6c3b3738', 'nbf': 1718467513, 'csrf': 'c90d6612-eadd-4606-93f6-bf98aa8ed655', 'exp': 1718468413, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbb98217d39a6c3b3738'), email='admin@test.com', password='__hash__scrypt:32768:8:1$DMvFxJlPdvRUGLbd$4fefc041e3c2c13002e2785a88a51f50bb4477fdaffbdc4ae5b5e2a1b00de56a16bcceac8f176f7608b060314ccffbb24f2ee6f8501212f935cbab51bf1d3b97', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467513, 'jti': 'd89b5f45-c32f-42d5-bf43-8d548cc4eaea', 'type': 'access', 'sub': '666dbbb98217d39a6c3b373c', 'nbf': 1718467513, 'csrf': '787544a1-0cf1-41b2-abe7-f337262f8807', 'exp': 1718468413, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467513, 'jti': 'c115bd2a-92b3-4df9-8c9f-cb0efbaa9220', 'type': 'access', 'sub': '666dbbb98217d39a6c3b373e', 'nbf': 1718467513, 'csrf': '1cfb2e03-80c5-4564-be5b-d928e6e9ded0', 'exp': 1718468413, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbb98217d39a6c3b373e'), email='admin@test.com', password='__hash__scrypt:32768:8:1$fh6aDQRzJ5iNoO04$ca3d0b098971748c67ff3a7d9c5599fe95853dc46de7f231b2e0869c686ed6be2bb32c0338436aa1e70a8b5dd97ae5c227420061038f4dd5c123ca681b3fad86', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467513, 'jti': 'c115bd2a-92b3-4df9-8c9f-cb0efbaa9220', 'type': 'access', 'sub': '666dbbb98217d39a6c3b373e', 'nbf': 1718467513, 'csrf': '1cfb2e03-80c5-4564-be5b-d928e6e9ded0', 'exp': 1718468413, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbb98217d39a6c3b373e'), email='admin@test.com', password='__hash__scrypt:32768:8:1$fh6aDQRzJ5iNoO04$ca3d0b098971748c67ff3a7d9c5599fe95853dc46de7f231b2e0869c686ed6be2bb32c0338436aa1e70a8b5dd97ae5c227420061038f4dd5c123ca681b3fad86', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467513, 'jti': 'c115bd2a-92b3-4df9-8c9f-cb0efbaa9220', 'type': 'access', 'sub': '666dbbb98217d39a6c3b373e', 'nbf': 1718467513, 'csrf': '1cfb2e03-80c5-4564-be5b-d928e6e9ded0', 'exp': 1718468413, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbb98217d39a6c3b373e'), email='admin@test.com', password='__hash__scrypt:32768:8:1$fh6aDQRzJ5iNoO04$ca3d0b098971748c67ff3a7d9c5599fe95853dc46de7f231b2e0869c686ed6be2bb32c0338436aa1e70a8b5dd97ae5c227420061038f4dd5c123ca681b3fad86', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467513, 'jti': '3b3c5fa2-2aff-46c9-9c88-eb9befea60da', 'type': 'access', 'sub': '666dbbb98217d39a6c3b3744', 'nbf': 1718467513, 'csrf': 'a5428c6d-7540-42c2-90bb-303a0d0aee8e', 'exp': 1718468413, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbb98217d39a6c3b3744'), email='admin@test.com', password='__hash__scrypt:32768:8:1$PmG4G4mXphW5nSn4$eab67d37e11f9563108bcc27cce64352aa7f7731e07d03bd643ca3d0cc1e3802b7c49370e7d4d8ea541cb34b4d8d7eafa995157d8fba7761f94551cc23ab5227', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting public official by ID 666dbbb98217d39a6c3b3745
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467514, 'jti': '93af4265-932a-4a83-b9d4-b172020d2f70', 'type': 'access', 'sub': '666dbbb98217d39a6c3b3749', 'nbf': 1718467514, 'csrf': '154db6e9-2dca-4800-90bd-7bb523c1be16', 'exp': 1718468414, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbb98217d39a6c3b3749'), email='admin@test.com', password='__hash__scrypt:32768:8:1$TDZzfDsoV5RuLrqs$1b92f6410a087da55c6edddb40534aacd256b6bdead650cc9fe215c33f4fcbf90a8ee6db5e048fccbc76f69e2a636b884fc10eff2db184b3258987897a3a9d2d', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467514, 'jti': '93af4265-932a-4a83-b9d4-b172020d2f70', 'type': 'access', 'sub': '666dbbb98217d39a6c3b3749', 'nbf': 1718467514, 'csrf': '154db6e9-2dca-4800-90bd-7bb523c1be16', 'exp': 1718468414, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dbbba8217d39a6c3b374a')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467514, 'jti': '00ee1bfd-b3f4-4398-82cf-eebf062a4de1', 'type': 'access', 'sub': '666dbbba8217d39a6c3b374c', 'nbf': 1718467514, 'csrf': 'c07440d2-a47c-4a9f-8453-b272d397b62c', 'exp': 1718468414, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbba8217d39a6c3b374c'), email='admin@test.com', password='__hash__scrypt:32768:8:1$cGptsfgNMwMbc0pV$154de60a2950548bc0a445a92a329fa1f7c3cba706723838854cad00add40b2c7c3df7d48aaa7c4a642a411d79d606fb4cd78f0cf3593c7f3724998f22d77720', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467514, 'jti': '00ee1bfd-b3f4-4398-82cf-eebf062a4de1', 'type': 'access', 'sub': '666dbbba8217d39a6c3b374c', 'nbf': 1718467514, 'csrf': 'c07440d2-a47c-4a9f-8453-b272d397b62c', 'exp': 1718468414, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dbbba8217d39a6c3b374d')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 81, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467514, 'jti': 'd9b1d907-fb57-40d4-9aa3-3152176094c4', 'type': 'access', 'sub': '666dbbba8217d39a6c3b374f', 'nbf': 1718467514, 'csrf': '449b51b2-07f1-41da-b4ac-1b00c21c8a94', 'exp': 1718468414, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467514, 'jti': '72be6d26-75cd-4ad5-ae0b-130580a52ffc', 'type': 'access', 'sub': '666dbbba8217d39a6c3b3751', 'nbf': 1718467514, 'csrf': '541820f6-22cc-4235-97ac-599b16f78770', 'exp': 1718468414, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbba8217d39a6c3b3751'), email='admin@test.com', password='__hash__scrypt:32768:8:1$HVIV39gYqv0CLSPi$1737d1e4f71cdc80b71a699f5bdf6c41f621b86217c3f74ee32e4336afc9f1edcb7a94a52670c5a619702c12efea5f0057c364ea67c5709902e64a614beca7c7', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467514, 'jti': '72be6d26-75cd-4ad5-ae0b-130580a52ffc', 'type': 'access', 'sub': '666dbbba8217d39a6c3b3751', 'nbf': 1718467514, 'csrf': '541820f6-22cc-4235-97ac-599b16f78770', 'exp': 1718468414, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dbbba8217d39a6c3b3752')
INFO:app.extensions:po_data={'name_eng': 'newname123', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 81, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467514, 'jti': '9f57ba99-7c0d-4db6-8dcf-312194ebb69a', 'type': 'access', 'sub': '666dbbba8217d39a6c3b3754', 'nbf': 1718467514, 'csrf': '59e29e01-ee48-4d9e-a4ab-b3231c249395', 'exp': 1718468414, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbba8217d39a6c3b3754'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Nocyp9cbIQLrhPon$d89f071c10af7caafc0befeba7fe5923617720ab88bb550d9d0bdd1190371c990c5388aee511df4c92c57350878bf6e880181d460a2a6298d20aaad96a1ff000', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467514, 'jti': '9f57ba99-7c0d-4db6-8dcf-312194ebb69a', 'type': 'access', 'sub': '666dbbba8217d39a6c3b3754', 'nbf': 1718467514, 'csrf': '59e29e01-ee48-4d9e-a4ab-b3231c249395', 'exp': 1718468414, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dbbba8217d39a6c3b3755')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטי134man', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 81, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467515, 'jti': '5b7cfa2c-b0b3-4f18-af56-59c41f99cedc', 'type': 'access', 'sub': '666dbbba8217d39a6c3b3757', 'nbf': 1718467515, 'csrf': 'a32ca3dc-ba86-4ec8-9f55-6df6f9292827', 'exp': 1718468415, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbba8217d39a6c3b3757'), email='admin@test.com', password='__hash__scrypt:32768:8:1$4WUbTHI9RKB1Zw2W$cb1611d08dc7612a8eca264b18612d8a6566f0179c3cde457c750ac2e420c5a3c8add92a63a053d303d009e6c735adb568b927bcdd0e4e661088d637beb9eb31', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467515, 'jti': '5b7cfa2c-b0b3-4f18-af56-59c41f99cedc', 'type': 'access', 'sub': '666dbbba8217d39a6c3b3757', 'nbf': 1718467515, 'csrf': 'a32ca3dc-ba86-4ec8-9f55-6df6f9292827', 'exp': 1718468415, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dbbbb8217d39a6c3b3758')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'myposition123', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 81, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467515, 'jti': '8c5d5902-6356-46b1-9141-9096cb9e14cd', 'type': 'access', 'sub': '666dbbbb8217d39a6c3b375a', 'nbf': 1718467515, 'csrf': 'ceabc171-e8d6-4359-bd38-c06231d91577', 'exp': 1718468415, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbbbb8217d39a6c3b375a'), email='admin@test.com', password='__hash__scrypt:32768:8:1$Lpj96jnbqZgsNycw$db0ec7acdc7762afbb92ff8582314e28965b3fb5d7c952cf318695c725878d985c299ecfdae5d47f3e842cff31e56e87f5b0ad6882572def805d21eb814e9f07', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467515, 'jti': '8c5d5902-6356-46b1-9141-9096cb9e14cd', 'type': 'access', 'sub': '666dbbbb8217d39a6c3b375a', 'nbf': 1718467515, 'csrf': 'ceabc171-e8d6-4359-bd38-c06231d91577', 'exp': 1718468415, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dbbbb8217d39a6c3b375b')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'myspace': 'myhandle', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 81, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467515, 'jti': '44a71a88-e2f5-420d-91f1-7e64a75d68e7', 'type': 'access', 'sub': '666dbbbb8217d39a6c3b3760', 'nbf': 1718467515, 'csrf': '2316a6c0-2842-4567-911d-06afce36f58b', 'exp': 1718468415, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467515, 'jti': 'c8448675-1537-4ba3-9fef-3d15fec80a81', 'type': 'access', 'sub': '666dbbbb8217d39a6c3b3765', 'nbf': 1718467515, 'csrf': '61a6c338-0aed-4886-a9c9-14cba7193830', 'exp': 1718468415, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467516, 'jti': '0d9eedca-5bb0-48d3-9395-4faa07196720', 'type': 'access', 'sub': '666dbbbc8217d39a6c3b376a', 'nbf': 1718467516, 'csrf': '2b0c5c20-f05e-4bc8-aeae-c5ee38a9e0b7', 'exp': 1718468416, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467516, 'jti': 'd054819e-bcb4-4d5c-be36-d51bf150f68a', 'type': 'access', 'sub': '666dbbbc8217d39a6c3b376f', 'nbf': 1718467516, 'csrf': '49988d27-03d0-40ec-a1e0-e73401eafda7', 'exp': 1718468416, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467516, 'jti': '304ec223-d61b-4032-a766-d2c70e562e87', 'type': 'access', 'sub': '666dbbbc8217d39a6c3b3771', 'nbf': 1718467516, 'csrf': 'ab50d80e-2992-4174-a72f-e845a4bf084b', 'exp': 1718468416, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467517, 'jti': '1c412649-3067-4953-9721-80c0e872b530', 'type': 'access', 'sub': '666dbbbd8217d39a6c3b3773', 'nbf': 1718467517, 'csrf': '2bf33778-89d6-47ec-85a9-f8491d12be40', 'exp': 1718468417, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467517, 'jti': '26cd0a9b-d5c1-4e12-8339-bc0b1c866c75', 'type': 'access', 'sub': '666dbbbd8217d39a6c3b3775', 'nbf': 1718467517, 'csrf': '4e25c738-9fbb-440d-8fb1-8109836ab77a', 'exp': 1718468417, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467517, 'jti': 'e1a91082-b83a-489b-ac65-28a6cbd08ab7', 'type': 'access', 'sub': '666dbbbd8217d39a6c3b3777', 'nbf': 1718467517, 'csrf': 'c3048774-91fd-48ab-9c94-c6487e210599', 'exp': 1718468417, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467517, 'jti': 'e1a91082-b83a-489b-ac65-28a6cbd08ab7', 'type': 'access', 'sub': '666dbbbd8217d39a6c3b3777', 'nbf': 1718467517, 'csrf': 'c3048774-91fd-48ab-9c94-c6487e210599', 'exp': 1718468417, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467517, 'jti': 'e1a91082-b83a-489b-ac65-28a6cbd08ab7', 'type': 'access', 'sub': '666dbbbd8217d39a6c3b3777', 'nbf': 1718467517, 'csrf': 'c3048774-91fd-48ab-9c94-c6487e210599', 'exp': 1718468417, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467517, 'jti': 'e1a91082-b83a-489b-ac65-28a6cbd08ab7', 'type': 'access', 'sub': '666dbbbd8217d39a6c3b3777', 'nbf': 1718467517, 'csrf': 'c3048774-91fd-48ab-9c94-c6487e210599', 'exp': 1718468417, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467517, 'jti': 'e1a91082-b83a-489b-ac65-28a6cbd08ab7', 'type': 'access', 'sub': '666dbbbd8217d39a6c3b3777', 'nbf': 1718467517, 'csrf': 'c3048774-91fd-48ab-9c94-c6487e210599', 'exp': 1718468417, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467517, 'jti': 'e1a91082-b83a-489b-ac65-28a6cbd08ab7', 'type': 'access', 'sub': '666dbbbd8217d39a6c3b3777', 'nbf': 1718467517, 'csrf': 'c3048774-91fd-48ab-9c94-c6487e210599', 'exp': 1718468417, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467518, 'jti': 'a6f0cc55-b687-48a2-b6bc-bc40a9bcda90', 'type': 'access', 'sub': '666dbbbe8217d39a6c3b3779', 'nbf': 1718467518, 'csrf': 'c6df9979-b57d-48c5-9a5e-e559098e048d', 'exp': 1718468418, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467518, 'jti': 'a6f0cc55-b687-48a2-b6bc-bc40a9bcda90', 'type': 'access', 'sub': '666dbbbe8217d39a6c3b3779', 'nbf': 1718467518, 'csrf': 'c6df9979-b57d-48c5-9a5e-e559098e048d', 'exp': 1718468418, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467518, 'jti': 'a6f0cc55-b687-48a2-b6bc-bc40a9bcda90', 'type': 'access', 'sub': '666dbbbe8217d39a6c3b3779', 'nbf': 1718467518, 'csrf': 'c6df9979-b57d-48c5-9a5e-e559098e048d', 'exp': 1718468418, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467518, 'jti': 'a6f0cc55-b687-48a2-b6bc-bc40a9bcda90', 'type': 'access', 'sub': '666dbbbe8217d39a6c3b3779', 'nbf': 1718467518, 'csrf': 'c6df9979-b57d-48c5-9a5e-e559098e048d', 'exp': 1718468418, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467518, 'jti': 'a6f0cc55-b687-48a2-b6bc-bc40a9bcda90', 'type': 'access', 'sub': '666dbbbe8217d39a6c3b3779', 'nbf': 1718467518, 'csrf': 'c6df9979-b57d-48c5-9a5e-e559098e048d', 'exp': 1718468418, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467518, 'jti': 'a6f0cc55-b687-48a2-b6bc-bc40a9bcda90', 'type': 'access', 'sub': '666dbbbe8217d39a6c3b3779', 'nbf': 1718467518, 'csrf': 'c6df9979-b57d-48c5-9a5e-e559098e048d', 'exp': 1718468418, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467518, 'jti': '97c8d23f-97a3-4456-8e58-3fd30c1cf3d2', 'type': 'access', 'sub': '666dbbbe8217d39a6c3b377b', 'nbf': 1718467518, 'csrf': 'a3532dc1-9c4c-4f07-afac-1df7c08d38f3', 'exp': 1718468418, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718467518, 'jti': 'cec6c285-347f-4cf8-81ee-46937d92862e', 'type': 'access', 'sub': '666dbbbe8217d39a6c3b377d', 'nbf': 1718467518, 'csrf': '72a523ad-6462-4f31-b2f0-a92850b79f53', 'exp': 1718468418, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468481, 'jti': '2a7f84bc-18cf-4b26-8419-0ed87c865710', 'type': 'access', 'sub': '666dbf81b32136b267acd27c', 'nbf': 1718468481, 'csrf': '775e8242-45e1-4bd8-b462-56b187c22078', 'exp': 1718469381, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666dbf81b32136b267acd27c') email='test@test.com' password='__hash__scrypt:32768:8:1$d0qbrFmdlOJqPDsb$a03b2cb0655d90de577e3b0d1661a75c98808231244870db125cdffc561fc5901358eb372b138b56b4dec12e0b3f71d6ea30ad0e22a46ab5a08fcc9b6720e997' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468481, 'jti': '200c753b-e985-4e37-ab24-423559a52d68', 'type': 'access', 'sub': '666dbf81b32136b267acd281', 'nbf': 1718468481, 'csrf': '17a5c4c5-daa1-4020-b972-b14859420546', 'exp': 1718469381, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666dbf81b32136b267acd281') email='test@test.com' password='__hash__scrypt:32768:8:1$GlVL09x9JKa4Vu4y$2a95685f29b5b6c426da2f8f60cc267000896f8df5697b1ab7f5013e436e8ec4c394893314fc3a2f32a400e6c280156937c28ee203797826d43659f7db9c1ab0' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468481, 'jti': '6a7bf8a9-c259-48ce-9528-da2edcd64a52', 'type': 'access', 'sub': '666dbf81b32136b267acd284', 'nbf': 1718468481, 'csrf': '4c194a4b-4725-461a-a4b6-5dd7b8b8d16f', 'exp': 1718469381, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666dbf81b32136b267acd284') email='test@test.com' password='__hash__scrypt:32768:8:1$DK04Pu2slKqJDh6c$a7990b047f8b81b475777758580b65d004eebb32e6a8bfc003c8abc6433198ceb97084cce333f26154dec79e205d623cc38a04a8c67816657c7af73775e1f5ef' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468482, 'jti': 'd07166f9-25f9-4d69-8162-02422539f962', 'type': 'access', 'sub': '666dbf82b32136b267acd290', 'nbf': 1718468482, 'csrf': 'f4df372e-3ccd-4eff-9f27-d861eebaffaf', 'exp': 1718469382, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf82b32136b267acd290'), email='admin@test.com', password='__hash__scrypt:32768:8:1$XT9E3IA5s8iO5w05$e6ef83b0e21f3d1f6409f36f858826c51bd56fd65cbed0f4c1d1b0ecf3196bdeb264e208c8315f7e1e9ce2bba386f9c3ab0587cd0929237466d7a32e1fbb4145', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468482, 'jti': '9b05e182-44b2-45e1-a050-281f131dd32a', 'type': 'access', 'sub': '666dbf82b32136b267acd293', 'nbf': 1718468482, 'csrf': '809e81cd-6537-4beb-96f9-aa867df2d111', 'exp': 1718469382, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf82b32136b267acd293'), email='admin@test.com', password='__hash__scrypt:32768:8:1$OGirU4JaNUgA3KCu$a907a698a2390fa6ac20f0923ee87999c329a879109a626c79fa383043204ec5a5a7d85417fe0597a7a0688383307cbe237b6e47152e1a4f58f756a7d730e216', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468482, 'jti': 'd0915895-5ee0-43f1-ab6d-9ece3cfb9208', 'type': 'access', 'sub': '666dbf82b32136b267acd295', 'nbf': 1718468482, 'csrf': '2a3c8c64-07c9-46f6-985f-c19ec6294dc4', 'exp': 1718469382, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf82b32136b267acd295'), email='admin@test.com', password='__hash__scrypt:32768:8:1$mH5LnbGlpXKfkDeW$bfa39fe146fe1c23dff86af81322b1d4951eec901df325cd50ee3a53e31d872d0c4165a71d1369cf0e4a5b27f5227e0cbb9c7b5691bbd09642f721195ddb8ef5', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468483, 'jti': '856edfca-d0d3-47cc-831a-dd730e4ea7a0', 'type': 'access', 'sub': '666dbf83b32136b267acd297', 'nbf': 1718468483, 'csrf': '0b8c30c4-07ec-4303-9acc-e3bbb156d41c', 'exp': 1718469383, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf83b32136b267acd297'), email='admin@test.com', password='__hash__scrypt:32768:8:1$SsPPUXCCvm90s3aO$46bc45a362021a95644dd419a8c215b4f91a1693e33d0b84efb69507f3ab3dc014125df7922f311c20f6ff30ae15c527ac48a042978247a4ddec7ed435fa27aa', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468483, 'jti': 'cb076dab-bd69-4f9c-86da-4142d31d9a6c', 'type': 'access', 'sub': '666dbf83b32136b267acd299', 'nbf': 1718468483, 'csrf': 'f587df95-fd0d-4e35-ac95-b5c175fb5a89', 'exp': 1718469383, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf83b32136b267acd299'), email='admin@test.com', password='__hash__scrypt:32768:8:1$ROmhSOsOIE5XJmVX$5b8d3eda5e8860b237e3940b11df7b76d56c8021e9a27a0777dffe7bf4133ecfe09ca3fb6f5f83ff963dc40e90856b6a184cf27c677b45920e8473d81c075fb3', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468483, 'jti': 'f6cf8179-7649-4a14-870e-5d268dbc62f5', 'type': 'access', 'sub': '666dbf83b32136b267acd29b', 'nbf': 1718468483, 'csrf': '4fd68302-1c6e-41c1-9b88-06b2d79036ac', 'exp': 1718469383, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf83b32136b267acd29b'), email='admin@test.com', password='__hash__scrypt:32768:8:1$ixirtqsau4DbzSVD$278815f64d921d24e761ec92523f9c30b70eb6a284f9828466bb45a5a247e0d1733c40471b33dc137453fbfd75d0900840a07c6efc9c817e5802dafc8861c9e0', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468483, 'jti': '31f14635-5ee7-4860-99d3-f55dfe4603ee', 'type': 'access', 'sub': '666dbf83b32136b267acd29d', 'nbf': 1718468483, 'csrf': '2ccb5702-a24f-4419-b1d7-1c7c378f636a', 'exp': 1718469383, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf83b32136b267acd29d'), email='admin@test.com', password='__hash__scrypt:32768:8:1$X65cfwXXHRWIZRyH$750beb58bf84b82175a5f719a009c27f1cd25165457c27fd81fad34e28a15aed74421a4f8b45fd1d1c66413fe15cd26c0aaf044838ae038e8446b2a66d9c15aa', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468483, 'jti': '31f14635-5ee7-4860-99d3-f55dfe4603ee', 'type': 'access', 'sub': '666dbf83b32136b267acd29d', 'nbf': 1718468483, 'csrf': '2ccb5702-a24f-4419-b1d7-1c7c378f636a', 'exp': 1718469383, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf83b32136b267acd29d'), email='admin@test.com', password='__hash__scrypt:32768:8:1$X65cfwXXHRWIZRyH$750beb58bf84b82175a5f719a009c27f1cd25165457c27fd81fad34e28a15aed74421a4f8b45fd1d1c66413fe15cd26c0aaf044838ae038e8446b2a66d9c15aa', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:Public Official already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 33, in create_public_official
    public_official = public_official_service.create_public_official(public_official)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\publicofficial_data_manager_mongodb.py", line 14, in create_public_official
    raise ObjectAlreadyExistsException("Public Official already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: Public Official already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468483, 'jti': '2b258f6c-b679-42da-ad48-3994c1fd31fd', 'type': 'access', 'sub': '666dbf83b32136b267acd2a0', 'nbf': 1718468483, 'csrf': 'f725c3dd-e8ed-4411-9a2f-dcbd92ae333a', 'exp': 1718469383, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf83b32136b267acd2a0'), email='admin@test.com', password='__hash__scrypt:32768:8:1$S4iCCDwoc8x0eB6G$42dc52ec9ddd7ad9ca294cd065a9b1cb9fea5e1b0e406d4ec851a0ffee418062712c62caffaa176bd703248a95e2aea0f7b9194bd4c5dea1d9907c7cdaa6009e', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468483, 'jti': '2b258f6c-b679-42da-ad48-3994c1fd31fd', 'type': 'access', 'sub': '666dbf83b32136b267acd2a0', 'nbf': 1718468483, 'csrf': 'f725c3dd-e8ed-4411-9a2f-dcbd92ae333a', 'exp': 1718469383, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf83b32136b267acd2a0'), email='admin@test.com', password='__hash__scrypt:32768:8:1$S4iCCDwoc8x0eB6G$42dc52ec9ddd7ad9ca294cd065a9b1cb9fea5e1b0e406d4ec851a0ffee418062712c62caffaa176bd703248a95e2aea0f7b9194bd4c5dea1d9907c7cdaa6009e', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468483, 'jti': '2b258f6c-b679-42da-ad48-3994c1fd31fd', 'type': 'access', 'sub': '666dbf83b32136b267acd2a0', 'nbf': 1718468483, 'csrf': 'f725c3dd-e8ed-4411-9a2f-dcbd92ae333a', 'exp': 1718469383, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf83b32136b267acd2a0'), email='admin@test.com', password='__hash__scrypt:32768:8:1$S4iCCDwoc8x0eB6G$42dc52ec9ddd7ad9ca294cd065a9b1cb9fea5e1b0e406d4ec851a0ffee418062712c62caffaa176bd703248a95e2aea0f7b9194bd4c5dea1d9907c7cdaa6009e', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468483, 'jti': '2b258f6c-b679-42da-ad48-3994c1fd31fd', 'type': 'access', 'sub': '666dbf83b32136b267acd2a0', 'nbf': 1718468483, 'csrf': 'f725c3dd-e8ed-4411-9a2f-dcbd92ae333a', 'exp': 1718469383, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468484, 'jti': '12ecb910-07dc-4ca9-8f06-0ced6ab23604', 'type': 'access', 'sub': '666dbf83b32136b267acd2a5', 'nbf': 1718468484, 'csrf': '35fb514b-d8c1-4559-9033-e812201f8c5c', 'exp': 1718469384, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf83b32136b267acd2a5'), email='admin@test.com', password='__hash__scrypt:32768:8:1$vjxVeRO3lJHKuYx2$042de7e1f7a9490ce616d96554c828328f9bc305df7a20f37386a0ec14da829d51f2d0d30e9d2ba7ee09135ecb9c23ae250c102ef9f797d85085b5785006c469', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468484, 'jti': '12ecb910-07dc-4ca9-8f06-0ced6ab23604', 'type': 'access', 'sub': '666dbf83b32136b267acd2a5', 'nbf': 1718468484, 'csrf': '35fb514b-d8c1-4559-9033-e812201f8c5c', 'exp': 1718469384, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf83b32136b267acd2a5'), email='admin@test.com', password='__hash__scrypt:32768:8:1$vjxVeRO3lJHKuYx2$042de7e1f7a9490ce616d96554c828328f9bc305df7a20f37386a0ec14da829d51f2d0d30e9d2ba7ee09135ecb9c23ae250c102ef9f797d85085b5785006c469', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468484, 'jti': '12ecb910-07dc-4ca9-8f06-0ced6ab23604', 'type': 'access', 'sub': '666dbf83b32136b267acd2a5', 'nbf': 1718468484, 'csrf': '35fb514b-d8c1-4559-9033-e812201f8c5c', 'exp': 1718469384, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf83b32136b267acd2a5'), email='admin@test.com', password='__hash__scrypt:32768:8:1$vjxVeRO3lJHKuYx2$042de7e1f7a9490ce616d96554c828328f9bc305df7a20f37386a0ec14da829d51f2d0d30e9d2ba7ee09135ecb9c23ae250c102ef9f797d85085b5785006c469', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468484, 'jti': '03983618-92fb-4ca7-98f9-7b8b7ddf9775', 'type': 'access', 'sub': '666dbf84b32136b267acd2a9', 'nbf': 1718468484, 'csrf': '1e9de629-156d-43d8-9569-2d780f4e94b0', 'exp': 1718469384, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468484, 'jti': '70e58ab3-7adf-45a9-90a6-721d350cf9cd', 'type': 'access', 'sub': '666dbf84b32136b267acd2ab', 'nbf': 1718468484, 'csrf': '736972ef-5001-4a17-b83e-9f5aa0a3875a', 'exp': 1718469384, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf84b32136b267acd2ab'), email='admin@test.com', password='__hash__scrypt:32768:8:1$c74wOQcAXb9soJwa$7314cedcea19680fd89f06d359b8bc42511f30762608c8ac542145fb1b5a73689b218f953c9a36f513634a6f936fe7838abfce40ab3b4c303addeb91b690b7e3', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468484, 'jti': '70e58ab3-7adf-45a9-90a6-721d350cf9cd', 'type': 'access', 'sub': '666dbf84b32136b267acd2ab', 'nbf': 1718468484, 'csrf': '736972ef-5001-4a17-b83e-9f5aa0a3875a', 'exp': 1718469384, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf84b32136b267acd2ab'), email='admin@test.com', password='__hash__scrypt:32768:8:1$c74wOQcAXb9soJwa$7314cedcea19680fd89f06d359b8bc42511f30762608c8ac542145fb1b5a73689b218f953c9a36f513634a6f936fe7838abfce40ab3b4c303addeb91b690b7e3', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468484, 'jti': '70e58ab3-7adf-45a9-90a6-721d350cf9cd', 'type': 'access', 'sub': '666dbf84b32136b267acd2ab', 'nbf': 1718468484, 'csrf': '736972ef-5001-4a17-b83e-9f5aa0a3875a', 'exp': 1718469384, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf84b32136b267acd2ab'), email='admin@test.com', password='__hash__scrypt:32768:8:1$c74wOQcAXb9soJwa$7314cedcea19680fd89f06d359b8bc42511f30762608c8ac542145fb1b5a73689b218f953c9a36f513634a6f936fe7838abfce40ab3b4c303addeb91b690b7e3', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468484, 'jti': '295ec0e3-3e9c-4e27-826c-8bfc1cb0bdd6', 'type': 'access', 'sub': '666dbf84b32136b267acd2b1', 'nbf': 1718468484, 'csrf': 'd0a4c34f-9b63-4794-b96f-a6e851720cfd', 'exp': 1718469384, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf84b32136b267acd2b1'), email='admin@test.com', password='__hash__scrypt:32768:8:1$0GR3NxLdz2HKZcy4$c663aa689fea391dbd05dc0bae6991bddd7a44663cd784767ffe58ad01856ef534cae15662cbe5f6e3556a7597ed2f86023d10e8f1a7948e9d6bd71b9edb9108', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting public official by ID 666dbf84b32136b267acd2b2
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468484, 'jti': 'f5bcfc7a-6f90-4d14-a4e5-739e62792bbf', 'type': 'access', 'sub': '666dbf84b32136b267acd2b6', 'nbf': 1718468484, 'csrf': '242c2ce3-148a-4032-a593-dc6cc52173fd', 'exp': 1718469384, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf84b32136b267acd2b6'), email='admin@test.com', password='__hash__scrypt:32768:8:1$FrGWblKwS5bUwecx$1104f3cc2e2d22e7fe2a16762b2ef5cff9d998272eb3fa25a95cb9196d6811ba86eda64c33eaad49bc4c505a2169573ecd365da720b6eaafa7199e6dfa85da29', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468484, 'jti': 'f5bcfc7a-6f90-4d14-a4e5-739e62792bbf', 'type': 'access', 'sub': '666dbf84b32136b267acd2b6', 'nbf': 1718468484, 'csrf': '242c2ce3-148a-4032-a593-dc6cc52173fd', 'exp': 1718469384, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dbf84b32136b267acd2b7')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468485, 'jti': 'bf8f1963-6f72-4d76-b5a4-2c4de72705b8', 'type': 'access', 'sub': '666dbf84b32136b267acd2b9', 'nbf': 1718468485, 'csrf': '93e61754-40f3-4201-b913-8119189ea78e', 'exp': 1718469385, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf84b32136b267acd2b9'), email='admin@test.com', password='__hash__scrypt:32768:8:1$FMgUQVG70I2NWzsC$5aabb3acb865fffbb8cf1de445c3df37aea5dfc2bb50e88971dd13fb0d25a012ed33607773764409ef7a3b50cc9dae65ddb8880078a79e0ddfd2ed0516183ea1', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468485, 'jti': 'bf8f1963-6f72-4d76-b5a4-2c4de72705b8', 'type': 'access', 'sub': '666dbf84b32136b267acd2b9', 'nbf': 1718468485, 'csrf': '93e61754-40f3-4201-b913-8119189ea78e', 'exp': 1718469385, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dbf85b32136b267acd2ba')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 81, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468485, 'jti': '67458298-3cb4-4fbd-9db4-2380cff1cbe7', 'type': 'access', 'sub': '666dbf85b32136b267acd2bc', 'nbf': 1718468485, 'csrf': '6d27e737-db89-4730-b10d-c7bbfa9cfb9b', 'exp': 1718469385, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468485, 'jti': '93b2fa06-054d-405a-b9fc-93567d55debb', 'type': 'access', 'sub': '666dbf85b32136b267acd2be', 'nbf': 1718468485, 'csrf': 'eb2c01c6-c2d9-4800-a89e-6ef4bf743ea5', 'exp': 1718469385, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf85b32136b267acd2be'), email='admin@test.com', password='__hash__scrypt:32768:8:1$1JU10DGv6Pxnhrnu$496b51a70e1765f48861bcb92c0afc65a6a79628350d832b1af7813c31d2269d032e789b6ecba4a0d3563174e1ab55e1f41bfcfcca98ebf490bd1565563c3a9b', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468485, 'jti': '93b2fa06-054d-405a-b9fc-93567d55debb', 'type': 'access', 'sub': '666dbf85b32136b267acd2be', 'nbf': 1718468485, 'csrf': 'eb2c01c6-c2d9-4800-a89e-6ef4bf743ea5', 'exp': 1718469385, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dbf85b32136b267acd2bf')
INFO:app.extensions:po_data={'name_eng': 'newname123', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 81, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468485, 'jti': 'e1e02cbc-a607-46b9-bb94-5c07f00f73f1', 'type': 'access', 'sub': '666dbf85b32136b267acd2c1', 'nbf': 1718468485, 'csrf': 'c3815447-8fec-453f-b9c2-7f272cd7edb6', 'exp': 1718469385, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf85b32136b267acd2c1'), email='admin@test.com', password='__hash__scrypt:32768:8:1$9VOhSv8S4q7AQqUK$6cfca49ade2859f2a7c266683bf8f6492a2722c6d2faf27ecfc045b782e3f070b5dae7c60373d7cea58e7fc550e01831a9036bcc4b535aec003e974a9d48fcdc', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468485, 'jti': 'e1e02cbc-a607-46b9-bb94-5c07f00f73f1', 'type': 'access', 'sub': '666dbf85b32136b267acd2c1', 'nbf': 1718468485, 'csrf': 'c3815447-8fec-453f-b9c2-7f272cd7edb6', 'exp': 1718469385, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dbf85b32136b267acd2c2')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטי134man', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 81, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468485, 'jti': 'b2102dba-628b-48b3-a16e-827c7b779570', 'type': 'access', 'sub': '666dbf85b32136b267acd2c4', 'nbf': 1718468485, 'csrf': 'e90329aa-e1a1-4cc0-8dc1-d78450174d64', 'exp': 1718469385, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf85b32136b267acd2c4'), email='admin@test.com', password='__hash__scrypt:32768:8:1$SnBUDIRJthGa4FZw$873c7eaab5548790c0635512193c4a4a73cf9113f03ceb1e48fca172848467f5801edc8b433f438cfdacb6a008517d404d0baff92dee97261d81f39c65aeab4e', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468485, 'jti': 'b2102dba-628b-48b3-a16e-827c7b779570', 'type': 'access', 'sub': '666dbf85b32136b267acd2c4', 'nbf': 1718468485, 'csrf': 'e90329aa-e1a1-4cc0-8dc1-d78450174d64', 'exp': 1718469385, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dbf85b32136b267acd2c5')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'myposition123', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 81, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468486, 'jti': '436bbf09-fcb7-4bce-af8d-b3546f4f871c', 'type': 'access', 'sub': '666dbf85b32136b267acd2c7', 'nbf': 1718468486, 'csrf': '2f4f17fd-cd99-42bd-af4e-02fc86e39992', 'exp': 1718469386, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dbf85b32136b267acd2c7'), email='admin@test.com', password='__hash__scrypt:32768:8:1$jcGco9acVKpe8r2X$155be308bfea8494f090bba44fc876e1774662789e684ba20711028ad0aa15358ddae6f91b9162ecda35b4612227dcd4731d4decf71158a72ef7c06e76221680', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468486, 'jti': '436bbf09-fcb7-4bce-af8d-b3546f4f871c', 'type': 'access', 'sub': '666dbf85b32136b267acd2c7', 'nbf': 1718468486, 'csrf': '2f4f17fd-cd99-42bd-af4e-02fc86e39992', 'exp': 1718469386, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dbf86b32136b267acd2c8')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'myspace': 'myhandle', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 81, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468486, 'jti': '1ac69997-5016-4234-a988-85eca7fb88b1', 'type': 'access', 'sub': '666dbf86b32136b267acd2cd', 'nbf': 1718468486, 'csrf': 'e3a01822-d087-416a-89d1-a2a2b6374810', 'exp': 1718469386, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468486, 'jti': '227a7ae4-0907-447e-842a-927c051fa95f', 'type': 'access', 'sub': '666dbf86b32136b267acd2d2', 'nbf': 1718468486, 'csrf': '72996148-d8fc-4a15-b5ce-2308bb952f84', 'exp': 1718469386, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468487, 'jti': '16c50331-79a1-4576-8b74-b489f4c4bff3', 'type': 'access', 'sub': '666dbf87b32136b267acd2d7', 'nbf': 1718468487, 'csrf': 'e8183ba0-b7a7-4868-9e77-7c7329d267b6', 'exp': 1718469387, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468487, 'jti': 'cecc3a59-7001-46f2-8f97-453ab004d566', 'type': 'access', 'sub': '666dbf87b32136b267acd2dc', 'nbf': 1718468487, 'csrf': '1d053cc4-a76f-462f-bbe3-bc7c25f44fd6', 'exp': 1718469387, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468487, 'jti': 'd5c4cf5b-d951-4ece-825c-02eb3cf35700', 'type': 'access', 'sub': '666dbf87b32136b267acd2de', 'nbf': 1718468487, 'csrf': 'b50f6609-8b4c-4999-9062-056dc5da70f0', 'exp': 1718469387, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468487, 'jti': '2da8f79b-1f48-448e-b6e0-7e0159482d87', 'type': 'access', 'sub': '666dbf87b32136b267acd2e0', 'nbf': 1718468487, 'csrf': '79e10aa9-3bf6-493c-a792-dacc934f59b3', 'exp': 1718469387, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468488, 'jti': '4bcd9d4e-e94f-438c-855e-dddffe076c34', 'type': 'access', 'sub': '666dbf88b32136b267acd2e2', 'nbf': 1718468488, 'csrf': '7cc591d8-fe1d-465c-a9d8-d2fad359dad2', 'exp': 1718469388, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468488, 'jti': 'd0f7d109-8fe3-4714-8431-7d8b2eaeaa65', 'type': 'access', 'sub': '666dbf88b32136b267acd2e4', 'nbf': 1718468488, 'csrf': '23e00e45-8dd6-4098-aa79-2c3b76f0dd8d', 'exp': 1718469388, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468488, 'jti': 'd0f7d109-8fe3-4714-8431-7d8b2eaeaa65', 'type': 'access', 'sub': '666dbf88b32136b267acd2e4', 'nbf': 1718468488, 'csrf': '23e00e45-8dd6-4098-aa79-2c3b76f0dd8d', 'exp': 1718469388, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468488, 'jti': 'd0f7d109-8fe3-4714-8431-7d8b2eaeaa65', 'type': 'access', 'sub': '666dbf88b32136b267acd2e4', 'nbf': 1718468488, 'csrf': '23e00e45-8dd6-4098-aa79-2c3b76f0dd8d', 'exp': 1718469388, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468488, 'jti': 'd0f7d109-8fe3-4714-8431-7d8b2eaeaa65', 'type': 'access', 'sub': '666dbf88b32136b267acd2e4', 'nbf': 1718468488, 'csrf': '23e00e45-8dd6-4098-aa79-2c3b76f0dd8d', 'exp': 1718469388, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468488, 'jti': 'd0f7d109-8fe3-4714-8431-7d8b2eaeaa65', 'type': 'access', 'sub': '666dbf88b32136b267acd2e4', 'nbf': 1718468488, 'csrf': '23e00e45-8dd6-4098-aa79-2c3b76f0dd8d', 'exp': 1718469388, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468488, 'jti': 'd0f7d109-8fe3-4714-8431-7d8b2eaeaa65', 'type': 'access', 'sub': '666dbf88b32136b267acd2e4', 'nbf': 1718468488, 'csrf': '23e00e45-8dd6-4098-aa79-2c3b76f0dd8d', 'exp': 1718469388, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468488, 'jti': 'b3730b15-5e75-4ca9-b0a2-d7f7ef6c6201', 'type': 'access', 'sub': '666dbf88b32136b267acd2e6', 'nbf': 1718468488, 'csrf': '723b59a7-9c85-4f0e-863d-0ca496e63f0d', 'exp': 1718469388, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468488, 'jti': 'b3730b15-5e75-4ca9-b0a2-d7f7ef6c6201', 'type': 'access', 'sub': '666dbf88b32136b267acd2e6', 'nbf': 1718468488, 'csrf': '723b59a7-9c85-4f0e-863d-0ca496e63f0d', 'exp': 1718469388, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468488, 'jti': 'b3730b15-5e75-4ca9-b0a2-d7f7ef6c6201', 'type': 'access', 'sub': '666dbf88b32136b267acd2e6', 'nbf': 1718468488, 'csrf': '723b59a7-9c85-4f0e-863d-0ca496e63f0d', 'exp': 1718469388, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468488, 'jti': 'b3730b15-5e75-4ca9-b0a2-d7f7ef6c6201', 'type': 'access', 'sub': '666dbf88b32136b267acd2e6', 'nbf': 1718468488, 'csrf': '723b59a7-9c85-4f0e-863d-0ca496e63f0d', 'exp': 1718469388, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468488, 'jti': 'b3730b15-5e75-4ca9-b0a2-d7f7ef6c6201', 'type': 'access', 'sub': '666dbf88b32136b267acd2e6', 'nbf': 1718468488, 'csrf': '723b59a7-9c85-4f0e-863d-0ca496e63f0d', 'exp': 1718469388, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468488, 'jti': 'b3730b15-5e75-4ca9-b0a2-d7f7ef6c6201', 'type': 'access', 'sub': '666dbf88b32136b267acd2e6', 'nbf': 1718468488, 'csrf': '723b59a7-9c85-4f0e-863d-0ca496e63f0d', 'exp': 1718469388, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468489, 'jti': '9673290a-ede3-4b6a-a19b-d49ce9a01956', 'type': 'access', 'sub': '666dbf89b32136b267acd2e8', 'nbf': 1718468489, 'csrf': 'dfc8d897-3574-4759-b54e-3786bf54761e', 'exp': 1718469389, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468489, 'jti': '6b5b151d-11d5-4574-91d4-adca10d2873e', 'type': 'access', 'sub': '666dbf89b32136b267acd2ea', 'nbf': 1718468489, 'csrf': '8c487844-fa00-4878-b95e-4be816da81eb', 'exp': 1718469389, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468695, 'jti': 'ca640ef9-938e-4ecc-ada8-74503cdeae38', 'type': 'access', 'sub': '666dc0574c28aa496ff820ac', 'nbf': 1718468695, 'csrf': '3fdbf1d9-630b-40f9-ab94-70d053fe8c49', 'exp': 1718469595, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666dc0574c28aa496ff820ac') email='test@test.com' password='__hash__scrypt:32768:8:1$uUqmB9ik7uLdpim9$6a55e97d295f090f896001a108c0cc74dca0e50921789450715a4021b6cfc26da507d6f897db119046e452a22dff44c9160c73e985e1a664ede9db65a793992b' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468695, 'jti': '84386307-bb27-41dc-aa22-650ab950f006', 'type': 'access', 'sub': '666dc0574c28aa496ff820b1', 'nbf': 1718468695, 'csrf': 'aabe3e50-c41d-4f2f-a872-6ab8751b9a45', 'exp': 1718469595, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666dc0574c28aa496ff820b1') email='test@test.com' password='__hash__scrypt:32768:8:1$kDyU7NaMiNoY90pI$d6879fda93ee1ef41411809cf72475e652eb67d02cb4ee02d33464d947e63c7ce1654ac4714ffca439daa1a46c924e3992ffc33c398e8f52a5fd4860a4c5ee20' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468695, 'jti': 'f9df3c1d-2f91-4bec-85e7-7e7f2ab10cb6', 'type': 'access', 'sub': '666dc0574c28aa496ff820b4', 'nbf': 1718468695, 'csrf': 'c15f3140-b1d2-426f-a955-642ed5b047ce', 'exp': 1718469595, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666dc0574c28aa496ff820b4') email='test@test.com' password='__hash__scrypt:32768:8:1$jwLOsVNkVn5uWJ7E$ea37c376dec129176af5620681bfc2d1cb6e9ba2be202e617e95c7c1b96db7177464dfd53d46d3f36e6631df7fa9eeaf19bfe15c75a9730cdac1a856147ece35' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468696, 'jti': '7f79c38c-2d53-4b7f-abb5-ca11d65a9566', 'type': 'access', 'sub': '666dc0584c28aa496ff820c0', 'nbf': 1718468696, 'csrf': '9474b2d6-8bf0-429b-a808-b9a90c4dde09', 'exp': 1718469596, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc0584c28aa496ff820c0'), email='admin@test.com', password='__hash__scrypt:32768:8:1$RcdrDlLxihEFO1iH$fa699a2ce7783c87ab21ee967a0b1b86e12a70db0fa0ec7ccf26397bfc97f081d06d282a7726d76da933d3b5a861af509313f54139942a6c92ddd0b1f7c26a6d', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468696, 'jti': 'fd474bd5-6c02-49b0-9cc6-e17b42d0dcc1', 'type': 'access', 'sub': '666dc0584c28aa496ff820c3', 'nbf': 1718468696, 'csrf': 'b96a8204-becc-40d2-9254-10e7c264a865', 'exp': 1718469596, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc0584c28aa496ff820c3'), email='admin@test.com', password='__hash__scrypt:32768:8:1$kqThYC1FPJBLUoSa$6092bd5eae9643760f77eb90909b44b1f598c1ce88318c767e605cf9c9c8a00c231d802c6eb7dcf0d020cec709eba534bcecdbd2e1575520199928e9867d550d', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468696, 'jti': '16d308b9-a720-4a2e-aa44-c9a0c8a48f04', 'type': 'access', 'sub': '666dc0584c28aa496ff820c5', 'nbf': 1718468696, 'csrf': '97093925-729b-4686-9cd6-967185cc5c99', 'exp': 1718469596, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc0584c28aa496ff820c5'), email='admin@test.com', password='__hash__scrypt:32768:8:1$JU5eQmF5UYYUTDOe$d0dfc6b93b0028029118c14a5a4dffa6a021d3c18e5950d57d4c5bbd936ec7073087a2c7ab3fb70f58fc02474ea8ab201a8ab211361eb1f1c8197048934a8b08', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468697, 'jti': '59bd195d-4c64-4a37-ae2f-13ded99e5c17', 'type': 'access', 'sub': '666dc0594c28aa496ff820c7', 'nbf': 1718468697, 'csrf': '04ecca93-8884-4284-97e9-6fb7ca6f8f8d', 'exp': 1718469597, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc0594c28aa496ff820c7'), email='admin@test.com', password='__hash__scrypt:32768:8:1$jAfXi0cSI3wz7Sxt$014d9807ac48bb93947b59e3eb863aab22dee67fbdbeecc71d05a885b11e33f822fe3850a792caa5618f6d50544feb96bdb1135f0e6ee09b780f7c900370f35a', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468697, 'jti': '17ea0b7b-4cfc-4558-ad8f-4be6b928b4e1', 'type': 'access', 'sub': '666dc0594c28aa496ff820c9', 'nbf': 1718468697, 'csrf': '195feeed-2810-4eee-99a6-c215f6806086', 'exp': 1718469597, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc0594c28aa496ff820c9'), email='admin@test.com', password='__hash__scrypt:32768:8:1$R93PxYPapwf3znt7$6a3328f6713529d95be52b9e85bf5487b701a65c3e5cc78b2634487f2637879b44900b945ff1d6f4432808ddfdacb8ea2a1b76188b4281ef4cfb5e4a7fba29a6', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468697, 'jti': '5fb9cc76-77ff-45dd-ad07-f5d4f11f3a55', 'type': 'access', 'sub': '666dc0594c28aa496ff820cb', 'nbf': 1718468697, 'csrf': '8db629bd-c2dd-411c-b5d2-62302bfd370b', 'exp': 1718469597, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc0594c28aa496ff820cb'), email='admin@test.com', password='__hash__scrypt:32768:8:1$E3X1WCksk9dycBQR$90e72062da00493ab2183fa2df89aaee6e6a4a13c0722c17bf2d33b92df4070d65116290efd6475fce287ec7bcb2623489fd8785750d0bd5d0f2a3df4a88e202', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 32, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468697, 'jti': '282449fa-7eb2-4741-b14e-993b347cb14b', 'type': 'access', 'sub': '666dc0594c28aa496ff820cd', 'nbf': 1718468697, 'csrf': 'ce808c0c-081a-484b-9103-ada7c1de7f5a', 'exp': 1718469597, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc0594c28aa496ff820cd'), email='admin@test.com', password='__hash__scrypt:32768:8:1$GDaTq9vIHfcrrQNY$39e2323a71ee2d32fb656356aadd7b720e1d61903965c008fa4937a5e0634bccde918038f922f7243b4d3b8760df3aa6d88b62ef0207aa6fa6d94d089de7d4ac', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468697, 'jti': '282449fa-7eb2-4741-b14e-993b347cb14b', 'type': 'access', 'sub': '666dc0594c28aa496ff820cd', 'nbf': 1718468697, 'csrf': 'ce808c0c-081a-484b-9103-ada7c1de7f5a', 'exp': 1718469597, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc0594c28aa496ff820cd'), email='admin@test.com', password='__hash__scrypt:32768:8:1$GDaTq9vIHfcrrQNY$39e2323a71ee2d32fb656356aadd7b720e1d61903965c008fa4937a5e0634bccde918038f922f7243b4d3b8760df3aa6d88b62ef0207aa6fa6d94d089de7d4ac', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
ERROR:app.extensions:Public Official already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 33, in create_public_official
    public_official = public_official_service.create_public_official(public_official)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\publicofficial_data_manager_mongodb.py", line 14, in create_public_official
    raise ObjectAlreadyExistsException("Public Official already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: Public Official already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468697, 'jti': 'b8bf9c49-2c8a-496a-8062-19c7c658cdc2', 'type': 'access', 'sub': '666dc0594c28aa496ff820d0', 'nbf': 1718468697, 'csrf': '91f4de28-181d-4b1e-9c9c-cbafcccebed6', 'exp': 1718469597, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc0594c28aa496ff820d0'), email='admin@test.com', password='__hash__scrypt:32768:8:1$DdzEmw4eHvyDpREW$ba4ffb51f9374851c72864e45f4b0f0be79793aba88f2e2fcac8915db8fb209feb6636f8a3815fca970357a31f63201670865b29a6afae1ceeb2a013dfc5eca6', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468697, 'jti': 'b8bf9c49-2c8a-496a-8062-19c7c658cdc2', 'type': 'access', 'sub': '666dc0594c28aa496ff820d0', 'nbf': 1718468697, 'csrf': '91f4de28-181d-4b1e-9c9c-cbafcccebed6', 'exp': 1718469597, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc0594c28aa496ff820d0'), email='admin@test.com', password='__hash__scrypt:32768:8:1$DdzEmw4eHvyDpREW$ba4ffb51f9374851c72864e45f4b0f0be79793aba88f2e2fcac8915db8fb209feb6636f8a3815fca970357a31f63201670865b29a6afae1ceeb2a013dfc5eca6', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468697, 'jti': 'b8bf9c49-2c8a-496a-8062-19c7c658cdc2', 'type': 'access', 'sub': '666dc0594c28aa496ff820d0', 'nbf': 1718468697, 'csrf': '91f4de28-181d-4b1e-9c9c-cbafcccebed6', 'exp': 1718469597, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc0594c28aa496ff820d0'), email='admin@test.com', password='__hash__scrypt:32768:8:1$DdzEmw4eHvyDpREW$ba4ffb51f9374851c72864e45f4b0f0be79793aba88f2e2fcac8915db8fb209feb6636f8a3815fca970357a31f63201670865b29a6afae1ceeb2a013dfc5eca6', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468697, 'jti': 'b8bf9c49-2c8a-496a-8062-19c7c658cdc2', 'type': 'access', 'sub': '666dc0594c28aa496ff820d0', 'nbf': 1718468697, 'csrf': '91f4de28-181d-4b1e-9c9c-cbafcccebed6', 'exp': 1718469597, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468698, 'jti': '3d1c38b0-2163-4cd5-8c60-87b7178f6ec2', 'type': 'access', 'sub': '666dc05a4c28aa496ff820d5', 'nbf': 1718468698, 'csrf': '1b08f443-32c5-498d-b7ea-e347b081064f', 'exp': 1718469598, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc05a4c28aa496ff820d5'), email='admin@test.com', password='__hash__scrypt:32768:8:1$f1opMOJtsHy0STrC$7f2ddea842204a3ad7356b1b468d6e842612c7f52a8b7b104ff6d632973bb32c1cfff8af38c6f11cfdeec78f602aa6df7b3335fef3009c4b6858f771da48d4ed', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468698, 'jti': '3d1c38b0-2163-4cd5-8c60-87b7178f6ec2', 'type': 'access', 'sub': '666dc05a4c28aa496ff820d5', 'nbf': 1718468698, 'csrf': '1b08f443-32c5-498d-b7ea-e347b081064f', 'exp': 1718469598, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc05a4c28aa496ff820d5'), email='admin@test.com', password='__hash__scrypt:32768:8:1$f1opMOJtsHy0STrC$7f2ddea842204a3ad7356b1b468d6e842612c7f52a8b7b104ff6d632973bb32c1cfff8af38c6f11cfdeec78f602aa6df7b3335fef3009c4b6858f771da48d4ed', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468698, 'jti': '3d1c38b0-2163-4cd5-8c60-87b7178f6ec2', 'type': 'access', 'sub': '666dc05a4c28aa496ff820d5', 'nbf': 1718468698, 'csrf': '1b08f443-32c5-498d-b7ea-e347b081064f', 'exp': 1718469598, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc05a4c28aa496ff820d5'), email='admin@test.com', password='__hash__scrypt:32768:8:1$f1opMOJtsHy0STrC$7f2ddea842204a3ad7356b1b468d6e842612c7f52a8b7b104ff6d632973bb32c1cfff8af38c6f11cfdeec78f602aa6df7b3335fef3009c4b6858f771da48d4ed', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468698, 'jti': '8c1edf87-cd11-430e-b181-b91bb49011f2', 'type': 'access', 'sub': '666dc05a4c28aa496ff820d9', 'nbf': 1718468698, 'csrf': 'ea65813a-2c41-4dbd-bbbd-3c92fc86fe9e', 'exp': 1718469598, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468698, 'jti': '8129b66c-811d-4e3c-8139-491455ca7830', 'type': 'access', 'sub': '666dc05a4c28aa496ff820db', 'nbf': 1718468698, 'csrf': 'aa108863-630e-4881-b20e-f587aab50744', 'exp': 1718469598, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc05a4c28aa496ff820db'), email='admin@test.com', password='__hash__scrypt:32768:8:1$jfJCjSq9R8YhtkNl$d2bcf81dfc5ffb03373fd0acb1ca54b2c3ac943949eed6ffbad931c4ef453043be2816910ea798665d7d7ee3f7f2c3f230013f28338eac315f9b6a49e0e6b034', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468698, 'jti': '8129b66c-811d-4e3c-8139-491455ca7830', 'type': 'access', 'sub': '666dc05a4c28aa496ff820db', 'nbf': 1718468698, 'csrf': 'aa108863-630e-4881-b20e-f587aab50744', 'exp': 1718469598, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc05a4c28aa496ff820db'), email='admin@test.com', password='__hash__scrypt:32768:8:1$jfJCjSq9R8YhtkNl$d2bcf81dfc5ffb03373fd0acb1ca54b2c3ac943949eed6ffbad931c4ef453043be2816910ea798665d7d7ee3f7f2c3f230013f28338eac315f9b6a49e0e6b034', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468698, 'jti': '8129b66c-811d-4e3c-8139-491455ca7830', 'type': 'access', 'sub': '666dc05a4c28aa496ff820db', 'nbf': 1718468698, 'csrf': 'aa108863-630e-4881-b20e-f587aab50744', 'exp': 1718469598, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc05a4c28aa496ff820db'), email='admin@test.com', password='__hash__scrypt:32768:8:1$jfJCjSq9R8YhtkNl$d2bcf81dfc5ffb03373fd0acb1ca54b2c3ac943949eed6ffbad931c4ef453043be2816910ea798665d7d7ee3f7f2c3f230013f28338eac315f9b6a49e0e6b034', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468698, 'jti': '3fcc406b-8acf-4340-ab4a-fb370565f1b9', 'type': 'access', 'sub': '666dc05a4c28aa496ff820e1', 'nbf': 1718468698, 'csrf': '9382727b-12f3-4d45-b500-c07b26ff92f6', 'exp': 1718469598, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc05a4c28aa496ff820e1'), email='admin@test.com', password='__hash__scrypt:32768:8:1$qirz8SKidt0FNtsS$18f94e26f1c072bd1bec69b808a281c1106d13a5ce2050a98d886c36b1cc5fbd751218d4c7390033130027990fda0949f635270575a196d2ac5ae0ad53c21e71', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:Getting public official by ID 666dc05a4c28aa496ff820e2
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468698, 'jti': '6d1542fb-266c-4911-8a3d-763f7b4dd162', 'type': 'access', 'sub': '666dc05a4c28aa496ff820e6', 'nbf': 1718468698, 'csrf': '30b7eac0-1a10-4d26-9634-c31f74984a88', 'exp': 1718469598, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc05a4c28aa496ff820e6'), email='admin@test.com', password='__hash__scrypt:32768:8:1$S9ZLydLpco0A333f$b03d4dd19246f0346ed1f733c24809d714d586727335c6ef9186207e1f1d3bc432f52cbed6c9068c1d0b0305174100a8be1431b5394c4048b6ea926f22544f72', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468698, 'jti': '6d1542fb-266c-4911-8a3d-763f7b4dd162', 'type': 'access', 'sub': '666dc05a4c28aa496ff820e6', 'nbf': 1718468698, 'csrf': '30b7eac0-1a10-4d26-9634-c31f74984a88', 'exp': 1718469598, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc05a4c28aa496ff820e7')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468699, 'jti': '8399b620-8590-48f1-b136-03bcfcef66ed', 'type': 'access', 'sub': '666dc05b4c28aa496ff820e9', 'nbf': 1718468699, 'csrf': 'a1218e66-7df4-4fb7-93e8-8fa74ebecc9d', 'exp': 1718469599, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc05b4c28aa496ff820e9'), email='admin@test.com', password='__hash__scrypt:32768:8:1$FcPc7i2R4awkzMUK$25c69419eb6d04d7423bebb819657de1779bd19853e91c62522a366f5dd60d50b4e2cb6a6becb2df7ae4d0999649ac8619eb5fb60406865d20f8f820b04ae99e', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468699, 'jti': '8399b620-8590-48f1-b136-03bcfcef66ed', 'type': 'access', 'sub': '666dc05b4c28aa496ff820e9', 'nbf': 1718468699, 'csrf': 'a1218e66-7df4-4fb7-93e8-8fa74ebecc9d', 'exp': 1718469599, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc05b4c28aa496ff820ea')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 81, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468699, 'jti': 'b0a87a78-afa3-4d9d-b806-2648e53ccbca', 'type': 'access', 'sub': '666dc05b4c28aa496ff820ec', 'nbf': 1718468699, 'csrf': '93e4b01a-7d79-4531-a5bb-f865f1297d95', 'exp': 1718469599, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468699, 'jti': '52e86d3e-2549-4d1f-8801-76bee6da7a55', 'type': 'access', 'sub': '666dc05b4c28aa496ff820ee', 'nbf': 1718468699, 'csrf': 'e9b692d5-7eaf-4a92-ac35-ab46c479fc6f', 'exp': 1718469599, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc05b4c28aa496ff820ee'), email='admin@test.com', password='__hash__scrypt:32768:8:1$23UPQknvh2PRQ2nw$f2d4029eacb4f44fe3c250fcf8f4787de2f80d8051d1e00fa0326cd36827a718d5b882df46b4d5548299dd189ad994dafd3869a50cf01faeb36602e501d95836', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468699, 'jti': '52e86d3e-2549-4d1f-8801-76bee6da7a55', 'type': 'access', 'sub': '666dc05b4c28aa496ff820ee', 'nbf': 1718468699, 'csrf': 'e9b692d5-7eaf-4a92-ac35-ab46c479fc6f', 'exp': 1718469599, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc05b4c28aa496ff820ef')
INFO:app.extensions:po_data={'name_eng': 'newname123', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 81, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468699, 'jti': '6381d245-66c2-4107-bb68-ed594c47d0d1', 'type': 'access', 'sub': '666dc05b4c28aa496ff820f1', 'nbf': 1718468699, 'csrf': '4fb9aeac-7904-42c3-b804-be7b20f4191f', 'exp': 1718469599, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc05b4c28aa496ff820f1'), email='admin@test.com', password='__hash__scrypt:32768:8:1$VA83jmHO4RDcHn6p$a800077c8d11847f9ccc6554c3d672b1594777f5b2881926612cbc24fc6b11b4afb12500db7763774263b561febfe463f73eb0b5da3e529a7a50397f36d7b194', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468699, 'jti': '6381d245-66c2-4107-bb68-ed594c47d0d1', 'type': 'access', 'sub': '666dc05b4c28aa496ff820f1', 'nbf': 1718468699, 'csrf': '4fb9aeac-7904-42c3-b804-be7b20f4191f', 'exp': 1718469599, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc05b4c28aa496ff820f2')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטי134man', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 81, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468699, 'jti': '3c94a503-06e0-4572-b61b-0f8f80e38e1b', 'type': 'access', 'sub': '666dc05b4c28aa496ff820f4', 'nbf': 1718468699, 'csrf': '12daca79-22a4-4e9c-bdfc-e42e272d7b40', 'exp': 1718469599, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc05b4c28aa496ff820f4'), email='admin@test.com', password='__hash__scrypt:32768:8:1$IvscCwZVWr3L1aKK$fae0a38aa232bd2fa21c2b5b4c4159d1aa1128eb42245dfdf0a9b55f5fbea3b173780c9d553e2d5a566b7460e88751268e9898c31edbff205ea02761ef387893', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468699, 'jti': '3c94a503-06e0-4572-b61b-0f8f80e38e1b', 'type': 'access', 'sub': '666dc05b4c28aa496ff820f4', 'nbf': 1718468699, 'csrf': '12daca79-22a4-4e9c-bdfc-e42e272d7b40', 'exp': 1718469599, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc05b4c28aa496ff820f5')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'myposition123', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 81, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468700, 'jti': 'a6cb8d9b-15e4-4a06-ae0f-20ee586d4fc1', 'type': 'access', 'sub': '666dc05c4c28aa496ff820f7', 'nbf': 1718468700, 'csrf': 'ba9e55a1-da67-41dc-9443-1ed006fb3a11', 'exp': 1718469600, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:user=User(id=ObjectId('666dc05c4c28aa496ff820f7'), email='admin@test.com', password='__hash__scrypt:32768:8:1$ReRp5uteF2Xm0kZQ$38837db2fdf065fb29165cbe1d5756197bdc35ced9950397babcbf104fd7036db38bdcb6142e816bb84b48e41df5a0e8bcbc9e81bd2905291b24aa2f6a8a3df3', username='admin', position='admin', role=<UserRole.ADMIN: 'admin'>)
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468700, 'jti': 'a6cb8d9b-15e4-4a06-ae0f-20ee586d4fc1', 'type': 'access', 'sub': '666dc05c4c28aa496ff820f7', 'nbf': 1718468700, 'csrf': 'ba9e55a1-da67-41dc-9443-1ed006fb3a11', 'exp': 1718469600, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc05c4c28aa496ff820f8')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'myspace': 'myhandle', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 81, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468700, 'jti': '1fbf2135-722a-49d3-bae5-3f613956654c', 'type': 'access', 'sub': '666dc05c4c28aa496ff820fd', 'nbf': 1718468700, 'csrf': 'a5e926c5-c322-4e7d-8c76-7d44929b20ae', 'exp': 1718469600, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468700, 'jti': '77bdaf48-b8a4-41b7-9639-1e6d8e43b059', 'type': 'access', 'sub': '666dc05c4c28aa496ff82102', 'nbf': 1718468700, 'csrf': '87483b40-c6d4-4c64-8fba-dfefd239a953', 'exp': 1718469600, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468701, 'jti': 'd1cbc2bd-4e87-485c-ad42-e7ca91484ea1', 'type': 'access', 'sub': '666dc05d4c28aa496ff82107', 'nbf': 1718468701, 'csrf': '0506b223-0eb6-48aa-b8e6-274404711e75', 'exp': 1718469601, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468701, 'jti': 'ad090705-2c7e-4b34-888a-a902eecdfc8d', 'type': 'access', 'sub': '666dc05d4c28aa496ff8210c', 'nbf': 1718468701, 'csrf': 'a69c785b-8be1-4230-a06f-fe43273a2610', 'exp': 1718469601, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468701, 'jti': '3aff562a-4d65-4c08-acd5-39aac26a05da', 'type': 'access', 'sub': '666dc05d4c28aa496ff8210e', 'nbf': 1718468701, 'csrf': 'f9b1bc1d-9890-43d3-a409-dfb30482fe27', 'exp': 1718469601, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468702, 'jti': 'db6f4716-1c45-46e1-882e-fce7d6a5407f', 'type': 'access', 'sub': '666dc05e4c28aa496ff82110', 'nbf': 1718468702, 'csrf': 'e9d1853f-623d-4c0d-8376-dd33fa14f5d3', 'exp': 1718469602, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468702, 'jti': '0c7a099d-fc0d-4bd4-b3f5-960e4feea19f', 'type': 'access', 'sub': '666dc05e4c28aa496ff82112', 'nbf': 1718468702, 'csrf': '443fd8bf-2f3a-4874-9f28-e46cbef80eb8', 'exp': 1718469602, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468702, 'jti': '864dfbb5-9c5f-4f93-b780-ebb437e46402', 'type': 'access', 'sub': '666dc05e4c28aa496ff82114', 'nbf': 1718468702, 'csrf': '342981ad-e135-47b4-b645-1d4255e48498', 'exp': 1718469602, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468702, 'jti': '864dfbb5-9c5f-4f93-b780-ebb437e46402', 'type': 'access', 'sub': '666dc05e4c28aa496ff82114', 'nbf': 1718468702, 'csrf': '342981ad-e135-47b4-b645-1d4255e48498', 'exp': 1718469602, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468702, 'jti': '864dfbb5-9c5f-4f93-b780-ebb437e46402', 'type': 'access', 'sub': '666dc05e4c28aa496ff82114', 'nbf': 1718468702, 'csrf': '342981ad-e135-47b4-b645-1d4255e48498', 'exp': 1718469602, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468702, 'jti': '864dfbb5-9c5f-4f93-b780-ebb437e46402', 'type': 'access', 'sub': '666dc05e4c28aa496ff82114', 'nbf': 1718468702, 'csrf': '342981ad-e135-47b4-b645-1d4255e48498', 'exp': 1718469602, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468702, 'jti': '864dfbb5-9c5f-4f93-b780-ebb437e46402', 'type': 'access', 'sub': '666dc05e4c28aa496ff82114', 'nbf': 1718468702, 'csrf': '342981ad-e135-47b4-b645-1d4255e48498', 'exp': 1718469602, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468702, 'jti': '864dfbb5-9c5f-4f93-b780-ebb437e46402', 'type': 'access', 'sub': '666dc05e4c28aa496ff82114', 'nbf': 1718468702, 'csrf': '342981ad-e135-47b4-b645-1d4255e48498', 'exp': 1718469602, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468703, 'jti': 'c8c9376a-5809-49a8-ae13-f8ccadd79e4a', 'type': 'access', 'sub': '666dc05f4c28aa496ff82116', 'nbf': 1718468703, 'csrf': 'd9248fd8-fab9-4a11-9dc5-a11b0dd05673', 'exp': 1718469603, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468703, 'jti': 'c8c9376a-5809-49a8-ae13-f8ccadd79e4a', 'type': 'access', 'sub': '666dc05f4c28aa496ff82116', 'nbf': 1718468703, 'csrf': 'd9248fd8-fab9-4a11-9dc5-a11b0dd05673', 'exp': 1718469603, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468703, 'jti': 'c8c9376a-5809-49a8-ae13-f8ccadd79e4a', 'type': 'access', 'sub': '666dc05f4c28aa496ff82116', 'nbf': 1718468703, 'csrf': 'd9248fd8-fab9-4a11-9dc5-a11b0dd05673', 'exp': 1718469603, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468703, 'jti': 'c8c9376a-5809-49a8-ae13-f8ccadd79e4a', 'type': 'access', 'sub': '666dc05f4c28aa496ff82116', 'nbf': 1718468703, 'csrf': 'd9248fd8-fab9-4a11-9dc5-a11b0dd05673', 'exp': 1718469603, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468703, 'jti': 'c8c9376a-5809-49a8-ae13-f8ccadd79e4a', 'type': 'access', 'sub': '666dc05f4c28aa496ff82116', 'nbf': 1718468703, 'csrf': 'd9248fd8-fab9-4a11-9dc5-a11b0dd05673', 'exp': 1718469603, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468703, 'jti': 'c8c9376a-5809-49a8-ae13-f8ccadd79e4a', 'type': 'access', 'sub': '666dc05f4c28aa496ff82116', 'nbf': 1718468703, 'csrf': 'd9248fd8-fab9-4a11-9dc5-a11b0dd05673', 'exp': 1718469603, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468703, 'jti': 'df06bf94-2001-44cc-af35-19b8b988df17', 'type': 'access', 'sub': '666dc05f4c28aa496ff82118', 'nbf': 1718468703, 'csrf': 'd35099e2-72bb-4dc6-af3f-10a721141865', 'exp': 1718469603, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468703, 'jti': '52145779-2403-4547-b3cb-88c9a9604fc1', 'type': 'access', 'sub': '666dc05f4c28aa496ff8211a', 'nbf': 1718468703, 'csrf': 'cd7b1ad0-d8f1-48f6-8533-59c328d0863b', 'exp': 1718469603, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468887, 'jti': 'd5e4f49b-bbd2-45d4-8217-4af5ac3a91ad', 'type': 'access', 'sub': '666dc117bc1d735a63f2079b', 'nbf': 1718468887, 'csrf': '266ab247-cf63-4c74-b3e5-3c2c3649ab89', 'exp': 1718469787, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666dc117bc1d735a63f2079b') email='test@test.com' password='__hash__scrypt:32768:8:1$EZbXbJngNWGi2I2T$879c6dfb166b552e580c8092dc88a03d37c16dc68b4c75d5118b5b77abf8c672f537688ebee5e8f9105cf435a72bef3d78efe88b47d540903bf77a02fc664c60' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468887, 'jti': '5ce445a7-d1c9-4ac5-b522-907161e83d2e', 'type': 'access', 'sub': '666dc117bc1d735a63f207a0', 'nbf': 1718468887, 'csrf': '49ff0bc5-5dbf-428a-8b0e-92c87ca1b006', 'exp': 1718469787, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666dc117bc1d735a63f207a0') email='test@test.com' password='__hash__scrypt:32768:8:1$Q6VkhwpsanWpXRg1$c0689de46de70c32e660768262213e78de736383e32d798c708ee2ec73577a6832d52ac96b4a1ab9947700459ff50aa2a2fd2f5d2d146ed0dd88cbb872f8ae8a' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468887, 'jti': '87c2f45b-c90f-46ff-bb1a-01770fec9ca6', 'type': 'access', 'sub': '666dc117bc1d735a63f207a3', 'nbf': 1718468887, 'csrf': '2aab199a-8dbe-46a5-9c98-4194d104e6f8', 'exp': 1718469787, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666dc117bc1d735a63f207a3') email='test@test.com' password='__hash__scrypt:32768:8:1$kONA2MqBhDXH99w9$f4512db337da2f3e0f9cfe609c61ffdd8f10cb78e37f6184ffe962c5c57524cb262c074c9edaa6682b72ab1bbe20c98e228ea820d1bccd09a2965c46676c70e1' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468888, 'jti': '23f2c3e8-e8f8-43f1-98e1-57ded8bbac87', 'type': 'access', 'sub': '666dc118bc1d735a63f207af', 'nbf': 1718468888, 'csrf': '393c35fb-b11f-4849-9eef-0360f233f03f', 'exp': 1718469788, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468888, 'jti': '21ead038-8346-47b1-a671-e5601fef1e89', 'type': 'access', 'sub': '666dc118bc1d735a63f207b2', 'nbf': 1718468888, 'csrf': '15179afa-0191-4c89-9f49-549b925789bd', 'exp': 1718469788, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468888, 'jti': '30e928d8-c1b6-48af-a08f-df74c498ef2a', 'type': 'access', 'sub': '666dc118bc1d735a63f207b4', 'nbf': 1718468888, 'csrf': '49a56f3a-c903-4164-a898-caef846688bf', 'exp': 1718469788, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468889, 'jti': '37a5400e-52e7-4336-8803-73cc9220d014', 'type': 'access', 'sub': '666dc119bc1d735a63f207b6', 'nbf': 1718468889, 'csrf': '5436ef7d-ced2-42d4-925a-f25920b5b48e', 'exp': 1718469789, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468889, 'jti': 'f68e0187-93ab-4f25-b975-d90603566337', 'type': 'access', 'sub': '666dc119bc1d735a63f207b8', 'nbf': 1718468889, 'csrf': 'ce0cc654-87ba-4381-9e6e-2e3c5b99f69a', 'exp': 1718469789, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468889, 'jti': 'a68e6ca2-0bc8-48ac-a167-b6c9e17cadca', 'type': 'access', 'sub': '666dc119bc1d735a63f207ba', 'nbf': 1718468889, 'csrf': 'bc184ef4-08bb-42dc-9a99-518020640800', 'exp': 1718469789, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468889, 'jti': 'add98c63-65a2-4cee-83fe-4ca8d68148c1', 'type': 'access', 'sub': '666dc119bc1d735a63f207bc', 'nbf': 1718468889, 'csrf': 'a664314a-d79b-444b-b953-fb0cddb071f3', 'exp': 1718469789, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468889, 'jti': 'add98c63-65a2-4cee-83fe-4ca8d68148c1', 'type': 'access', 'sub': '666dc119bc1d735a63f207bc', 'nbf': 1718468889, 'csrf': 'a664314a-d79b-444b-b953-fb0cddb071f3', 'exp': 1718469789, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:Public Official already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 23, in create_public_official
    public_official = public_official_service.create_public_official(public_official)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\publicofficial_data_manager_mongodb.py", line 14, in create_public_official
    raise ObjectAlreadyExistsException("Public Official already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: Public Official already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468889, 'jti': 'ad16b09a-fbf9-4b6c-b6a9-9233bfce3184', 'type': 'access', 'sub': '666dc119bc1d735a63f207bf', 'nbf': 1718468889, 'csrf': 'f34365e9-271e-4a70-99be-7fae37a7b280', 'exp': 1718469789, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468889, 'jti': 'ad16b09a-fbf9-4b6c-b6a9-9233bfce3184', 'type': 'access', 'sub': '666dc119bc1d735a63f207bf', 'nbf': 1718468889, 'csrf': 'f34365e9-271e-4a70-99be-7fae37a7b280', 'exp': 1718469789, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468889, 'jti': 'ad16b09a-fbf9-4b6c-b6a9-9233bfce3184', 'type': 'access', 'sub': '666dc119bc1d735a63f207bf', 'nbf': 1718468889, 'csrf': 'f34365e9-271e-4a70-99be-7fae37a7b280', 'exp': 1718469789, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468889, 'jti': 'ad16b09a-fbf9-4b6c-b6a9-9233bfce3184', 'type': 'access', 'sub': '666dc119bc1d735a63f207bf', 'nbf': 1718468889, 'csrf': 'f34365e9-271e-4a70-99be-7fae37a7b280', 'exp': 1718469789, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468890, 'jti': '877f9aff-675a-4e41-82f9-b888109f5864', 'type': 'access', 'sub': '666dc11abc1d735a63f207c4', 'nbf': 1718468890, 'csrf': 'c03ef1df-3706-4c4d-9f98-3061c0c885f8', 'exp': 1718469790, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468890, 'jti': '877f9aff-675a-4e41-82f9-b888109f5864', 'type': 'access', 'sub': '666dc11abc1d735a63f207c4', 'nbf': 1718468890, 'csrf': 'c03ef1df-3706-4c4d-9f98-3061c0c885f8', 'exp': 1718469790, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468890, 'jti': '877f9aff-675a-4e41-82f9-b888109f5864', 'type': 'access', 'sub': '666dc11abc1d735a63f207c4', 'nbf': 1718468890, 'csrf': 'c03ef1df-3706-4c4d-9f98-3061c0c885f8', 'exp': 1718469790, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468890, 'jti': 'e48e9b43-db6d-427d-9c62-eb198e892272', 'type': 'access', 'sub': '666dc11abc1d735a63f207c8', 'nbf': 1718468890, 'csrf': 'cbcea0cc-3741-414f-a4e9-7ac1c13ee72e', 'exp': 1718469790, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468890, 'jti': 'da18e488-500f-4b85-8ba6-c4651acb5503', 'type': 'access', 'sub': '666dc11abc1d735a63f207ca', 'nbf': 1718468890, 'csrf': 'dfb8f7c7-921d-4cad-8c2a-294ab84acb0a', 'exp': 1718469790, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468890, 'jti': 'da18e488-500f-4b85-8ba6-c4651acb5503', 'type': 'access', 'sub': '666dc11abc1d735a63f207ca', 'nbf': 1718468890, 'csrf': 'dfb8f7c7-921d-4cad-8c2a-294ab84acb0a', 'exp': 1718469790, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468890, 'jti': 'da18e488-500f-4b85-8ba6-c4651acb5503', 'type': 'access', 'sub': '666dc11abc1d735a63f207ca', 'nbf': 1718468890, 'csrf': 'dfb8f7c7-921d-4cad-8c2a-294ab84acb0a', 'exp': 1718469790, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468890, 'jti': '45912bc2-e301-4061-aebb-47fed2864320', 'type': 'access', 'sub': '666dc11abc1d735a63f207d0', 'nbf': 1718468890, 'csrf': '7117def6-dd41-4166-909a-c7d6a9feab4a', 'exp': 1718469790, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Getting public official by ID 666dc11abc1d735a63f207d1
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468890, 'jti': 'ed51306d-fda3-4410-b3ec-a59e477bea17', 'type': 'access', 'sub': '666dc11abc1d735a63f207d5', 'nbf': 1718468890, 'csrf': '25ab5893-97e7-4e8e-b3d3-13b324ce6d5e', 'exp': 1718469790, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468890, 'jti': 'ed51306d-fda3-4410-b3ec-a59e477bea17', 'type': 'access', 'sub': '666dc11abc1d735a63f207d5', 'nbf': 1718468890, 'csrf': '25ab5893-97e7-4e8e-b3d3-13b324ce6d5e', 'exp': 1718469790, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc11abc1d735a63f207d6')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468891, 'jti': 'd05ad934-7c03-4576-a0de-87b92f51119a', 'type': 'access', 'sub': '666dc11bbc1d735a63f207d8', 'nbf': 1718468891, 'csrf': 'a60a28f8-357f-4f7e-a018-0caa351023df', 'exp': 1718469791, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468891, 'jti': 'd05ad934-7c03-4576-a0de-87b92f51119a', 'type': 'access', 'sub': '666dc11bbc1d735a63f207d8', 'nbf': 1718468891, 'csrf': 'a60a28f8-357f-4f7e-a018-0caa351023df', 'exp': 1718469791, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc11bbc1d735a63f207d9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468891, 'jti': '36a19f9c-b2cc-40e4-8c8f-188e931f40b4', 'type': 'access', 'sub': '666dc11bbc1d735a63f207db', 'nbf': 1718468891, 'csrf': 'f75bc253-6ea9-422b-aab5-ded7cb7798b2', 'exp': 1718469791, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468891, 'jti': '5f9e78df-1f7e-42fa-ae98-8e19454e72d3', 'type': 'access', 'sub': '666dc11bbc1d735a63f207dd', 'nbf': 1718468891, 'csrf': '15726b7d-0ca6-49a4-a155-02c483854848', 'exp': 1718469791, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468891, 'jti': '5f9e78df-1f7e-42fa-ae98-8e19454e72d3', 'type': 'access', 'sub': '666dc11bbc1d735a63f207dd', 'nbf': 1718468891, 'csrf': '15726b7d-0ca6-49a4-a155-02c483854848', 'exp': 1718469791, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc11bbc1d735a63f207de')
INFO:app.extensions:po_data={'name_eng': 'newname123', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468891, 'jti': 'e7b64bee-e1ea-492b-a6c6-66bb66815c8a', 'type': 'access', 'sub': '666dc11bbc1d735a63f207e0', 'nbf': 1718468891, 'csrf': '5a507579-add1-4a8d-aec9-028abd1ac77b', 'exp': 1718469791, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468891, 'jti': 'e7b64bee-e1ea-492b-a6c6-66bb66815c8a', 'type': 'access', 'sub': '666dc11bbc1d735a63f207e0', 'nbf': 1718468891, 'csrf': '5a507579-add1-4a8d-aec9-028abd1ac77b', 'exp': 1718469791, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc11bbc1d735a63f207e1')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטי134man', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468892, 'jti': '8bc8c717-1549-46eb-8602-2774dc2c5b21', 'type': 'access', 'sub': '666dc11bbc1d735a63f207e3', 'nbf': 1718468892, 'csrf': 'ba3068d2-2816-40db-9a89-5a8d02939ba8', 'exp': 1718469792, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468892, 'jti': '8bc8c717-1549-46eb-8602-2774dc2c5b21', 'type': 'access', 'sub': '666dc11bbc1d735a63f207e3', 'nbf': 1718468892, 'csrf': 'ba3068d2-2816-40db-9a89-5a8d02939ba8', 'exp': 1718469792, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc11cbc1d735a63f207e4')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'myposition123', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468892, 'jti': '3e4ade7b-27a8-488d-be43-43311383b833', 'type': 'access', 'sub': '666dc11cbc1d735a63f207e6', 'nbf': 1718468892, 'csrf': '4c77f484-0131-449a-84b6-9a0f07ad69c4', 'exp': 1718469792, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468892, 'jti': '3e4ade7b-27a8-488d-be43-43311383b833', 'type': 'access', 'sub': '666dc11cbc1d735a63f207e6', 'nbf': 1718468892, 'csrf': '4c77f484-0131-449a-84b6-9a0f07ad69c4', 'exp': 1718469792, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc11cbc1d735a63f207e7')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'myspace': 'myhandle', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468892, 'jti': 'a53b1001-4e50-4eaf-83df-50bd4b3e3ccc', 'type': 'access', 'sub': '666dc11cbc1d735a63f207ec', 'nbf': 1718468892, 'csrf': 'f1810c10-22dc-401c-8036-199024c57524', 'exp': 1718469792, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468892, 'jti': 'f119e501-d49e-4b71-8065-a02d08ccfd51', 'type': 'access', 'sub': '666dc11cbc1d735a63f207f1', 'nbf': 1718468892, 'csrf': 'ea325c31-4228-42f5-b471-79ac31c7b3be', 'exp': 1718469792, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468893, 'jti': '1b088e3b-3325-4f9f-aa9d-565d9b47903b', 'type': 'access', 'sub': '666dc11dbc1d735a63f207f6', 'nbf': 1718468893, 'csrf': 'c0ca3586-8bac-4e54-809c-d5128de1a205', 'exp': 1718469793, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468893, 'jti': 'e94d3d17-3322-418c-b30e-cff3fdeca594', 'type': 'access', 'sub': '666dc11dbc1d735a63f207fb', 'nbf': 1718468893, 'csrf': '372758a4-9d07-4947-877b-83155d229ee1', 'exp': 1718469793, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468893, 'jti': '3b617f80-9d4a-486e-b001-e02603ecaa61', 'type': 'access', 'sub': '666dc11dbc1d735a63f207fd', 'nbf': 1718468893, 'csrf': '9fba26cc-bb7a-4665-8fb6-3cc3c5ab39a0', 'exp': 1718469793, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468894, 'jti': '32ee3444-f965-4437-b101-cbe8e3a313f5', 'type': 'access', 'sub': '666dc11ebc1d735a63f207ff', 'nbf': 1718468894, 'csrf': 'bd15bb13-4fde-474f-bf74-2cfae92af59a', 'exp': 1718469794, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468894, 'jti': 'be73e9a7-f845-40ce-be1e-10af0919823a', 'type': 'access', 'sub': '666dc11ebc1d735a63f20801', 'nbf': 1718468894, 'csrf': 'c33588b0-45d6-45ae-9bd8-3c9c363862b7', 'exp': 1718469794, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468894, 'jti': '6c477408-a393-493c-8e4d-046e74d18874', 'type': 'access', 'sub': '666dc11ebc1d735a63f20803', 'nbf': 1718468894, 'csrf': 'fee22a5a-9c85-4adb-9e69-78640ba4f5fe', 'exp': 1718469794, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468894, 'jti': '6c477408-a393-493c-8e4d-046e74d18874', 'type': 'access', 'sub': '666dc11ebc1d735a63f20803', 'nbf': 1718468894, 'csrf': 'fee22a5a-9c85-4adb-9e69-78640ba4f5fe', 'exp': 1718469794, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468894, 'jti': '6c477408-a393-493c-8e4d-046e74d18874', 'type': 'access', 'sub': '666dc11ebc1d735a63f20803', 'nbf': 1718468894, 'csrf': 'fee22a5a-9c85-4adb-9e69-78640ba4f5fe', 'exp': 1718469794, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468894, 'jti': '6c477408-a393-493c-8e4d-046e74d18874', 'type': 'access', 'sub': '666dc11ebc1d735a63f20803', 'nbf': 1718468894, 'csrf': 'fee22a5a-9c85-4adb-9e69-78640ba4f5fe', 'exp': 1718469794, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468894, 'jti': '6c477408-a393-493c-8e4d-046e74d18874', 'type': 'access', 'sub': '666dc11ebc1d735a63f20803', 'nbf': 1718468894, 'csrf': 'fee22a5a-9c85-4adb-9e69-78640ba4f5fe', 'exp': 1718469794, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468894, 'jti': '6c477408-a393-493c-8e4d-046e74d18874', 'type': 'access', 'sub': '666dc11ebc1d735a63f20803', 'nbf': 1718468894, 'csrf': 'fee22a5a-9c85-4adb-9e69-78640ba4f5fe', 'exp': 1718469794, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468895, 'jti': 'db995ac8-7fec-497d-8a60-36f523618875', 'type': 'access', 'sub': '666dc11fbc1d735a63f20805', 'nbf': 1718468895, 'csrf': '0026d209-0467-4645-866e-7c0108f5463b', 'exp': 1718469795, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468895, 'jti': 'db995ac8-7fec-497d-8a60-36f523618875', 'type': 'access', 'sub': '666dc11fbc1d735a63f20805', 'nbf': 1718468895, 'csrf': '0026d209-0467-4645-866e-7c0108f5463b', 'exp': 1718469795, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468895, 'jti': 'db995ac8-7fec-497d-8a60-36f523618875', 'type': 'access', 'sub': '666dc11fbc1d735a63f20805', 'nbf': 1718468895, 'csrf': '0026d209-0467-4645-866e-7c0108f5463b', 'exp': 1718469795, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468895, 'jti': 'db995ac8-7fec-497d-8a60-36f523618875', 'type': 'access', 'sub': '666dc11fbc1d735a63f20805', 'nbf': 1718468895, 'csrf': '0026d209-0467-4645-866e-7c0108f5463b', 'exp': 1718469795, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468895, 'jti': 'db995ac8-7fec-497d-8a60-36f523618875', 'type': 'access', 'sub': '666dc11fbc1d735a63f20805', 'nbf': 1718468895, 'csrf': '0026d209-0467-4645-866e-7c0108f5463b', 'exp': 1718469795, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468895, 'jti': 'db995ac8-7fec-497d-8a60-36f523618875', 'type': 'access', 'sub': '666dc11fbc1d735a63f20805', 'nbf': 1718468895, 'csrf': '0026d209-0467-4645-866e-7c0108f5463b', 'exp': 1718469795, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468895, 'jti': '55047eeb-b26b-4626-89c5-c446e25294f2', 'type': 'access', 'sub': '666dc11fbc1d735a63f20807', 'nbf': 1718468895, 'csrf': '639fa979-89d7-48bc-86c7-827742fb56b9', 'exp': 1718469795, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468895, 'jti': '0645a941-6913-4eb9-88fa-e9ae70e90e6a', 'type': 'access', 'sub': '666dc11fbc1d735a63f20809', 'nbf': 1718468895, 'csrf': '6aa3f642-a3bd-46d2-a220-0342a0154233', 'exp': 1718469795, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468988, 'jti': 'e08a0f58-57bd-4ad1-b76e-ccb487ad154b', 'type': 'access', 'sub': '666dc17c6555614647958173', 'nbf': 1718468988, 'csrf': '2e44076b-2467-4ba6-888a-72734504946e', 'exp': 1718469888, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666dc17c6555614647958173') email='test@test.com' password='__hash__scrypt:32768:8:1$A0OHRwgm6Mh0nWld$43a35d6c6b6b5c2aa7a156946135568a595d22c190c02f7d58c2740b8738ce3540d9db0202ea1bf4cbe8ea3c2de8a01edb5d59595184e770ac7670268287ae5e' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468988, 'jti': '62626bb6-11b8-4d3c-b6fe-777de2a6e3e3', 'type': 'access', 'sub': '666dc17c6555614647958178', 'nbf': 1718468988, 'csrf': '7fe6dd87-3fc9-492f-b0b5-f1bda2d0d9e3', 'exp': 1718469888, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666dc17c6555614647958178') email='test@test.com' password='__hash__scrypt:32768:8:1$FyO7daLdXxG12eZZ$f92631e371f00c411d526305053242bf46408bfbc667bd492f12495646758b9928b280a34ac55506f20aab3319f5139b2d75e39a779baa16cb8794f1cca85d6b' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468988, 'jti': '1fa9ce5c-c911-4253-b211-e869cbde3f83', 'type': 'access', 'sub': '666dc17c655561464795817b', 'nbf': 1718468988, 'csrf': '98fbe7c2-5baa-478e-bbc1-63334e3d6441', 'exp': 1718469888, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666dc17c655561464795817b') email='test@test.com' password='__hash__scrypt:32768:8:1$Owr0AsodwmsMYqi0$b7226cdc45ca67656c45f2c3ddcef4f8837a077dc6cc24931721476f1a389343e7de48c10598a8a8f71b6c13590734952c88bc9a6dd1f825642fc6ea81797de4' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468989, 'jti': 'cf127a4a-29cc-4541-b17d-a7fce5cb832f', 'type': 'access', 'sub': '666dc17d6555614647958187', 'nbf': 1718468989, 'csrf': '76961716-213a-495f-a754-7e5bd3018c2e', 'exp': 1718469889, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468990, 'jti': '26fd1e4b-f961-4f8d-bf4c-8f8b0bf0bfbd', 'type': 'access', 'sub': '666dc17d655561464795818a', 'nbf': 1718468990, 'csrf': '3c842f6e-8b21-4f4e-8d36-a20b98f6d226', 'exp': 1718469890, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468990, 'jti': '33810b22-5ece-4f9c-9555-c0736c51e0e9', 'type': 'access', 'sub': '666dc17e655561464795818c', 'nbf': 1718468990, 'csrf': '7d78a72f-9fa3-4333-b12a-fdfb30abd34f', 'exp': 1718469890, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468990, 'jti': '8d6babd3-b462-4974-8992-21b5e36b8f19', 'type': 'access', 'sub': '666dc17e655561464795818e', 'nbf': 1718468990, 'csrf': 'b3b17d25-7d6d-4a79-8aee-798f40591008', 'exp': 1718469890, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468990, 'jti': '81f94dc0-7228-49d1-9f72-9b7ac27dba4b', 'type': 'access', 'sub': '666dc17e6555614647958190', 'nbf': 1718468990, 'csrf': 'a353dd3a-8f1b-4316-aa38-e8cc286bee17', 'exp': 1718469890, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468990, 'jti': 'aea043af-61b2-47cf-80a4-2237bf89a609', 'type': 'access', 'sub': '666dc17e6555614647958192', 'nbf': 1718468990, 'csrf': '55c76878-651d-4d47-9d64-af259eeb3285', 'exp': 1718469890, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468990, 'jti': '4785069a-aa4d-4266-b9e8-256ac167de41', 'type': 'access', 'sub': '666dc17e6555614647958194', 'nbf': 1718468990, 'csrf': '335f37c8-fb12-4208-be8a-eddeb6c2a901', 'exp': 1718469890, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468990, 'jti': '4785069a-aa4d-4266-b9e8-256ac167de41', 'type': 'access', 'sub': '666dc17e6555614647958194', 'nbf': 1718468990, 'csrf': '335f37c8-fb12-4208-be8a-eddeb6c2a901', 'exp': 1718469890, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:Public Official already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 23, in create_public_official
    public_official = public_official_service.create_public_official(public_official)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\publicofficial_data_manager_mongodb.py", line 14, in create_public_official
    raise ObjectAlreadyExistsException("Public Official already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: Public Official already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468991, 'jti': '797649f3-1e91-448c-9019-60ccca88b78c', 'type': 'access', 'sub': '666dc17f6555614647958197', 'nbf': 1718468991, 'csrf': 'ecbe6ced-8bfe-44c1-a081-eb692f28be6c', 'exp': 1718469891, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468991, 'jti': '797649f3-1e91-448c-9019-60ccca88b78c', 'type': 'access', 'sub': '666dc17f6555614647958197', 'nbf': 1718468991, 'csrf': 'ecbe6ced-8bfe-44c1-a081-eb692f28be6c', 'exp': 1718469891, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468991, 'jti': '797649f3-1e91-448c-9019-60ccca88b78c', 'type': 'access', 'sub': '666dc17f6555614647958197', 'nbf': 1718468991, 'csrf': 'ecbe6ced-8bfe-44c1-a081-eb692f28be6c', 'exp': 1718469891, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468991, 'jti': '797649f3-1e91-448c-9019-60ccca88b78c', 'type': 'access', 'sub': '666dc17f6555614647958197', 'nbf': 1718468991, 'csrf': 'ecbe6ced-8bfe-44c1-a081-eb692f28be6c', 'exp': 1718469891, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468991, 'jti': '6b35fe66-b086-4146-9319-e1d207da6fb6', 'type': 'access', 'sub': '666dc17f655561464795819c', 'nbf': 1718468991, 'csrf': '28f74a39-5285-45ab-8c6e-4849975547db', 'exp': 1718469891, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468991, 'jti': '6b35fe66-b086-4146-9319-e1d207da6fb6', 'type': 'access', 'sub': '666dc17f655561464795819c', 'nbf': 1718468991, 'csrf': '28f74a39-5285-45ab-8c6e-4849975547db', 'exp': 1718469891, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468991, 'jti': '6b35fe66-b086-4146-9319-e1d207da6fb6', 'type': 'access', 'sub': '666dc17f655561464795819c', 'nbf': 1718468991, 'csrf': '28f74a39-5285-45ab-8c6e-4849975547db', 'exp': 1718469891, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468991, 'jti': '4d04098a-fe33-46e7-afb6-3216832c028b', 'type': 'access', 'sub': '666dc17f65556146479581a0', 'nbf': 1718468991, 'csrf': '7f0f3db0-eb90-424d-8709-e025117e7aa4', 'exp': 1718469891, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468991, 'jti': 'd70dc628-b044-4563-80f9-3bb93d699da7', 'type': 'access', 'sub': '666dc17f65556146479581a2', 'nbf': 1718468991, 'csrf': '555d03e9-3742-4f60-848c-169ed81b9116', 'exp': 1718469891, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468991, 'jti': 'd70dc628-b044-4563-80f9-3bb93d699da7', 'type': 'access', 'sub': '666dc17f65556146479581a2', 'nbf': 1718468991, 'csrf': '555d03e9-3742-4f60-848c-169ed81b9116', 'exp': 1718469891, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468991, 'jti': 'd70dc628-b044-4563-80f9-3bb93d699da7', 'type': 'access', 'sub': '666dc17f65556146479581a2', 'nbf': 1718468991, 'csrf': '555d03e9-3742-4f60-848c-169ed81b9116', 'exp': 1718469891, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468991, 'jti': 'f9efaa41-dbd8-4715-ba13-6413594bd8ff', 'type': 'access', 'sub': '666dc17f65556146479581a8', 'nbf': 1718468991, 'csrf': '78ba9df8-6013-4ad2-88e7-19b3b43dc985', 'exp': 1718469891, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Getting public official by ID 666dc17f65556146479581a9
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468992, 'jti': 'c071458c-040c-4535-8e0d-f9a8d50c73fd', 'type': 'access', 'sub': '666dc18065556146479581ad', 'nbf': 1718468992, 'csrf': '669c891c-0aa2-4651-88a8-b68014181535', 'exp': 1718469892, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468992, 'jti': 'c071458c-040c-4535-8e0d-f9a8d50c73fd', 'type': 'access', 'sub': '666dc18065556146479581ad', 'nbf': 1718468992, 'csrf': '669c891c-0aa2-4651-88a8-b68014181535', 'exp': 1718469892, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc18065556146479581ae')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468992, 'jti': '32a456dc-ca9e-46b7-aaea-8ea61a52be9a', 'type': 'access', 'sub': '666dc18065556146479581b0', 'nbf': 1718468992, 'csrf': '3e691ab6-a654-430e-9cab-a0396e3d319a', 'exp': 1718469892, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468992, 'jti': '32a456dc-ca9e-46b7-aaea-8ea61a52be9a', 'type': 'access', 'sub': '666dc18065556146479581b0', 'nbf': 1718468992, 'csrf': '3e691ab6-a654-430e-9cab-a0396e3d319a', 'exp': 1718469892, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc18065556146479581b1')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468992, 'jti': '7321b421-eaaf-430f-9e82-51fcb93fb4b5', 'type': 'access', 'sub': '666dc18065556146479581b3', 'nbf': 1718468992, 'csrf': '4b52404f-5213-4d68-8ef0-019560dae54a', 'exp': 1718469892, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468992, 'jti': '61b73c70-a679-486e-96be-5e03b41fb1ab', 'type': 'access', 'sub': '666dc18065556146479581b5', 'nbf': 1718468992, 'csrf': 'bcf877bc-9af2-45c1-a5d4-e74cb47cc73c', 'exp': 1718469892, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468992, 'jti': '61b73c70-a679-486e-96be-5e03b41fb1ab', 'type': 'access', 'sub': '666dc18065556146479581b5', 'nbf': 1718468992, 'csrf': 'bcf877bc-9af2-45c1-a5d4-e74cb47cc73c', 'exp': 1718469892, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc18065556146479581b6')
INFO:app.extensions:po_data={'name_eng': 'newname123', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468993, 'jti': '4106b387-1c4b-4e08-8fe2-82ff66c6af7a', 'type': 'access', 'sub': '666dc18065556146479581b8', 'nbf': 1718468993, 'csrf': '991be7c4-838a-4931-b710-6618659feb0e', 'exp': 1718469893, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468993, 'jti': '4106b387-1c4b-4e08-8fe2-82ff66c6af7a', 'type': 'access', 'sub': '666dc18065556146479581b8', 'nbf': 1718468993, 'csrf': '991be7c4-838a-4931-b710-6618659feb0e', 'exp': 1718469893, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc18165556146479581b9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטי134man', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468993, 'jti': 'd15a3a46-c574-4838-85fd-45d7a6ba7a92', 'type': 'access', 'sub': '666dc18165556146479581bb', 'nbf': 1718468993, 'csrf': '92f9e596-f252-4273-a8c2-d7afd545f894', 'exp': 1718469893, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468993, 'jti': 'd15a3a46-c574-4838-85fd-45d7a6ba7a92', 'type': 'access', 'sub': '666dc18165556146479581bb', 'nbf': 1718468993, 'csrf': '92f9e596-f252-4273-a8c2-d7afd545f894', 'exp': 1718469893, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc18165556146479581bc')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'myposition123', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468993, 'jti': '38c43b9a-bcc5-4f93-83bd-0a500f6b50f5', 'type': 'access', 'sub': '666dc18165556146479581be', 'nbf': 1718468993, 'csrf': '8ff54bd1-bce4-4acf-969f-27611c879b72', 'exp': 1718469893, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468993, 'jti': '38c43b9a-bcc5-4f93-83bd-0a500f6b50f5', 'type': 'access', 'sub': '666dc18165556146479581be', 'nbf': 1718468993, 'csrf': '8ff54bd1-bce4-4acf-969f-27611c879b72', 'exp': 1718469893, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc18165556146479581bf')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'myspace': 'myhandle', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468993, 'jti': 'cd6627d1-d513-4c82-af13-e46c9eac84be', 'type': 'access', 'sub': '666dc18165556146479581c4', 'nbf': 1718468993, 'csrf': 'e46c2449-ce2e-4110-a118-dda0aab35f81', 'exp': 1718469893, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468994, 'jti': '58fca492-244b-42ff-a235-3e1edee366f4', 'type': 'access', 'sub': '666dc18265556146479581c9', 'nbf': 1718468994, 'csrf': '30c1fc71-ab22-442d-ab43-ed5044848dae', 'exp': 1718469894, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468994, 'jti': 'cca7921a-1e6c-4596-ba6e-b00b1b1529ed', 'type': 'access', 'sub': '666dc18265556146479581ce', 'nbf': 1718468994, 'csrf': '632aea3a-869b-472c-bc82-a72d394a3b28', 'exp': 1718469894, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468994, 'jti': '4e8e7d21-b082-4e63-9406-5b8951a4c77b', 'type': 'access', 'sub': '666dc18265556146479581d3', 'nbf': 1718468994, 'csrf': 'd5e6e42d-704c-4883-9e46-d98eac5a3700', 'exp': 1718469894, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468995, 'jti': '2a950e59-9d18-4a80-b0d8-ce5223efff29', 'type': 'access', 'sub': '666dc18365556146479581d5', 'nbf': 1718468995, 'csrf': '73d776bb-9c1f-4892-bc75-f3b5135163d0', 'exp': 1718469895, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468995, 'jti': '0209503f-0f2a-4eb6-86a9-86596e5ca673', 'type': 'access', 'sub': '666dc18365556146479581d7', 'nbf': 1718468995, 'csrf': 'fa8f2ed2-26f8-4857-bbfc-09a8eb47fafe', 'exp': 1718469895, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468995, 'jti': 'aa4be885-f0d4-4af3-8922-a1d76b37e05e', 'type': 'access', 'sub': '666dc18365556146479581d9', 'nbf': 1718468995, 'csrf': '80f07da5-c2de-49e1-94d4-703f9473238d', 'exp': 1718469895, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468995, 'jti': '0f79e4e6-98a3-4d6b-8fa8-c1d24986b7a3', 'type': 'access', 'sub': '666dc18365556146479581db', 'nbf': 1718468995, 'csrf': '8c84e169-7b0b-4195-8d24-4d1275d7e69f', 'exp': 1718469895, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468995, 'jti': '0f79e4e6-98a3-4d6b-8fa8-c1d24986b7a3', 'type': 'access', 'sub': '666dc18365556146479581db', 'nbf': 1718468995, 'csrf': '8c84e169-7b0b-4195-8d24-4d1275d7e69f', 'exp': 1718469895, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468995, 'jti': '0f79e4e6-98a3-4d6b-8fa8-c1d24986b7a3', 'type': 'access', 'sub': '666dc18365556146479581db', 'nbf': 1718468995, 'csrf': '8c84e169-7b0b-4195-8d24-4d1275d7e69f', 'exp': 1718469895, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468995, 'jti': '0f79e4e6-98a3-4d6b-8fa8-c1d24986b7a3', 'type': 'access', 'sub': '666dc18365556146479581db', 'nbf': 1718468995, 'csrf': '8c84e169-7b0b-4195-8d24-4d1275d7e69f', 'exp': 1718469895, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468995, 'jti': '0f79e4e6-98a3-4d6b-8fa8-c1d24986b7a3', 'type': 'access', 'sub': '666dc18365556146479581db', 'nbf': 1718468995, 'csrf': '8c84e169-7b0b-4195-8d24-4d1275d7e69f', 'exp': 1718469895, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468995, 'jti': '0f79e4e6-98a3-4d6b-8fa8-c1d24986b7a3', 'type': 'access', 'sub': '666dc18365556146479581db', 'nbf': 1718468995, 'csrf': '8c84e169-7b0b-4195-8d24-4d1275d7e69f', 'exp': 1718469895, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468996, 'jti': '83e8e6ad-3ebf-453a-9f56-6dcbe2473e4a', 'type': 'access', 'sub': '666dc18465556146479581dd', 'nbf': 1718468996, 'csrf': 'f07734ca-8826-4d43-b764-7b30acf48148', 'exp': 1718469896, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468996, 'jti': '83e8e6ad-3ebf-453a-9f56-6dcbe2473e4a', 'type': 'access', 'sub': '666dc18465556146479581dd', 'nbf': 1718468996, 'csrf': 'f07734ca-8826-4d43-b764-7b30acf48148', 'exp': 1718469896, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468996, 'jti': '83e8e6ad-3ebf-453a-9f56-6dcbe2473e4a', 'type': 'access', 'sub': '666dc18465556146479581dd', 'nbf': 1718468996, 'csrf': 'f07734ca-8826-4d43-b764-7b30acf48148', 'exp': 1718469896, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468996, 'jti': '83e8e6ad-3ebf-453a-9f56-6dcbe2473e4a', 'type': 'access', 'sub': '666dc18465556146479581dd', 'nbf': 1718468996, 'csrf': 'f07734ca-8826-4d43-b764-7b30acf48148', 'exp': 1718469896, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468996, 'jti': '83e8e6ad-3ebf-453a-9f56-6dcbe2473e4a', 'type': 'access', 'sub': '666dc18465556146479581dd', 'nbf': 1718468996, 'csrf': 'f07734ca-8826-4d43-b764-7b30acf48148', 'exp': 1718469896, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468996, 'jti': '83e8e6ad-3ebf-453a-9f56-6dcbe2473e4a', 'type': 'access', 'sub': '666dc18465556146479581dd', 'nbf': 1718468996, 'csrf': 'f07734ca-8826-4d43-b764-7b30acf48148', 'exp': 1718469896, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468996, 'jti': '138fe245-e60e-406f-9c31-caa12b69d307', 'type': 'access', 'sub': '666dc18465556146479581df', 'nbf': 1718468996, 'csrf': 'c6afcdfc-f8d3-4a20-a663-cb9dc279d017', 'exp': 1718469896, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718468996, 'jti': 'bfcb4015-5f4a-4db0-b5a4-161ef5d5d302', 'type': 'access', 'sub': '666dc18465556146479581e1', 'nbf': 1718468996, 'csrf': 'fd63318e-58cc-4881-b898-cab3a323ad5c', 'exp': 1718469896, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469024, 'jti': '7215965d-4cfa-4773-a081-2c87a72ee6e7', 'type': 'access', 'sub': '666dc1a01652e91eff5d88ec', 'nbf': 1718469024, 'csrf': 'edc0f593-bdfe-4624-bb7e-85dfc6692865', 'exp': 1718469924, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666dc1a01652e91eff5d88ec') email='test@test.com' password='__hash__scrypt:32768:8:1$9YRdmE3KchSIr45H$bbe8e753573c7b39735906c2491e57979e0d1d8f0059d152de3ba673b002a870569f0113fa248e64cf775a665cbb8d0a941b21eaee78d4f54eaf367aa993954c' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469024, 'jti': '067b9355-ec4f-44f8-bf4b-ad0aaa4825d3', 'type': 'access', 'sub': '666dc1a01652e91eff5d88f1', 'nbf': 1718469024, 'csrf': '763f4cc0-0350-4e3c-9352-629c6db3eac1', 'exp': 1718469924, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666dc1a01652e91eff5d88f1') email='test@test.com' password='__hash__scrypt:32768:8:1$DLayJU5IRSxMcOT1$b8ac8cd96e68dabd91e4acdbbc4a770ce24730e7dbcd8a2b91bee56e0fa92ceec324a5f6d1cc116d97337153361b87d74a291a43fda7338075958e21dde639bd' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469024, 'jti': 'a9c84495-e508-4675-8f84-17d14f346654', 'type': 'access', 'sub': '666dc1a01652e91eff5d88f4', 'nbf': 1718469024, 'csrf': '27319260-6d0b-4b80-8043-e9fb42434213', 'exp': 1718469924, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('666dc1a01652e91eff5d88f4') email='test@test.com' password='__hash__scrypt:32768:8:1$dgwIOTXYaIghaRX3$141010f01440c98119cd0d92157d040b302c51d8d61fc2e20f849c70ce3285d636977dd6d2ba51f303398eb942f45f4335ae37ab7f4e557d8785e8654cfe5779' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469025, 'jti': '8dc52517-1466-4860-a4ce-8333a055592e', 'type': 'access', 'sub': '666dc1a11652e91eff5d8900', 'nbf': 1718469025, 'csrf': '4f8f0701-259b-4fe6-87c7-3563ecf570b1', 'exp': 1718469925, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469025, 'jti': '1eab341e-440c-4e15-a396-544929fa70f1', 'type': 'access', 'sub': '666dc1a11652e91eff5d8903', 'nbf': 1718469025, 'csrf': '13fbf214-4d8e-488a-9177-9d27d7958398', 'exp': 1718469925, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469025, 'jti': 'ca4e9bbe-ecb0-4b5e-a7ea-56f0e1b603fd', 'type': 'access', 'sub': '666dc1a11652e91eff5d8905', 'nbf': 1718469025, 'csrf': '9fb52d1d-2b30-4d17-822d-0db59f202fd9', 'exp': 1718469925, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469025, 'jti': 'baeb7d51-c6b8-4a4a-8deb-128a05f23d09', 'type': 'access', 'sub': '666dc1a11652e91eff5d8907', 'nbf': 1718469025, 'csrf': 'c481438a-4f5c-4467-aea0-1cdb996213dc', 'exp': 1718469925, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469026, 'jti': '2f2902fc-251a-49f5-a22a-b686fafa1799', 'type': 'access', 'sub': '666dc1a11652e91eff5d8909', 'nbf': 1718469026, 'csrf': 'e814870f-d7c5-4678-a56c-6d8e0be2f584', 'exp': 1718469926, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469026, 'jti': '40e6fc2e-559a-4cbb-98c1-73cd7abb5221', 'type': 'access', 'sub': '666dc1a21652e91eff5d890b', 'nbf': 1718469026, 'csrf': 'b632ad68-0b3c-4f1b-89a7-9790342194ec', 'exp': 1718469926, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469026, 'jti': '9f9b610d-c646-4908-9693-a3a5934f20c7', 'type': 'access', 'sub': '666dc1a21652e91eff5d890d', 'nbf': 1718469026, 'csrf': 'eb4d84ab-64e9-4c2f-bf30-25c5ca77d4f9', 'exp': 1718469926, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469026, 'jti': '9f9b610d-c646-4908-9693-a3a5934f20c7', 'type': 'access', 'sub': '666dc1a21652e91eff5d890d', 'nbf': 1718469026, 'csrf': 'eb4d84ab-64e9-4c2f-bf30-25c5ca77d4f9', 'exp': 1718469926, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:Public Official already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 23, in create_public_official
    public_official = public_official_service.create_public_official(public_official)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\publicofficial_data_manager_mongodb.py", line 14, in create_public_official
    raise ObjectAlreadyExistsException("Public Official already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: Public Official already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469026, 'jti': 'e33cdfc6-99a8-41d8-80d2-14b93db86d41', 'type': 'access', 'sub': '666dc1a21652e91eff5d8910', 'nbf': 1718469026, 'csrf': '64808773-b133-458c-a27a-928fb7e30c22', 'exp': 1718469926, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469026, 'jti': 'e33cdfc6-99a8-41d8-80d2-14b93db86d41', 'type': 'access', 'sub': '666dc1a21652e91eff5d8910', 'nbf': 1718469026, 'csrf': '64808773-b133-458c-a27a-928fb7e30c22', 'exp': 1718469926, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469026, 'jti': 'e33cdfc6-99a8-41d8-80d2-14b93db86d41', 'type': 'access', 'sub': '666dc1a21652e91eff5d8910', 'nbf': 1718469026, 'csrf': '64808773-b133-458c-a27a-928fb7e30c22', 'exp': 1718469926, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469026, 'jti': 'e33cdfc6-99a8-41d8-80d2-14b93db86d41', 'type': 'access', 'sub': '666dc1a21652e91eff5d8910', 'nbf': 1718469026, 'csrf': '64808773-b133-458c-a27a-928fb7e30c22', 'exp': 1718469926, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469026, 'jti': '590712cf-4422-4b03-98f3-1ed7e6ffce56', 'type': 'access', 'sub': '666dc1a21652e91eff5d8915', 'nbf': 1718469026, 'csrf': 'caacc94c-4ac8-4259-9a98-23081e09a758', 'exp': 1718469926, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469026, 'jti': '590712cf-4422-4b03-98f3-1ed7e6ffce56', 'type': 'access', 'sub': '666dc1a21652e91eff5d8915', 'nbf': 1718469026, 'csrf': 'caacc94c-4ac8-4259-9a98-23081e09a758', 'exp': 1718469926, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469026, 'jti': '590712cf-4422-4b03-98f3-1ed7e6ffce56', 'type': 'access', 'sub': '666dc1a21652e91eff5d8915', 'nbf': 1718469026, 'csrf': 'caacc94c-4ac8-4259-9a98-23081e09a758', 'exp': 1718469926, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469026, 'jti': '65e8964f-5722-495f-b783-490a7cc95478', 'type': 'access', 'sub': '666dc1a21652e91eff5d8919', 'nbf': 1718469026, 'csrf': '2cda5f89-7b30-4e9a-90fb-ff71ab7ff2a6', 'exp': 1718469926, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469027, 'jti': 'e74b5f05-d63f-424e-b34e-293180340d30', 'type': 'access', 'sub': '666dc1a21652e91eff5d891b', 'nbf': 1718469027, 'csrf': '5f539dba-c812-4703-b104-5a71dadcd227', 'exp': 1718469927, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469027, 'jti': 'e74b5f05-d63f-424e-b34e-293180340d30', 'type': 'access', 'sub': '666dc1a21652e91eff5d891b', 'nbf': 1718469027, 'csrf': '5f539dba-c812-4703-b104-5a71dadcd227', 'exp': 1718469927, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469027, 'jti': 'e74b5f05-d63f-424e-b34e-293180340d30', 'type': 'access', 'sub': '666dc1a21652e91eff5d891b', 'nbf': 1718469027, 'csrf': '5f539dba-c812-4703-b104-5a71dadcd227', 'exp': 1718469927, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469027, 'jti': '9ec44295-6cd4-46da-b244-bd3b47cc09d2', 'type': 'access', 'sub': '666dc1a31652e91eff5d8921', 'nbf': 1718469027, 'csrf': '1e2bae37-2f30-4d5b-a7b6-5cb87e6f7d01', 'exp': 1718469927, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Getting public official by ID 666dc1a31652e91eff5d8922
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469027, 'jti': '7e6459c6-ebeb-4a63-aff6-ff3aac9d3aad', 'type': 'access', 'sub': '666dc1a31652e91eff5d8926', 'nbf': 1718469027, 'csrf': '758860d7-f997-479b-877d-b138c0376eb3', 'exp': 1718469927, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469027, 'jti': '7e6459c6-ebeb-4a63-aff6-ff3aac9d3aad', 'type': 'access', 'sub': '666dc1a31652e91eff5d8926', 'nbf': 1718469027, 'csrf': '758860d7-f997-479b-877d-b138c0376eb3', 'exp': 1718469927, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc1a31652e91eff5d8927')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469027, 'jti': '851891a6-7a87-4f9a-9127-9ac2dfb8dcec', 'type': 'access', 'sub': '666dc1a31652e91eff5d8929', 'nbf': 1718469027, 'csrf': 'ce68c667-b65b-4e58-9fb7-1b59a4e2702d', 'exp': 1718469927, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469027, 'jti': '851891a6-7a87-4f9a-9127-9ac2dfb8dcec', 'type': 'access', 'sub': '666dc1a31652e91eff5d8929', 'nbf': 1718469027, 'csrf': 'ce68c667-b65b-4e58-9fb7-1b59a4e2702d', 'exp': 1718469927, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc1a31652e91eff5d892a')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469028, 'jti': 'ed50b3b9-fc02-4bf7-a16b-4938ceeb68b1', 'type': 'access', 'sub': '666dc1a31652e91eff5d892c', 'nbf': 1718469028, 'csrf': '3cd1e640-ca71-42ed-b042-d436be1aeb1a', 'exp': 1718469928, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469028, 'jti': '7bb8d26e-f8b9-41b8-b8bf-c5182b144fdc', 'type': 'access', 'sub': '666dc1a41652e91eff5d892e', 'nbf': 1718469028, 'csrf': '24929206-3e0e-4fdb-b8cb-42bd00ba0c84', 'exp': 1718469928, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469028, 'jti': '7bb8d26e-f8b9-41b8-b8bf-c5182b144fdc', 'type': 'access', 'sub': '666dc1a41652e91eff5d892e', 'nbf': 1718469028, 'csrf': '24929206-3e0e-4fdb-b8cb-42bd00ba0c84', 'exp': 1718469928, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc1a41652e91eff5d892f')
INFO:app.extensions:po_data={'name_eng': 'newname123', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469028, 'jti': 'b20b786f-9afa-4408-941b-dcc927d19824', 'type': 'access', 'sub': '666dc1a41652e91eff5d8931', 'nbf': 1718469028, 'csrf': 'cf0026ef-efb0-4d0e-811b-3514e149cf1a', 'exp': 1718469928, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469028, 'jti': 'b20b786f-9afa-4408-941b-dcc927d19824', 'type': 'access', 'sub': '666dc1a41652e91eff5d8931', 'nbf': 1718469028, 'csrf': 'cf0026ef-efb0-4d0e-811b-3514e149cf1a', 'exp': 1718469928, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc1a41652e91eff5d8932')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטי134man', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469028, 'jti': '4edce21f-6f20-405c-8863-0f1f7b2fde46', 'type': 'access', 'sub': '666dc1a41652e91eff5d8934', 'nbf': 1718469028, 'csrf': 'c7a4c716-af3e-4f20-a1d6-101b9b87fc83', 'exp': 1718469928, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469028, 'jti': '4edce21f-6f20-405c-8863-0f1f7b2fde46', 'type': 'access', 'sub': '666dc1a41652e91eff5d8934', 'nbf': 1718469028, 'csrf': 'c7a4c716-af3e-4f20-a1d6-101b9b87fc83', 'exp': 1718469928, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc1a41652e91eff5d8935')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'myposition123', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469028, 'jti': 'fd63644b-0cf8-4e1c-9558-490b68163673', 'type': 'access', 'sub': '666dc1a41652e91eff5d8937', 'nbf': 1718469028, 'csrf': '3856f5f7-4282-4821-a42d-21cbf70d5425', 'exp': 1718469928, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469028, 'jti': 'fd63644b-0cf8-4e1c-9558-490b68163673', 'type': 'access', 'sub': '666dc1a41652e91eff5d8937', 'nbf': 1718469028, 'csrf': '3856f5f7-4282-4821-a42d-21cbf70d5425', 'exp': 1718469928, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666dc1a41652e91eff5d8938')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'myspace': 'myhandle', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469029, 'jti': '4637f252-210d-451e-a72d-4f926ae3d3aa', 'type': 'access', 'sub': '666dc1a51652e91eff5d893d', 'nbf': 1718469029, 'csrf': '76669e93-f8a3-4ebf-9233-76c14c615fe8', 'exp': 1718469929, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469029, 'jti': 'e148fd20-c8ef-49f7-8041-2a7cb282ab5f', 'type': 'access', 'sub': '666dc1a51652e91eff5d8942', 'nbf': 1718469029, 'csrf': '406acabf-e166-4b00-95c9-8656c26aed81', 'exp': 1718469929, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469029, 'jti': '1e8a3223-cf71-4b3c-87de-38926b073f1e', 'type': 'access', 'sub': '666dc1a51652e91eff5d8947', 'nbf': 1718469029, 'csrf': '15634da9-d174-4816-b68f-43e493721360', 'exp': 1718469929, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469030, 'jti': '83b8a921-63b4-44ae-9978-9200c74c5f90', 'type': 'access', 'sub': '666dc1a61652e91eff5d894c', 'nbf': 1718469030, 'csrf': '49f10fb6-0299-4bf9-8bae-0ea3b8b94447', 'exp': 1718469930, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469030, 'jti': 'df9c699c-b136-43f5-b428-e19e66153f2e', 'type': 'access', 'sub': '666dc1a61652e91eff5d894e', 'nbf': 1718469030, 'csrf': 'efbdacfc-e79a-4983-8205-aae9b8d86d3a', 'exp': 1718469930, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469030, 'jti': '0610e3c2-8c24-4404-9cda-84aebd6ef478', 'type': 'access', 'sub': '666dc1a61652e91eff5d8950', 'nbf': 1718469030, 'csrf': 'efdf9926-08c9-4c43-a83d-74ec5915e6b8', 'exp': 1718469930, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469030, 'jti': 'c16231a5-7a1d-4cd9-8594-0ab6a238adc8', 'type': 'access', 'sub': '666dc1a61652e91eff5d8952', 'nbf': 1718469030, 'csrf': '229f5ad0-2ad3-4943-8329-9368ba065480', 'exp': 1718469930, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469031, 'jti': 'ee579cc0-edb9-4aea-b7dd-953657d77cee', 'type': 'access', 'sub': '666dc1a71652e91eff5d8954', 'nbf': 1718469031, 'csrf': 'c20c8de3-6203-43c4-950d-76998139e6c6', 'exp': 1718469931, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469031, 'jti': 'ee579cc0-edb9-4aea-b7dd-953657d77cee', 'type': 'access', 'sub': '666dc1a71652e91eff5d8954', 'nbf': 1718469031, 'csrf': 'c20c8de3-6203-43c4-950d-76998139e6c6', 'exp': 1718469931, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469031, 'jti': 'ee579cc0-edb9-4aea-b7dd-953657d77cee', 'type': 'access', 'sub': '666dc1a71652e91eff5d8954', 'nbf': 1718469031, 'csrf': 'c20c8de3-6203-43c4-950d-76998139e6c6', 'exp': 1718469931, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469031, 'jti': 'ee579cc0-edb9-4aea-b7dd-953657d77cee', 'type': 'access', 'sub': '666dc1a71652e91eff5d8954', 'nbf': 1718469031, 'csrf': 'c20c8de3-6203-43c4-950d-76998139e6c6', 'exp': 1718469931, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469031, 'jti': 'ee579cc0-edb9-4aea-b7dd-953657d77cee', 'type': 'access', 'sub': '666dc1a71652e91eff5d8954', 'nbf': 1718469031, 'csrf': 'c20c8de3-6203-43c4-950d-76998139e6c6', 'exp': 1718469931, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469031, 'jti': 'ee579cc0-edb9-4aea-b7dd-953657d77cee', 'type': 'access', 'sub': '666dc1a71652e91eff5d8954', 'nbf': 1718469031, 'csrf': 'c20c8de3-6203-43c4-950d-76998139e6c6', 'exp': 1718469931, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469031, 'jti': '3a66ea5d-a68a-4c84-b48e-d56a5ec6d697', 'type': 'access', 'sub': '666dc1a71652e91eff5d8956', 'nbf': 1718469031, 'csrf': '23c78374-2c40-4d8e-bd19-edd8109e28a3', 'exp': 1718469931, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469031, 'jti': '3a66ea5d-a68a-4c84-b48e-d56a5ec6d697', 'type': 'access', 'sub': '666dc1a71652e91eff5d8956', 'nbf': 1718469031, 'csrf': '23c78374-2c40-4d8e-bd19-edd8109e28a3', 'exp': 1718469931, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469031, 'jti': '3a66ea5d-a68a-4c84-b48e-d56a5ec6d697', 'type': 'access', 'sub': '666dc1a71652e91eff5d8956', 'nbf': 1718469031, 'csrf': '23c78374-2c40-4d8e-bd19-edd8109e28a3', 'exp': 1718469931, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469031, 'jti': '3a66ea5d-a68a-4c84-b48e-d56a5ec6d697', 'type': 'access', 'sub': '666dc1a71652e91eff5d8956', 'nbf': 1718469031, 'csrf': '23c78374-2c40-4d8e-bd19-edd8109e28a3', 'exp': 1718469931, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469031, 'jti': '3a66ea5d-a68a-4c84-b48e-d56a5ec6d697', 'type': 'access', 'sub': '666dc1a71652e91eff5d8956', 'nbf': 1718469031, 'csrf': '23c78374-2c40-4d8e-bd19-edd8109e28a3', 'exp': 1718469931, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469031, 'jti': '3a66ea5d-a68a-4c84-b48e-d56a5ec6d697', 'type': 'access', 'sub': '666dc1a71652e91eff5d8956', 'nbf': 1718469031, 'csrf': '23c78374-2c40-4d8e-bd19-edd8109e28a3', 'exp': 1718469931, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469032, 'jti': '0c27c43f-9291-41aa-a349-0543ebb91209', 'type': 'access', 'sub': '666dc1a81652e91eff5d8958', 'nbf': 1718469032, 'csrf': 'd453d330-f29d-41e6-8717-b6d6ea89c6ce', 'exp': 1718469932, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718469032, 'jti': '13d34f3f-37f8-4561-aafc-bbd0ced54fc1', 'type': 'access', 'sub': '666dc1a81652e91eff5d895a', 'nbf': 1718469032, 'csrf': '3e37d1b5-9e3d-47ba-9c73-853ba4574afa', 'exp': 1718469932, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718500573, 'jti': '77828408-66da-43c9-986f-6889fa5d364d', 'type': 'access', 'sub': '666e3cdc77f6b009eab6d345', 'nbf': 1718500573, 'csrf': 'c21c137d-7e86-43d2-bdff-99131f8595dc', 'exp': 1718501473, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718500573, 'jti': '77828408-66da-43c9-986f-6889fa5d364d', 'type': 'access', 'sub': '666e3cdc77f6b009eab6d345', 'nbf': 1718500573, 'csrf': 'c21c137d-7e86-43d2-bdff-99131f8595dc', 'exp': 1718501473, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Object of type ObjectId is not JSON serializable
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 20, in generate_post
    return jsonify(generated_post=generated_post.model_dump()), 200
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\json\__init__.py", line 170, in jsonify
    return current_app.json.response(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\json\provider.py", line 215, in response
    f"{self.dumps(obj, **dump_args)}\n", mimetype=self.mimetype
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\json\provider.py", line 180, in dumps
    return json.dumps(obj, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\AppData\Local\Programs\Python\Python312\Lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
          ^^^^^^^^^^^
  File "C:\Users\dnoy1\AppData\Local\Programs\Python\Python312\Lib\json\encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\AppData\Local\Programs\Python\Python312\Lib\json\encoder.py", line 258, in iterencode
    return _iterencode(o, 0)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\flask\json\provider.py", line 120, in _default
    raise TypeError(f"Object of type {type(o).__name__} is not JSON serializable")
TypeError: Object of type ObjectId is not JSON serializable
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718500632, 'jti': '5454336a-6044-42de-8fac-66f86d62cb2f', 'type': 'access', 'sub': '666e3d18de9aeb946291f571', 'nbf': 1718500632, 'csrf': '92b2f135-c377-4f5e-b40e-e150426a7cec', 'exp': 1718501532, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718500632, 'jti': '5454336a-6044-42de-8fac-66f86d62cb2f', 'type': 'access', 'sub': '666e3d18de9aeb946291f571', 'nbf': 1718500632, 'csrf': '92b2f135-c377-4f5e-b40e-e150426a7cec', 'exp': 1718501532, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718587420, 'jti': 'f5c56c88-772c-4584-b7aa-d090e2e3200e', 'type': 'access', 'sub': '666f901c234c78f5951f07c0', 'nbf': 1718587420, 'csrf': '3baf2031-777d-4dbb-b3f3-cf77e0be5453', 'exp': 1718588320, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:'invalid_id' is not a valid ObjectId, it must be a 12-byte input or a 24-character hex string
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 19, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 17, in generate_post
    public_official = get_public_official_collection().find_one({"_id": ObjectId(po_id)})
                                                                        ^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\bson\objectid.py", line 103, in __init__
    self.__validate(oid)
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\bson\objectid.py", line 201, in __validate
    _raise_invalid_id(oid)
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\bson\objectid.py", line 35, in _raise_invalid_id
    raise InvalidId(
bson.errors.InvalidId: 'invalid_id' is not a valid ObjectId, it must be a 12-byte input or a 24-character hex string
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718587661, 'jti': '2c912c86-a486-4ef2-b333-b98db2beac5f', 'type': 'access', 'sub': '666f910d98073afac88e5e52', 'nbf': 1718587661, 'csrf': '609fafae-b83e-497d-808e-5b04e20c0e86', 'exp': 1718588561, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:'Public Official with ID 666e3cdc77f6b009eab6d345 not found'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 19, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 19, in generate_post
    raise KeyError(f"Public Official with ID {po_id} not found")
KeyError: 'Public Official with ID 666e3cdc77f6b009eab6d345 not found'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718587740, 'jti': '73e9f177-28ee-4121-a846-905fedd1d51e', 'type': 'access', 'sub': '666f915c7cef5425a0c4d399', 'nbf': 1718587740, 'csrf': 'efd519e8-74e2-4143-84e7-512b3d843047', 'exp': 1718588640, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718587740, 'jti': '7838925e-d939-4a2d-989f-ce98528f6dd0', 'type': 'access', 'sub': '666f915c7cef5425a0c4d39c', 'nbf': 1718587740, 'csrf': 'c7e5c9a1-0677-4437-a5f3-8192e7121bcd', 'exp': 1718588640, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:'Public Official with ID 666e3cdc77f6b009eab6d345 not found'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 19, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 19, in generate_post
    raise KeyError(f"Public Official with ID {po_id} not found")
KeyError: 'Public Official with ID 666e3cdc77f6b009eab6d345 not found'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718590102, 'jti': '2e7178a0-32e7-4b3d-922f-7d875b9d09f6', 'type': 'access', 'sub': '666f9a96598b88c53d6f3d33', 'nbf': 1718590102, 'csrf': '660a8a4b-35d2-4421-a117-0eb093afa421', 'exp': 1718591002, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718590102, 'jti': 'bf8eca24-3b72-4fe5-9154-b9ed3e5a1ea9', 'type': 'access', 'sub': '666f9a96598b88c53d6f3d36', 'nbf': 1718590102, 'csrf': 'edbe703d-b1f3-4f3c-b7a0-16c2a24fbc20', 'exp': 1718591002, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:'Public Official with ID 666e3cdc77f6b009eab6d345 not found'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 19, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 19, in generate_post
    raise KeyError(f"Public Official with ID {po_id} not found")
KeyError: 'Public Official with ID 666e3cdc77f6b009eab6d345 not found'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718590102, 'jti': '0cbee41f-0662-4817-95d5-950e3469f503', 'type': 'access', 'sub': '666f9a96598b88c53d6f3d39', 'nbf': 1718590102, 'csrf': 'e8a90acb-bf37-499e-9575-5d07444f3e68', 'exp': 1718591002, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:1 validation error for GeneratedPost
prompt
  String should have at least 1 character [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 19, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 25, in generate_post
    generated_post = GeneratedPost(user_id=ObjectId(user_id),
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for GeneratedPost
prompt
  String should have at least 1 character [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718590102, 'jti': '9e76d538-5872-41cb-9edd-464fbd3aa037', 'type': 'access', 'sub': '666f9a96598b88c53d6f3d3c', 'nbf': 1718590102, 'csrf': '548cd44d-1937-492c-b008-50099f83d114', 'exp': 1718591002, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718590153, 'jti': '4da7726d-b595-4179-b907-249f0d0e0092', 'type': 'access', 'sub': '666f9ac99488daa608e48b87', 'nbf': 1718590153, 'csrf': 'f1b75220-3ab2-4fb7-ac70-694b7b2d77cc', 'exp': 1718591053, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:1 validation error for GeneratedPost
social_media
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='FACEBOOK', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 19, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 25, in generate_post
    generated_post = GeneratedPost(user_id=ObjectId(user_id),
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for GeneratedPost
social_media
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='FACEBOOK', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718590153, 'jti': '172d35a0-4f86-4018-a7cd-ac7ce684ddd7', 'type': 'access', 'sub': '666f9ac99488daa608e48b89', 'nbf': 1718590153, 'csrf': '017ec761-80d5-497f-81ce-2bf182466f1f', 'exp': 1718591053, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:'Public Official with ID 666e3cdc77f6b009eab6d345 not found'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 19, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 19, in generate_post
    raise KeyError(f"Public Official with ID {po_id} not found")
KeyError: 'Public Official with ID 666e3cdc77f6b009eab6d345 not found'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718590153, 'jti': 'b29eea3b-8a19-4392-b377-09e26a92c00b', 'type': 'access', 'sub': '666f9ac99488daa608e48b8c', 'nbf': 1718590153, 'csrf': 'cb629546-5f90-4c89-8619-7d4814590a10', 'exp': 1718591053, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:2 validation errors for GeneratedPost
prompt
  String should have at least 1 character [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
social_media
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='FACEBOOK', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 19, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 25, in generate_post
    generated_post = GeneratedPost(user_id=ObjectId(user_id),
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for GeneratedPost
prompt
  String should have at least 1 character [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
social_media
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='FACEBOOK', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718590154, 'jti': '42c0e760-7eb0-43f9-955d-f9f829c9bef5', 'type': 'access', 'sub': '666f9aca9488daa608e48b8f', 'nbf': 1718590154, 'csrf': '74520c6e-044d-4f90-934b-6dc6b786b0f3', 'exp': 1718591054, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:1 validation error for GeneratedPost
social_media
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='TEST', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 19, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 25, in generate_post
    generated_post = GeneratedPost(user_id=ObjectId(user_id),
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for GeneratedPost
social_media
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='TEST', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718590208, 'jti': '7d33d4a8-e3f9-45df-89ac-6cb59564ecef', 'type': 'access', 'sub': '666f9b00db48d5cfeb27c700', 'nbf': 1718590208, 'csrf': '8a129d87-504d-4f3a-aada-7e1315888d0b', 'exp': 1718591108, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718590209, 'jti': 'b322efbf-f218-4f36-b2e2-4af87cb1633d', 'type': 'access', 'sub': '666f9b01db48d5cfeb27c703', 'nbf': 1718590209, 'csrf': 'cf67ee9f-f3e2-4b66-9930-3d605a6134b6', 'exp': 1718591109, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:'Public Official with ID 666e3cdc77f6b009eab6d345 not found'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 19, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 19, in generate_post
    raise KeyError(f"Public Official with ID {po_id} not found")
KeyError: 'Public Official with ID 666e3cdc77f6b009eab6d345 not found'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718590209, 'jti': '33b0c94c-3888-4f86-956c-8ba7d7e85d26', 'type': 'access', 'sub': '666f9b01db48d5cfeb27c706', 'nbf': 1718590209, 'csrf': '6c57b62f-b401-41a4-a9a6-6634cb5db9fa', 'exp': 1718591109, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:1 validation error for GeneratedPost
prompt
  String should have at least 1 character [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 19, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 25, in generate_post
    generated_post = GeneratedPost(user_id=ObjectId(user_id),
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for GeneratedPost
prompt
  String should have at least 1 character [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718590209, 'jti': '67a49706-f670-49dd-a98c-24137f4f6263', 'type': 'access', 'sub': '666f9b01db48d5cfeb27c709', 'nbf': 1718590209, 'csrf': 'a0999d59-73b6-4034-ac49-a736e99d9d7d', 'exp': 1718591109, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:1 validation error for GeneratedPost
social_media
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='test', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 19, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 25, in generate_post
    generated_post = GeneratedPost(user_id=ObjectId(user_id),
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for GeneratedPost
social_media
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='test', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664232, 'jti': 'e5be6eba-7f95-474d-bb89-781f297654c8', 'type': 'access', 'sub': '6670bc286237d2d149e69488', 'nbf': 1718664232, 'csrf': 'e88337c8-711a-4b72-aada-a13d61efeaf4', 'exp': 1718665132, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664232, 'jti': 'e5be6eba-7f95-474d-bb89-781f297654c8', 'type': 'access', 'sub': '6670bc286237d2d149e69488', 'nbf': 1718664232, 'csrf': 'e88337c8-711a-4b72-aada-a13d61efeaf4', 'exp': 1718665132, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:User with ID 6670bc286237d2d149e69488 does not have access to Generated Post with ID 6670bc286237d2d149e69489
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664232, 'jti': '7bd6b96e-1c6f-4694-a49a-c1c2f44298d5', 'type': 'access', 'sub': '6670bc286237d2d149e6948c', 'nbf': 1718664232, 'csrf': 'd67751f9-6f47-4442-9cd5-e55d64a198d8', 'exp': 1718665132, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664233, 'jti': '797c3735-148b-4435-8382-2807ce892a9d', 'type': 'access', 'sub': '6670bc296237d2d149e6948f', 'nbf': 1718664233, 'csrf': '88c24f6e-2482-45c6-843e-c71da78d2390', 'exp': 1718665133, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:'1' is not a valid ObjectId, it must be a 12-byte input or a 24-character hex string
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 42, in get_generated_post_by_post_id
    generated_post = generated_post_service.get_generated_post_by_id(post_id=post_id)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 38, in get_generated_post_by_id
    post_dict = get_generated_post_collection().find_one({"_id":ObjectId(post_id)})
                                                                ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\bson\objectid.py", line 103, in __init__
    self.__validate(oid)
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\bson\objectid.py", line 201, in __validate
    _raise_invalid_id(oid)
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\bson\objectid.py", line 35, in _raise_invalid_id
    raise InvalidId(
bson.errors.InvalidId: '1' is not a valid ObjectId, it must be a 12-byte input or a 24-character hex string
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664233, 'jti': 'cc3b0d57-a8ab-4a6f-ba40-784bc23448d5', 'type': 'access', 'sub': '6670bc296237d2d149e69492', 'nbf': 1718664233, 'csrf': '38a2bc39-a95c-4704-9f9e-2c9ff4af8f28', 'exp': 1718665133, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664521, 'jti': '42f1473a-3298-41ce-a0de-5ec16bf80567', 'type': 'access', 'sub': '6670bd4921547a5d992731e9', 'nbf': 1718664521, 'csrf': '07897ac9-4484-444c-9363-fd514017e579', 'exp': 1718665421, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664521, 'jti': '42f1473a-3298-41ce-a0de-5ec16bf80567', 'type': 'access', 'sub': '6670bd4921547a5d992731e9', 'nbf': 1718664521, 'csrf': '07897ac9-4484-444c-9363-fd514017e579', 'exp': 1718665421, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:User with ID 6670bd4921547a5d992731e9 does not have access to Generated Post with ID 6670bd4921547a5d992731ea
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664521, 'jti': '19c4e94d-a13e-496e-b913-c54c285adaa9', 'type': 'access', 'sub': '6670bd4921547a5d992731ed', 'nbf': 1718664521, 'csrf': '1517b539-4352-4328-903c-857e485d6870', 'exp': 1718665421, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664521, 'jti': '4240529d-240e-4e68-8769-c851da5f5af6', 'type': 'access', 'sub': '6670bd4921547a5d992731ef', 'nbf': 1718664521, 'csrf': 'a9eaff70-ab5e-4a50-9a60-d757e7f8c6f8', 'exp': 1718665421, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664521, 'jti': 'aa8b48cd-0978-4478-b0ea-117d2d1c9715', 'type': 'access', 'sub': '6670bd4921547a5d992731f1', 'nbf': 1718664521, 'csrf': 'f9799ece-4e8d-4d5c-82c0-ac7ad5f5af1d', 'exp': 1718665421, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:'1' is not a valid ObjectId, it must be a 12-byte input or a 24-character hex string
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 42, in get_generated_post_by_post_id
    generated_post = generated_post_service.get_generated_post_by_id(post_id=post_id)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 38, in get_generated_post_by_id
    post_dict = get_generated_post_collection().find_one({"_id":ObjectId(post_id)})
                                                                ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\bson\objectid.py", line 103, in __init__
    self.__validate(oid)
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\bson\objectid.py", line 201, in __validate
    _raise_invalid_id(oid)
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\bson\objectid.py", line 35, in _raise_invalid_id
    raise InvalidId(
bson.errors.InvalidId: '1' is not a valid ObjectId, it must be a 12-byte input or a 24-character hex string
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664522, 'jti': '585d3c37-ac23-4092-82a4-1db088ce225d', 'type': 'access', 'sub': '6670bd4a21547a5d992731f4', 'nbf': 1718664522, 'csrf': '561c91a8-3015-4674-92bc-5ea238e453c0', 'exp': 1718665422, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664666, 'jti': 'c8bb3390-5cb9-4de0-a919-651d70c4a41e', 'type': 'access', 'sub': '6670bddacaa5daa27de4632d', 'nbf': 1718664666, 'csrf': 'fc9946dc-19c4-4d52-a4d2-5c4d4c1f4a46', 'exp': 1718665566, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664666, 'jti': 'c8bb3390-5cb9-4de0-a919-651d70c4a41e', 'type': 'access', 'sub': '6670bddacaa5daa27de4632d', 'nbf': 1718664666, 'csrf': 'fc9946dc-19c4-4d52-a4d2-5c4d4c1f4a46', 'exp': 1718665566, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670bddacaa5daa27de4632e
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670bddacaa5daa27de4632e'), user_id=ObjectId('6670bddacaa5daa27de4632d'), public_official_id=ObjectId('6670bddacaa5daa27de4632c'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
ERROR:app.extensions:User with ID 6670bddacaa5daa27de4632d does not have access to Generated Post with ID 6670bddacaa5daa27de4632e
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664666, 'jti': '762a4bc2-366f-4f75-97c6-442fe541fcfc', 'type': 'access', 'sub': '6670bddacaa5daa27de46331', 'nbf': 1718664666, 'csrf': '7c027fcd-c9fe-4d02-8a44-5e73b32c2609', 'exp': 1718665566, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664666, 'jti': '44545890-edd0-4f30-93a7-d4a082909dc5', 'type': 'access', 'sub': '6670bddacaa5daa27de46333', 'nbf': 1718664666, 'csrf': '196cbbee-c06f-4946-aa5e-ea082f8bdadb', 'exp': 1718665566, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670bddacaa5daa27de46332
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670bddacaa5daa27de46332'), user_id=ObjectId('6670bddacaa5daa27de46331'), public_official_id=ObjectId('6670bddacaa5daa27de46330'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664666, 'jti': '1d10682c-637f-41fe-89b8-fd7d5859967b', 'type': 'access', 'sub': '6670bddacaa5daa27de46335', 'nbf': 1718664666, 'csrf': '501d30eb-640b-44a3-a263-08a41aa8627a', 'exp': 1718665566, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 1
ERROR:app.extensions:'1' is not a valid ObjectId, it must be a 12-byte input or a 24-character hex string
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 44, in get_generated_post_by_post_id
    generated_post = generated_post_service.get_generated_post_by_id(post_id=post_id)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 38, in get_generated_post_by_id
    post_dict = get_generated_post_collection().find_one({"_id":ObjectId(post_id)})
                                                                ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\bson\objectid.py", line 103, in __init__
    self.__validate(oid)
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\bson\objectid.py", line 201, in __validate
    _raise_invalid_id(oid)
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\bson\objectid.py", line 35, in _raise_invalid_id
    raise InvalidId(
bson.errors.InvalidId: '1' is not a valid ObjectId, it must be a 12-byte input or a 24-character hex string
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664666, 'jti': '1c91bb48-fd33-481c-82cb-a9d8b9ce4d43', 'type': 'access', 'sub': '6670bddacaa5daa27de46338', 'nbf': 1718664666, 'csrf': '29104aed-efb8-4965-bff4-2e75834ca089', 'exp': 1718665566, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664825, 'jti': '2e7c5ff1-b839-4dac-9f63-732cb8987be3', 'type': 'access', 'sub': '6670be79761f0759941c494b', 'nbf': 1718664825, 'csrf': 'e50e7e9f-faa5-4b65-91cf-9f3618fd709f', 'exp': 1718665725, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664825, 'jti': '2e7c5ff1-b839-4dac-9f63-732cb8987be3', 'type': 'access', 'sub': '6670be79761f0759941c494b', 'nbf': 1718664825, 'csrf': 'e50e7e9f-faa5-4b65-91cf-9f3618fd709f', 'exp': 1718665725, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670be79761f0759941c494c
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670be79761f0759941c494c'), user_id=ObjectId('6670be79761f0759941c494b'), public_official_id=ObjectId('6670be79761f0759941c494a'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664825, 'jti': 'e69665ed-9953-420c-b58f-175c6dd5e190', 'type': 'access', 'sub': '6670be79761f0759941c494f', 'nbf': 1718664825, 'csrf': 'b730d768-88ef-4c86-a7f1-56a9dc08c457', 'exp': 1718665725, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664825, 'jti': '2d4cad2f-da91-42fe-bd7c-6252aefafa40', 'type': 'access', 'sub': '6670be79761f0759941c4951', 'nbf': 1718664825, 'csrf': 'bfba8c84-f81b-46e2-af8b-23851bdb4b99', 'exp': 1718665725, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670be79761f0759941c4950
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670be79761f0759941c4950'), user_id=ObjectId('6670be79761f0759941c494f'), public_official_id=ObjectId('6670be79761f0759941c494e'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664825, 'jti': '0069c445-2aee-4206-9fb0-0ce83172b1fc', 'type': 'access', 'sub': '6670be79761f0759941c4953', 'nbf': 1718664825, 'csrf': '98fe6abe-bae7-424d-894b-21c19fe2b9be', 'exp': 1718665725, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 1
ERROR:app.extensions:'1' is not a valid ObjectId, it must be a 12-byte input or a 24-character hex string
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 44, in get_generated_post_by_post_id
    generated_post = generated_post_service.get_generated_post_by_id(post_id=post_id)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 38, in get_generated_post_by_id
    post_dict = get_generated_post_collection().find_one({"_id":ObjectId(post_id)})
                                                                ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\bson\objectid.py", line 103, in __init__
    self.__validate(oid)
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\bson\objectid.py", line 201, in __validate
    _raise_invalid_id(oid)
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\bson\objectid.py", line 35, in _raise_invalid_id
    raise InvalidId(
bson.errors.InvalidId: '1' is not a valid ObjectId, it must be a 12-byte input or a 24-character hex string
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664825, 'jti': 'fdcb505f-284d-4a68-8b9c-3be6d901be39', 'type': 'access', 'sub': '6670be79761f0759941c4956', 'nbf': 1718664825, 'csrf': 'f942dab9-1868-452f-bc66-e690866d87ea', 'exp': 1718665725, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664913, 'jti': '4f225b3e-763c-46d5-b23b-228e1336d8ff', 'type': 'access', 'sub': '6670bed1399a8066ecf7259c', 'nbf': 1718664913, 'csrf': '993a59a3-9769-4ea2-9daf-98866a24ac93', 'exp': 1718665813, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664913, 'jti': '4f225b3e-763c-46d5-b23b-228e1336d8ff', 'type': 'access', 'sub': '6670bed1399a8066ecf7259c', 'nbf': 1718664913, 'csrf': '993a59a3-9769-4ea2-9daf-98866a24ac93', 'exp': 1718665813, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670bed1399a8066ecf7259d
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670bed1399a8066ecf7259d'), user_id=ObjectId('6670bed1399a8066ecf7259c'), public_official_id=ObjectId('6670bed1399a8066ecf7259b'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664913, 'jti': '8e1ddc6c-2c3e-4840-b637-f20c5f2709d4', 'type': 'access', 'sub': '6670bed1399a8066ecf725a0', 'nbf': 1718664913, 'csrf': '705dbcc5-5ba4-4a41-9767-6c7cbd2ad038', 'exp': 1718665813, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664914, 'jti': '22b3f3af-6e10-48bd-93cb-4ed8cf43bbfc', 'type': 'access', 'sub': '6670bed1399a8066ecf725a2', 'nbf': 1718664914, 'csrf': '256735fa-9406-4b1a-bc40-d2e471ae13dc', 'exp': 1718665814, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670bed1399a8066ecf725a1
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670bed1399a8066ecf725a1'), user_id=ObjectId('6670bed1399a8066ecf725a0'), public_official_id=ObjectId('6670bed1399a8066ecf7259f'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664914, 'jti': 'b90ba9ab-9018-4eea-88c8-90cd61014eb7', 'type': 'access', 'sub': '6670bed2399a8066ecf725a4', 'nbf': 1718664914, 'csrf': 'c292f87a-23fa-4d07-9ead-e0669ae34d18', 'exp': 1718665814, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670be79761f0759941c494c
ERROR:app.extensions:app.models.generatedpost.GeneratedPost() argument after ** must be a mapping, not NoneType
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 44, in get_generated_post_by_post_id
    generated_post = generated_post_service.get_generated_post_by_id(post_id=post_id)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 39, in get_generated_post_by_id
    generated_post = GeneratedPost(**post_dict)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: app.models.generatedpost.GeneratedPost() argument after ** must be a mapping, not NoneType
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718664914, 'jti': 'a52c24a6-9f87-4a26-a762-1f7f87938c60', 'type': 'access', 'sub': '6670bed2399a8066ecf725a7', 'nbf': 1718664914, 'csrf': '969e216c-e428-448e-9c55-a90f3eaf3b91', 'exp': 1718665814, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665263, 'jti': '265bd442-03d9-444d-be74-041966fcb772', 'type': 'access', 'sub': '6670c02f209e01fb16bcf868', 'nbf': 1718665263, 'csrf': '66891f38-eb1c-471c-bbbb-b33281f73b49', 'exp': 1718666163, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665263, 'jti': '265bd442-03d9-444d-be74-041966fcb772', 'type': 'access', 'sub': '6670c02f209e01fb16bcf868', 'nbf': 1718665263, 'csrf': '66891f38-eb1c-471c-bbbb-b33281f73b49', 'exp': 1718666163, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670c02f209e01fb16bcf869
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670c02f209e01fb16bcf869'), user_id=ObjectId('6670c02f209e01fb16bcf868'), public_official_id=ObjectId('6670c02f209e01fb16bcf867'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665263, 'jti': 'a7a5a506-6c7f-44ce-8699-49ba6e2dba0c', 'type': 'access', 'sub': '6670c02f209e01fb16bcf86c', 'nbf': 1718665263, 'csrf': '6bce4858-14fa-4249-ae08-50b748517e4e', 'exp': 1718666163, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665263, 'jti': '427bb510-5d36-47ae-92eb-6ed92395889d', 'type': 'access', 'sub': '6670c02f209e01fb16bcf86e', 'nbf': 1718665263, 'csrf': 'a8c01a0a-0574-46d1-8367-20d56c12bce2', 'exp': 1718666163, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670c02f209e01fb16bcf86d
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670c02f209e01fb16bcf86d'), user_id=ObjectId('6670c02f209e01fb16bcf86c'), public_official_id=ObjectId('6670c02f209e01fb16bcf86b'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665263, 'jti': 'dbb7755c-4954-4922-bc3e-11107a83af1d', 'type': 'access', 'sub': '6670c02f209e01fb16bcf870', 'nbf': 1718665263, 'csrf': '02cf1409-432d-473a-806b-df3641a1e0e9', 'exp': 1718666163, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670be79761f0759941c494c
ERROR:app.extensions:app.models.generatedpost.GeneratedPost() argument after ** must be a mapping, not NoneType
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 44, in get_generated_post_by_post_id
    generated_post = generated_post_service.get_generated_post_by_id(post_id=post_id)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 39, in get_generated_post_by_id
    generated_post = GeneratedPost(**post_dict)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: app.models.generatedpost.GeneratedPost() argument after ** must be a mapping, not NoneType
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665263, 'jti': 'd16a4c9e-b5fa-4bf4-903d-b213588b51c8', 'type': 'access', 'sub': '6670c02f209e01fb16bcf873', 'nbf': 1718665263, 'csrf': 'd45de41f-9da3-414b-820e-c4fb720b82c9', 'exp': 1718666163, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665358, 'jti': '2f05f94a-d9de-41e9-bc80-3a632929c844', 'type': 'access', 'sub': '6670c08e82e0226f7d2f54e7', 'nbf': 1718665358, 'csrf': '715b301e-ba0c-448a-b393-062e38b6701b', 'exp': 1718666258, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665358, 'jti': '2f05f94a-d9de-41e9-bc80-3a632929c844', 'type': 'access', 'sub': '6670c08e82e0226f7d2f54e7', 'nbf': 1718665358, 'csrf': '715b301e-ba0c-448a-b393-062e38b6701b', 'exp': 1718666258, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670c08e82e0226f7d2f54e8
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670c08e82e0226f7d2f54e8'), user_id=ObjectId('6670c08e82e0226f7d2f54e7'), public_official_id=ObjectId('6670c08e82e0226f7d2f54e6'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665358, 'jti': 'efe426c0-216c-4e68-9a27-0a437e626a58', 'type': 'access', 'sub': '6670c08e82e0226f7d2f54eb', 'nbf': 1718665358, 'csrf': 'bf0102e2-52fe-49f1-8821-49d4ef5984fe', 'exp': 1718666258, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665359, 'jti': 'fbb98ebe-1028-446c-91aa-626f6a787274', 'type': 'access', 'sub': '6670c08f82e0226f7d2f54ed', 'nbf': 1718665359, 'csrf': 'f4661694-79f9-4d41-bf21-3e248878ba45', 'exp': 1718666259, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670c08e82e0226f7d2f54ec
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670c08e82e0226f7d2f54ec'), user_id=ObjectId('6670c08e82e0226f7d2f54eb'), public_official_id=ObjectId('6670c08e82e0226f7d2f54ea'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665359, 'jti': '86467803-e9fe-460a-b74a-23633f6b9f43', 'type': 'access', 'sub': '6670c08f82e0226f7d2f54ef', 'nbf': 1718665359, 'csrf': '7f503c9a-d3e9-4d6a-b1ef-a89c3c83d426', 'exp': 1718666259, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670be79761f0759941c494c
ERROR:app.extensions:app.models.generatedpost.GeneratedPost() argument after ** must be a mapping, not NoneType
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 44, in get_generated_post_by_post_id
    generated_post = generated_post_service.get_generated_post_by_id(post_id=post_id)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 39, in get_generated_post_by_id
    generated_post = GeneratedPost(**post_dict)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: app.models.generatedpost.GeneratedPost() argument after ** must be a mapping, not NoneType
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665359, 'jti': '4090535f-3e37-4872-be81-92c14104b54b', 'type': 'access', 'sub': '6670c08f82e0226f7d2f54f2', 'nbf': 1718665359, 'csrf': 'ebbf49fb-0dc4-46a5-a803-630d2c858306', 'exp': 1718666259, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665508, 'jti': '0cc5c5bd-a8e9-4024-bc09-5840b0abceeb', 'type': 'access', 'sub': '6670c124b9398305cd82676a', 'nbf': 1718665508, 'csrf': '3810c3ad-26a9-4f1d-ab70-ad788e506311', 'exp': 1718666408, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665508, 'jti': '0cc5c5bd-a8e9-4024-bc09-5840b0abceeb', 'type': 'access', 'sub': '6670c124b9398305cd82676a', 'nbf': 1718665508, 'csrf': '3810c3ad-26a9-4f1d-ab70-ad788e506311', 'exp': 1718666408, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670c124b9398305cd82676b
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670c124b9398305cd82676b'), user_id=ObjectId('6670c124b9398305cd82676a'), public_official_id=ObjectId('6670c124b9398305cd826769'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665508, 'jti': 'fd2a5fef-cc1e-4ab1-a094-3b07b9007ab4', 'type': 'access', 'sub': '6670c124b9398305cd82676e', 'nbf': 1718665508, 'csrf': '42ea0484-d609-418b-b5f9-8ccdf6b9389c', 'exp': 1718666408, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665508, 'jti': 'a48d49a3-fcd7-4946-b7d6-f19f15f40552', 'type': 'access', 'sub': '6670c124b9398305cd826770', 'nbf': 1718665508, 'csrf': '51916e5d-4833-44c7-82e2-193dde428619', 'exp': 1718666408, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670c124b9398305cd82676f
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670c124b9398305cd82676f'), user_id=ObjectId('6670c124b9398305cd82676e'), public_official_id=ObjectId('6670c124b9398305cd82676d'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665509, 'jti': 'd0dfae79-722f-451b-8fc0-33f1a415be3f', 'type': 'access', 'sub': '6670c125b9398305cd826772', 'nbf': 1718665509, 'csrf': 'cb03879c-4b42-4af2-b452-4f430cad793d', 'exp': 1718666409, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670be79761f0759941c494c
INFO:app.extensions:generated_post=None
ERROR:app.extensions:Generated Post with ID 6670be79761f0759941c494c not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665509, 'jti': 'cef23e48-3e1e-4158-a729-8dd59a4ce427', 'type': 'access', 'sub': '6670c125b9398305cd826775', 'nbf': 1718665509, 'csrf': 'cec5fb77-11f1-4783-a41f-471870ad2c2a', 'exp': 1718666409, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665676, 'jti': 'd106976a-fa69-4005-9597-9f5a6effc0f5', 'type': 'access', 'sub': '6670c1cc060b8361df0e2372', 'nbf': 1718665676, 'csrf': '64a6e875-567c-48cf-910b-704741c0d502', 'exp': 1718666576, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665676, 'jti': 'd106976a-fa69-4005-9597-9f5a6effc0f5', 'type': 'access', 'sub': '6670c1cc060b8361df0e2372', 'nbf': 1718665676, 'csrf': '64a6e875-567c-48cf-910b-704741c0d502', 'exp': 1718666576, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670c1cc060b8361df0e2373
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670c1cc060b8361df0e2373'), user_id=ObjectId('6670c1cc060b8361df0e2372'), public_official_id=ObjectId('6670c1cc060b8361df0e2371'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665677, 'jti': 'c83d26c7-e65c-43cb-a900-c05cf22682fc', 'type': 'access', 'sub': '6670c1cd060b8361df0e2376', 'nbf': 1718665677, 'csrf': '99980e79-f667-4a89-a5bc-a52fb49d5710', 'exp': 1718666577, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665677, 'jti': '5e2cb38f-2aee-495c-92f7-182b640371ea', 'type': 'access', 'sub': '6670c1cd060b8361df0e2378', 'nbf': 1718665677, 'csrf': '9f92ccb7-0d8b-45d0-8e8c-7686039979a7', 'exp': 1718666577, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670c1cd060b8361df0e2377
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670c1cd060b8361df0e2377'), user_id=ObjectId('6670c1cd060b8361df0e2376'), public_official_id=ObjectId('6670c1cc060b8361df0e2375'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665677, 'jti': 'ed2feff0-7377-4f0c-8b45-dfd754dca69e', 'type': 'access', 'sub': '6670c1cd060b8361df0e237a', 'nbf': 1718665677, 'csrf': '96a15803-dbc0-4ab9-8228-19bd2242ba2f', 'exp': 1718666577, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670be79761f0759941c494c
INFO:app.extensions:generated_post=None
ERROR:app.extensions:Generated Post with ID 6670be79761f0759941c494c not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665677, 'jti': 'ff8f6caa-d236-4ce9-ab07-d9151cdaec0f', 'type': 'access', 'sub': '6670c1cd060b8361df0e237d', 'nbf': 1718665677, 'csrf': '508281ee-699c-45f3-be32-b035a7b2248a', 'exp': 1718666577, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test2@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665677, 'jti': 'c101d347-7116-4de0-b060-00753d9cf223', 'type': 'access', 'sub': '6670c1cd060b8361df0e237f', 'nbf': 1718665677, 'csrf': '67cfcb64-1a81-46e8-a13a-d1f2a44c33fc', 'exp': 1718666577, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670c1cd060b8361df0e237e
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670c1cd060b8361df0e237e'), user_id=ObjectId('6670c1cd060b8361df0e237d'), public_official_id=ObjectId('6670c1cd060b8361df0e237c'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
ERROR:app.extensions:User with ID 6670c1cd060b8361df0e237f does not have access to Generated Post with ID 6670c1cd060b8361df0e237e
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665687, 'jti': 'b43752e2-83d2-48d2-b7db-4c73afab0a2c', 'type': 'access', 'sub': '6670c1d732b005b4860248b0', 'nbf': 1718665687, 'csrf': '9d2743af-995d-4239-a234-2decece92163', 'exp': 1718666587, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665687, 'jti': 'b43752e2-83d2-48d2-b7db-4c73afab0a2c', 'type': 'access', 'sub': '6670c1d732b005b4860248b0', 'nbf': 1718665687, 'csrf': '9d2743af-995d-4239-a234-2decece92163', 'exp': 1718666587, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670c1d732b005b4860248b1
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670c1d732b005b4860248b1'), user_id=ObjectId('6670c1d732b005b4860248b0'), public_official_id=ObjectId('6670c1d732b005b4860248af'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665687, 'jti': 'a4f0c15b-cd15-40f0-afc6-6cdc73c95f80', 'type': 'access', 'sub': '6670c1d732b005b4860248b4', 'nbf': 1718665687, 'csrf': '1cd7586a-8b7d-443f-a0b9-60f3742771d1', 'exp': 1718666587, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665687, 'jti': '3643025e-c40b-4aac-bb6f-5b0b418ffaa4', 'type': 'access', 'sub': '6670c1d732b005b4860248b6', 'nbf': 1718665687, 'csrf': '1136330d-5bad-4bfd-b49a-b4ac29bc9a42', 'exp': 1718666587, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670c1d732b005b4860248b5
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670c1d732b005b4860248b5'), user_id=ObjectId('6670c1d732b005b4860248b4'), public_official_id=ObjectId('6670c1d732b005b4860248b3'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665687, 'jti': 'e0521daf-5cc3-46b2-b350-8d19b36096eb', 'type': 'access', 'sub': '6670c1d732b005b4860248b8', 'nbf': 1718665687, 'csrf': '72a9b09e-bb4b-4afa-bc04-299e2b925a40', 'exp': 1718666587, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670be79761f0759941c494c
INFO:app.extensions:generated_post=None
ERROR:app.extensions:Generated Post with ID 6670be79761f0759941c494c not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665687, 'jti': '190fcf9d-b84c-4a7e-b3ba-6fdc479035f6', 'type': 'access', 'sub': '6670c1d732b005b4860248bb', 'nbf': 1718665687, 'csrf': '759e204c-6b2c-4b6f-afcf-3d32a60fe248', 'exp': 1718666587, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test2@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665688, 'jti': 'bc9f3da9-fe8e-4221-9efd-0238db1183ff', 'type': 'access', 'sub': '6670c1d832b005b4860248bd', 'nbf': 1718665688, 'csrf': 'a053ed8c-e309-4d72-8d60-ae11301f8b70', 'exp': 1718666588, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670c1d732b005b4860248bc
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670c1d732b005b4860248bc'), user_id=ObjectId('6670c1d732b005b4860248bb'), public_official_id=ObjectId('6670c1d732b005b4860248ba'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
ERROR:app.extensions:User with ID 6670c1d832b005b4860248bd does not have access to Generated Post with ID 6670c1d732b005b4860248bc
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665698, 'jti': '83dee05e-992e-4cfc-9d3c-f3c4d646ff78', 'type': 'access', 'sub': '6670c1e2114e8f60c7d5414f', 'nbf': 1718665698, 'csrf': '591310f5-c659-415a-9fb0-f3bfc42abe40', 'exp': 1718666598, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('6670c1e2114e8f60c7d5414f') email='test@test.com' password='__hash__scrypt:32768:8:1$5kGV8rjrvO2sNHNA$dd34765ad179f7233bbbc55d70fbb5c7e589cad08e79e8b7a442957351fdfc96ff55874b6253fe7f4c2cfad19e37f16b50303814307208abc61b34eae9e8d7b6' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665698, 'jti': 'b1d0d5ec-5412-4543-a729-6f290e9707f5', 'type': 'access', 'sub': '6670c1e2114e8f60c7d54154', 'nbf': 1718665698, 'csrf': '182c1d86-1498-4de7-ab5b-f7f59894293a', 'exp': 1718666598, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('6670c1e2114e8f60c7d54154') email='test@test.com' password='__hash__scrypt:32768:8:1$wWTGSWaP5kUnX2MU$2e2d620b86c8981a187d8fd8a3720ee6a3b1acd9d323cb6c50b30dab21f58c27e1b05818fc305e1fcf58e86b8fceebe9b734614d490f0a1769877ba5f507a8b2' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665698, 'jti': 'a53adfea-3b41-4a7c-8a3c-42aac1cd50e2', 'type': 'access', 'sub': '6670c1e2114e8f60c7d54157', 'nbf': 1718665698, 'csrf': '0d2545a7-2268-49ba-863a-14f7bc5919e0', 'exp': 1718666598, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('6670c1e2114e8f60c7d54157') email='test@test.com' password='__hash__scrypt:32768:8:1$X3hE5YgHqzwzD5gY$686a9696bb2da604e9d1271f559bb59299a298bf90042962124175f25a67283a035ea9af9a7e97ea85d14ff1c506dda095c4638fc8e134eccb9343f11d807753' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665699, 'jti': 'defa0284-a042-4886-8090-b62c707c2efc', 'type': 'access', 'sub': '6670c1e3114e8f60c7d54164', 'nbf': 1718665699, 'csrf': '46dee885-e4e9-43a1-83f5-bcf7254558ae', 'exp': 1718666599, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665699, 'jti': '7228f0c5-b852-4731-8291-274cd25171d4', 'type': 'access', 'sub': '6670c1e3114e8f60c7d54167', 'nbf': 1718665699, 'csrf': '978f1d90-f706-4e26-b635-0074b2b77177', 'exp': 1718666599, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
ERROR:app.extensions:'Public Official with ID 666e3cdc77f6b009eab6d345 not found'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 20, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 19, in generate_post
    raise KeyError(f"Public Official with ID {po_id} not found")
KeyError: 'Public Official with ID 666e3cdc77f6b009eab6d345 not found'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665699, 'jti': '43f292eb-4dda-4b93-8ab3-62be99cd32cc', 'type': 'access', 'sub': '6670c1e3114e8f60c7d5416a', 'nbf': 1718665699, 'csrf': '702fd417-e2e7-4b82-8a80-a05106cf4ecd', 'exp': 1718666599, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
ERROR:app.extensions:1 validation error for GeneratedPost
prompt
  String should have at least 1 character [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 20, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 25, in generate_post
    generated_post = GeneratedPost(user_id=ObjectId(user_id),
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for GeneratedPost
prompt
  String should have at least 1 character [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665699, 'jti': '0ca85795-8873-4f60-8c14-9a8f20719d50', 'type': 'access', 'sub': '6670c1e3114e8f60c7d5416d', 'nbf': 1718665699, 'csrf': '16691399-d9de-4c42-b198-ee47c3749df8', 'exp': 1718666599, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
ERROR:app.extensions:1 validation error for GeneratedPost
social_media
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='test', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 20, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 25, in generate_post
    generated_post = GeneratedPost(user_id=ObjectId(user_id),
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for GeneratedPost
social_media
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='test', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665699, 'jti': '8e8d7e71-418e-4ac5-bd46-2ce6a7a4c070', 'type': 'access', 'sub': '6670c1e3114e8f60c7d54170', 'nbf': 1718665699, 'csrf': '5ac8de3d-79c3-426e-9296-ed5189b528a0', 'exp': 1718666599, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665699, 'jti': '8e8d7e71-418e-4ac5-bd46-2ce6a7a4c070', 'type': 'access', 'sub': '6670c1e3114e8f60c7d54170', 'nbf': 1718665699, 'csrf': '5ac8de3d-79c3-426e-9296-ed5189b528a0', 'exp': 1718666599, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670c1e3114e8f60c7d54171
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670c1e3114e8f60c7d54171'), user_id=ObjectId('6670c1e3114e8f60c7d54170'), public_official_id=ObjectId('6670c1e3114e8f60c7d5416f'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665699, 'jti': 'abb1c025-bf58-4ede-b652-ba9eb1ac900f', 'type': 'access', 'sub': '6670c1e3114e8f60c7d54174', 'nbf': 1718665699, 'csrf': '7cc62a20-9096-407a-acf4-04d6cc1013e8', 'exp': 1718666599, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665700, 'jti': '8ca8e66b-3431-44d3-b0df-ec5be5f14c22', 'type': 'access', 'sub': '6670c1e4114e8f60c7d54176', 'nbf': 1718665700, 'csrf': 'add930d7-38a8-4144-8330-b69bdc0c2220', 'exp': 1718666600, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670c1e3114e8f60c7d54175
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670c1e3114e8f60c7d54175'), user_id=ObjectId('6670c1e3114e8f60c7d54174'), public_official_id=ObjectId('6670c1e3114e8f60c7d54173'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665700, 'jti': '3e4aee00-bdb3-4301-aee9-ce2e2ca081df', 'type': 'access', 'sub': '6670c1e4114e8f60c7d54178', 'nbf': 1718665700, 'csrf': '41d174b8-9d60-4ec8-a0a5-5305f2355fdf', 'exp': 1718666600, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670be79761f0759941c494c
INFO:app.extensions:generated_post=None
ERROR:app.extensions:Generated Post with ID 6670be79761f0759941c494c not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665700, 'jti': '60a744ae-6b9e-452a-bd0f-bf7915b7c106', 'type': 'access', 'sub': '6670c1e4114e8f60c7d5417b', 'nbf': 1718665700, 'csrf': 'b7846ee1-228f-465d-8cea-d347703d2b5c', 'exp': 1718666600, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test2@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665700, 'jti': 'd7568f05-d745-4016-8b06-cc2685d71f56', 'type': 'access', 'sub': '6670c1e4114e8f60c7d5417d', 'nbf': 1718665700, 'csrf': '6996e86b-1776-4fc8-9acb-c8a77be4c2d3', 'exp': 1718666600, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670c1e4114e8f60c7d5417c
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670c1e4114e8f60c7d5417c'), user_id=ObjectId('6670c1e4114e8f60c7d5417b'), public_official_id=ObjectId('6670c1e4114e8f60c7d5417a'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
ERROR:app.extensions:User with ID 6670c1e4114e8f60c7d5417d does not have access to Generated Post with ID 6670c1e4114e8f60c7d5417c
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665700, 'jti': '20849285-9ce8-450b-bb96-45a4160b5be9', 'type': 'access', 'sub': '6670c1e4114e8f60c7d5417f', 'nbf': 1718665700, 'csrf': 'e00bcf1c-0389-42dd-b76a-b1dfce1ffa93', 'exp': 1718666600, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665700, 'jti': '15b0b5a3-9243-4eb1-a477-db21ccd6230b', 'type': 'access', 'sub': '6670c1e4114e8f60c7d54182', 'nbf': 1718665700, 'csrf': '4fe3a618-7fc8-4300-88dd-43a770288291', 'exp': 1718666600, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665700, 'jti': '575b5546-d937-466c-a435-c1be7306482c', 'type': 'access', 'sub': '6670c1e4114e8f60c7d54184', 'nbf': 1718665700, 'csrf': 'f6c0f0a8-f2a4-4b1b-ad3b-e19468a50aa5', 'exp': 1718666600, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665701, 'jti': '734b1434-0a67-42cd-9d89-55158f8df9f4', 'type': 'access', 'sub': '6670c1e5114e8f60c7d54186', 'nbf': 1718665701, 'csrf': '69db9061-387a-445e-a33e-5c241578f25d', 'exp': 1718666601, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665701, 'jti': 'bfc9f267-cee7-4426-9cf4-8bdc12c832e0', 'type': 'access', 'sub': '6670c1e5114e8f60c7d54188', 'nbf': 1718665701, 'csrf': '858b392d-085f-4aba-ace3-8ee77749f42f', 'exp': 1718666601, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665701, 'jti': '934dbf96-8522-474a-9c9f-c1c23965165d', 'type': 'access', 'sub': '6670c1e5114e8f60c7d5418a', 'nbf': 1718665701, 'csrf': '81c8341f-ad54-4886-a8c8-9de3b70c3ce6', 'exp': 1718666601, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665701, 'jti': '71b24fed-80bc-4db5-bb0d-85696c2960e5', 'type': 'access', 'sub': '6670c1e5114e8f60c7d5418c', 'nbf': 1718665701, 'csrf': '93702c02-1f4d-4fee-bfd9-966d266f8c8a', 'exp': 1718666601, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665701, 'jti': '71b24fed-80bc-4db5-bb0d-85696c2960e5', 'type': 'access', 'sub': '6670c1e5114e8f60c7d5418c', 'nbf': 1718665701, 'csrf': '93702c02-1f4d-4fee-bfd9-966d266f8c8a', 'exp': 1718666601, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:Public Official already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 23, in create_public_official
    public_official = public_official_service.create_public_official(public_official)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\publicofficial_data_manager_mongodb.py", line 14, in create_public_official
    raise ObjectAlreadyExistsException("Public Official already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: Public Official already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665701, 'jti': '579d0cd5-adec-4de6-be0c-9e1eba288f3d', 'type': 'access', 'sub': '6670c1e5114e8f60c7d5418f', 'nbf': 1718665701, 'csrf': '0dcedc3c-a8b2-452c-a89f-c5467da24b39', 'exp': 1718666601, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665701, 'jti': '579d0cd5-adec-4de6-be0c-9e1eba288f3d', 'type': 'access', 'sub': '6670c1e5114e8f60c7d5418f', 'nbf': 1718665701, 'csrf': '0dcedc3c-a8b2-452c-a89f-c5467da24b39', 'exp': 1718666601, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665701, 'jti': '579d0cd5-adec-4de6-be0c-9e1eba288f3d', 'type': 'access', 'sub': '6670c1e5114e8f60c7d5418f', 'nbf': 1718665701, 'csrf': '0dcedc3c-a8b2-452c-a89f-c5467da24b39', 'exp': 1718666601, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665701, 'jti': '579d0cd5-adec-4de6-be0c-9e1eba288f3d', 'type': 'access', 'sub': '6670c1e5114e8f60c7d5418f', 'nbf': 1718665701, 'csrf': '0dcedc3c-a8b2-452c-a89f-c5467da24b39', 'exp': 1718666601, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665702, 'jti': '81c63d6e-269a-4c6c-a27a-daf85d6cce93', 'type': 'access', 'sub': '6670c1e5114e8f60c7d54194', 'nbf': 1718665702, 'csrf': '7e7f9425-b497-48e8-a6c2-25c4f12476ee', 'exp': 1718666602, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665702, 'jti': '81c63d6e-269a-4c6c-a27a-daf85d6cce93', 'type': 'access', 'sub': '6670c1e5114e8f60c7d54194', 'nbf': 1718665702, 'csrf': '7e7f9425-b497-48e8-a6c2-25c4f12476ee', 'exp': 1718666602, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665702, 'jti': '81c63d6e-269a-4c6c-a27a-daf85d6cce93', 'type': 'access', 'sub': '6670c1e5114e8f60c7d54194', 'nbf': 1718665702, 'csrf': '7e7f9425-b497-48e8-a6c2-25c4f12476ee', 'exp': 1718666602, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665702, 'jti': '5170ede1-fbe2-4b4e-83ca-76dfc671dd72', 'type': 'access', 'sub': '6670c1e6114e8f60c7d54198', 'nbf': 1718665702, 'csrf': '89ce674d-793d-4877-ae5c-a20c73ac1ff1', 'exp': 1718666602, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665702, 'jti': 'd2af1a3f-117e-4a9a-811f-97c82c2450ec', 'type': 'access', 'sub': '6670c1e6114e8f60c7d5419a', 'nbf': 1718665702, 'csrf': 'a55840c6-f037-4486-a233-c6b05e3d37ed', 'exp': 1718666602, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665702, 'jti': 'd2af1a3f-117e-4a9a-811f-97c82c2450ec', 'type': 'access', 'sub': '6670c1e6114e8f60c7d5419a', 'nbf': 1718665702, 'csrf': 'a55840c6-f037-4486-a233-c6b05e3d37ed', 'exp': 1718666602, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665702, 'jti': 'd2af1a3f-117e-4a9a-811f-97c82c2450ec', 'type': 'access', 'sub': '6670c1e6114e8f60c7d5419a', 'nbf': 1718665702, 'csrf': 'a55840c6-f037-4486-a233-c6b05e3d37ed', 'exp': 1718666602, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665702, 'jti': '4f3f0664-362d-4447-9687-7d702c202fe0', 'type': 'access', 'sub': '6670c1e6114e8f60c7d541a0', 'nbf': 1718665702, 'csrf': 'ddccf823-d193-4530-a28f-819a8909ce7e', 'exp': 1718666602, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Getting public official by ID 6670c1e6114e8f60c7d541a1
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665702, 'jti': '5e147a1a-9cda-48b3-85a1-d679640ecd36', 'type': 'access', 'sub': '6670c1e6114e8f60c7d541a5', 'nbf': 1718665702, 'csrf': '42028bb2-50bd-45be-9223-1d3e65df2381', 'exp': 1718666602, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665702, 'jti': '5e147a1a-9cda-48b3-85a1-d679640ecd36', 'type': 'access', 'sub': '6670c1e6114e8f60c7d541a5', 'nbf': 1718665702, 'csrf': '42028bb2-50bd-45be-9223-1d3e65df2381', 'exp': 1718666602, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='6670c1e6114e8f60c7d541a6')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665703, 'jti': '438f3413-6a2c-4466-acd4-73c658a2506e', 'type': 'access', 'sub': '6670c1e6114e8f60c7d541a8', 'nbf': 1718665703, 'csrf': 'df0c8145-9ee8-4d52-9a66-237725c7ada2', 'exp': 1718666603, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665703, 'jti': '438f3413-6a2c-4466-acd4-73c658a2506e', 'type': 'access', 'sub': '6670c1e6114e8f60c7d541a8', 'nbf': 1718665703, 'csrf': 'df0c8145-9ee8-4d52-9a66-237725c7ada2', 'exp': 1718666603, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='6670c1e7114e8f60c7d541a9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665703, 'jti': 'd71e257a-580d-46f5-ae85-84e7fc4084f3', 'type': 'access', 'sub': '6670c1e7114e8f60c7d541ab', 'nbf': 1718665703, 'csrf': '96c4b965-fc1e-4040-9259-0c40241eadf9', 'exp': 1718666603, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665703, 'jti': '4f7c74fb-088f-4326-b2d1-b870e5816dff', 'type': 'access', 'sub': '6670c1e7114e8f60c7d541ad', 'nbf': 1718665703, 'csrf': 'af5d62eb-5062-4026-bb95-dbdd77f6473f', 'exp': 1718666603, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665703, 'jti': '4f7c74fb-088f-4326-b2d1-b870e5816dff', 'type': 'access', 'sub': '6670c1e7114e8f60c7d541ad', 'nbf': 1718665703, 'csrf': 'af5d62eb-5062-4026-bb95-dbdd77f6473f', 'exp': 1718666603, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='6670c1e7114e8f60c7d541ae')
INFO:app.extensions:po_data={'name_eng': 'newname123', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665703, 'jti': '3f6afb79-f5eb-4ee6-ad01-47b95319248b', 'type': 'access', 'sub': '6670c1e7114e8f60c7d541b0', 'nbf': 1718665703, 'csrf': '7bd5c2ca-f39e-458a-81ad-3042e90d28ef', 'exp': 1718666603, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665703, 'jti': '3f6afb79-f5eb-4ee6-ad01-47b95319248b', 'type': 'access', 'sub': '6670c1e7114e8f60c7d541b0', 'nbf': 1718665703, 'csrf': '7bd5c2ca-f39e-458a-81ad-3042e90d28ef', 'exp': 1718666603, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='6670c1e7114e8f60c7d541b1')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטי134man', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665703, 'jti': '72fbdf8a-c7a3-48a4-af3c-6b578d9dc276', 'type': 'access', 'sub': '6670c1e7114e8f60c7d541b3', 'nbf': 1718665703, 'csrf': 'c24d4a1f-c762-4fe5-b786-e3fae69d7272', 'exp': 1718666603, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665703, 'jti': '72fbdf8a-c7a3-48a4-af3c-6b578d9dc276', 'type': 'access', 'sub': '6670c1e7114e8f60c7d541b3', 'nbf': 1718665703, 'csrf': 'c24d4a1f-c762-4fe5-b786-e3fae69d7272', 'exp': 1718666603, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='6670c1e7114e8f60c7d541b4')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'myposition123', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665704, 'jti': '467c0653-951f-43e8-8d05-8be24e9004a0', 'type': 'access', 'sub': '6670c1e7114e8f60c7d541b6', 'nbf': 1718665704, 'csrf': 'c1898f2d-8fe0-4521-ac5c-6d08f44f7cf6', 'exp': 1718666604, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665704, 'jti': '467c0653-951f-43e8-8d05-8be24e9004a0', 'type': 'access', 'sub': '6670c1e7114e8f60c7d541b6', 'nbf': 1718665704, 'csrf': 'c1898f2d-8fe0-4521-ac5c-6d08f44f7cf6', 'exp': 1718666604, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='6670c1e8114e8f60c7d541b7')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'myspace': 'myhandle', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665704, 'jti': '2ae106ab-1b8c-4b04-957c-e4e316a04f9f', 'type': 'access', 'sub': '6670c1e8114e8f60c7d541bc', 'nbf': 1718665704, 'csrf': 'ae3b9c70-3049-418c-9998-a93e3d30e944', 'exp': 1718666604, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665704, 'jti': 'fb9b70f4-2ced-4dac-be86-8705dd493347', 'type': 'access', 'sub': '6670c1e8114e8f60c7d541c1', 'nbf': 1718665704, 'csrf': 'eb507f7a-a7a5-419f-ba1e-7da31edb2294', 'exp': 1718666604, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665705, 'jti': '9d6aaace-357a-41c8-9135-209822831d5c', 'type': 'access', 'sub': '6670c1e9114e8f60c7d541c6', 'nbf': 1718665705, 'csrf': '5b3cead8-a6cb-4171-9ae7-5ae71f4f6954', 'exp': 1718666605, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665705, 'jti': 'f44334d7-5cf6-4a53-81a0-017fbed7fbe1', 'type': 'access', 'sub': '6670c1e9114e8f60c7d541cb', 'nbf': 1718665705, 'csrf': '5e16f5d4-1b28-4b3d-a65b-77d89cea5346', 'exp': 1718666605, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665705, 'jti': '9bafa928-3b1b-4b50-bd04-14252d709707', 'type': 'access', 'sub': '6670c1e9114e8f60c7d541cd', 'nbf': 1718665705, 'csrf': '12a9b38f-03d1-4cc7-8470-3167c705910b', 'exp': 1718666605, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665705, 'jti': '82c578bb-dd20-43ad-9008-3e04aaeca79f', 'type': 'access', 'sub': '6670c1e9114e8f60c7d541cf', 'nbf': 1718665705, 'csrf': 'e07b4bda-0600-4e9f-8319-e6526067d483', 'exp': 1718666605, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665706, 'jti': 'fbfddc1b-5921-4bf1-b6f3-3ea73de1d750', 'type': 'access', 'sub': '6670c1ea114e8f60c7d541d1', 'nbf': 1718665706, 'csrf': '0e7e831c-de6e-4593-b239-9058be4656a2', 'exp': 1718666606, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665706, 'jti': 'a5a6cda8-a9c9-4fe0-877f-746d342ba886', 'type': 'access', 'sub': '6670c1ea114e8f60c7d541d3', 'nbf': 1718665706, 'csrf': '1b1f46af-5826-441f-bd8f-a1603ed44965', 'exp': 1718666606, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665706, 'jti': 'a5a6cda8-a9c9-4fe0-877f-746d342ba886', 'type': 'access', 'sub': '6670c1ea114e8f60c7d541d3', 'nbf': 1718665706, 'csrf': '1b1f46af-5826-441f-bd8f-a1603ed44965', 'exp': 1718666606, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665706, 'jti': 'a5a6cda8-a9c9-4fe0-877f-746d342ba886', 'type': 'access', 'sub': '6670c1ea114e8f60c7d541d3', 'nbf': 1718665706, 'csrf': '1b1f46af-5826-441f-bd8f-a1603ed44965', 'exp': 1718666606, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665706, 'jti': 'a5a6cda8-a9c9-4fe0-877f-746d342ba886', 'type': 'access', 'sub': '6670c1ea114e8f60c7d541d3', 'nbf': 1718665706, 'csrf': '1b1f46af-5826-441f-bd8f-a1603ed44965', 'exp': 1718666606, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665706, 'jti': 'a5a6cda8-a9c9-4fe0-877f-746d342ba886', 'type': 'access', 'sub': '6670c1ea114e8f60c7d541d3', 'nbf': 1718665706, 'csrf': '1b1f46af-5826-441f-bd8f-a1603ed44965', 'exp': 1718666606, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665706, 'jti': 'a5a6cda8-a9c9-4fe0-877f-746d342ba886', 'type': 'access', 'sub': '6670c1ea114e8f60c7d541d3', 'nbf': 1718665706, 'csrf': '1b1f46af-5826-441f-bd8f-a1603ed44965', 'exp': 1718666606, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665706, 'jti': 'a6f26184-f816-4063-8d66-85744e70c335', 'type': 'access', 'sub': '6670c1ea114e8f60c7d541d5', 'nbf': 1718665706, 'csrf': '202a61ac-eeae-4eac-bce9-1c90b0907750', 'exp': 1718666606, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665706, 'jti': 'a6f26184-f816-4063-8d66-85744e70c335', 'type': 'access', 'sub': '6670c1ea114e8f60c7d541d5', 'nbf': 1718665706, 'csrf': '202a61ac-eeae-4eac-bce9-1c90b0907750', 'exp': 1718666606, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665706, 'jti': 'a6f26184-f816-4063-8d66-85744e70c335', 'type': 'access', 'sub': '6670c1ea114e8f60c7d541d5', 'nbf': 1718665706, 'csrf': '202a61ac-eeae-4eac-bce9-1c90b0907750', 'exp': 1718666606, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665706, 'jti': 'a6f26184-f816-4063-8d66-85744e70c335', 'type': 'access', 'sub': '6670c1ea114e8f60c7d541d5', 'nbf': 1718665706, 'csrf': '202a61ac-eeae-4eac-bce9-1c90b0907750', 'exp': 1718666606, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665706, 'jti': 'a6f26184-f816-4063-8d66-85744e70c335', 'type': 'access', 'sub': '6670c1ea114e8f60c7d541d5', 'nbf': 1718665706, 'csrf': '202a61ac-eeae-4eac-bce9-1c90b0907750', 'exp': 1718666606, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665706, 'jti': 'a6f26184-f816-4063-8d66-85744e70c335', 'type': 'access', 'sub': '6670c1ea114e8f60c7d541d5', 'nbf': 1718665706, 'csrf': '202a61ac-eeae-4eac-bce9-1c90b0907750', 'exp': 1718666606, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665707, 'jti': '2cc325d3-7ceb-4dbf-ae8b-c85e04b44e50', 'type': 'access', 'sub': '6670c1eb114e8f60c7d541d7', 'nbf': 1718665707, 'csrf': '39d16a95-0e02-419d-9dd9-239d4746ef86', 'exp': 1718666607, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718665707, 'jti': '5ae7df89-108c-4ad3-99e1-b5f570c93778', 'type': 'access', 'sub': '6670c1eb114e8f60c7d541d9', 'nbf': 1718665707, 'csrf': '4b8b2979-1440-4da3-95ce-75f4acca6987', 'exp': 1718666607, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666742, 'jti': 'bb2b10f9-9081-4676-b480-baf7e60a21ae', 'type': 'access', 'sub': '6670c5f65e2aece5c01998a7', 'nbf': 1718666742, 'csrf': '359345f5-b82c-463d-aa9d-437a5f398dda', 'exp': 1718667642, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666742, 'jti': 'bb2b10f9-9081-4676-b480-baf7e60a21ae', 'type': 'access', 'sub': '6670c5f65e2aece5c01998a7', 'nbf': 1718666742, 'csrf': '359345f5-b82c-463d-aa9d-437a5f398dda', 'exp': 1718667642, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666742, 'jti': 'bb2b10f9-9081-4676-b480-baf7e60a21ae', 'type': 'access', 'sub': '6670c5f65e2aece5c01998a7', 'nbf': 1718666742, 'csrf': '359345f5-b82c-463d-aa9d-437a5f398dda', 'exp': 1718667642, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666742, 'jti': 'bb2b10f9-9081-4676-b480-baf7e60a21ae', 'type': 'access', 'sub': '6670c5f65e2aece5c01998a7', 'nbf': 1718666742, 'csrf': '359345f5-b82c-463d-aa9d-437a5f398dda', 'exp': 1718667642, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670c5f65e2aece5c01998a8
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666848, 'jti': '8af4b13b-da06-413d-bced-6a791eaaa16e', 'type': 'access', 'sub': '6670c660e3941b5f2fa51b1f', 'nbf': 1718666848, 'csrf': 'a9d07c11-ef4b-4c10-bffd-26782f179799', 'exp': 1718667748, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666848, 'jti': '8af4b13b-da06-413d-bced-6a791eaaa16e', 'type': 'access', 'sub': '6670c660e3941b5f2fa51b1f', 'nbf': 1718666848, 'csrf': 'a9d07c11-ef4b-4c10-bffd-26782f179799', 'exp': 1718667748, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666848, 'jti': '8af4b13b-da06-413d-bced-6a791eaaa16e', 'type': 'access', 'sub': '6670c660e3941b5f2fa51b1f', 'nbf': 1718666848, 'csrf': 'a9d07c11-ef4b-4c10-bffd-26782f179799', 'exp': 1718667748, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666848, 'jti': '8af4b13b-da06-413d-bced-6a791eaaa16e', 'type': 'access', 'sub': '6670c660e3941b5f2fa51b1f', 'nbf': 1718666848, 'csrf': 'a9d07c11-ef4b-4c10-bffd-26782f179799', 'exp': 1718667748, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670c660e3941b5f2fa51b20
ERROR:app.extensions:User with ID 6670c660e3941b5f2fa51b1f does not have access to Generated Post for user ID 6670c660e3941b5f2fa51b20
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666870, 'jti': 'cbc3ee6f-4f8e-48f0-bc40-b9ac6c22e460', 'type': 'access', 'sub': '6670c67641f70614d3cc8000', 'nbf': 1718666870, 'csrf': '57474cb7-ff21-4078-9f29-48c223d25a31', 'exp': 1718667770, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666870, 'jti': 'cbc3ee6f-4f8e-48f0-bc40-b9ac6c22e460', 'type': 'access', 'sub': '6670c67641f70614d3cc8000', 'nbf': 1718666870, 'csrf': '57474cb7-ff21-4078-9f29-48c223d25a31', 'exp': 1718667770, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666870, 'jti': 'cbc3ee6f-4f8e-48f0-bc40-b9ac6c22e460', 'type': 'access', 'sub': '6670c67641f70614d3cc8000', 'nbf': 1718666870, 'csrf': '57474cb7-ff21-4078-9f29-48c223d25a31', 'exp': 1718667770, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666870, 'jti': 'cbc3ee6f-4f8e-48f0-bc40-b9ac6c22e460', 'type': 'access', 'sub': '6670c67641f70614d3cc8000', 'nbf': 1718666870, 'csrf': '57474cb7-ff21-4078-9f29-48c223d25a31', 'exp': 1718667770, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670c67641f70614d3cc8000
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666935, 'jti': '7a470382-d17e-4216-bfb1-5de9f681dd93', 'type': 'access', 'sub': '6670c6b7847492ace02738de', 'nbf': 1718666935, 'csrf': '0caacbd4-d74c-4b63-a7fb-9adac1494d3a', 'exp': 1718667835, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666935, 'jti': '7a470382-d17e-4216-bfb1-5de9f681dd93', 'type': 'access', 'sub': '6670c6b7847492ace02738de', 'nbf': 1718666935, 'csrf': '0caacbd4-d74c-4b63-a7fb-9adac1494d3a', 'exp': 1718667835, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666935, 'jti': '7a470382-d17e-4216-bfb1-5de9f681dd93', 'type': 'access', 'sub': '6670c6b7847492ace02738de', 'nbf': 1718666935, 'csrf': '0caacbd4-d74c-4b63-a7fb-9adac1494d3a', 'exp': 1718667835, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666935, 'jti': '7a470382-d17e-4216-bfb1-5de9f681dd93', 'type': 'access', 'sub': '6670c6b7847492ace02738de', 'nbf': 1718666935, 'csrf': '0caacbd4-d74c-4b63-a7fb-9adac1494d3a', 'exp': 1718667835, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670c6b7847492ace02738de
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666935, 'jti': 'df665f0c-a323-49c2-b4fb-1bce5618147e', 'type': 'access', 'sub': '6670c6b7847492ace02738e4', 'nbf': 1718666935, 'csrf': 'fa6dba71-db6c-43d7-b872-d0a976aa0b96', 'exp': 1718667835, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666935, 'jti': 'df665f0c-a323-49c2-b4fb-1bce5618147e', 'type': 'access', 'sub': '6670c6b7847492ace02738e4', 'nbf': 1718666935, 'csrf': 'fa6dba71-db6c-43d7-b872-d0a976aa0b96', 'exp': 1718667835, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666935, 'jti': 'df665f0c-a323-49c2-b4fb-1bce5618147e', 'type': 'access', 'sub': '6670c6b7847492ace02738e4', 'nbf': 1718666935, 'csrf': 'fa6dba71-db6c-43d7-b872-d0a976aa0b96', 'exp': 1718667835, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666935, 'jti': '0e08702b-2be0-4946-a633-f8232f40d2db', 'type': 'access', 'sub': '6670c6b7847492ace02738e8', 'nbf': 1718666935, 'csrf': 'cb4f1562-be3d-40b3-b1b9-fd49092545db', 'exp': 1718667835, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670c6b7847492ace02738e4
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666977, 'jti': '37c3e8f3-2c65-4de6-9752-c8c38cfba33b', 'type': 'access', 'sub': '6670c6e162698b5b90adce10', 'nbf': 1718666977, 'csrf': 'a3848fe8-8b23-476a-9cf5-8bf6a8540cc1', 'exp': 1718667877, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666977, 'jti': '37c3e8f3-2c65-4de6-9752-c8c38cfba33b', 'type': 'access', 'sub': '6670c6e162698b5b90adce10', 'nbf': 1718666977, 'csrf': 'a3848fe8-8b23-476a-9cf5-8bf6a8540cc1', 'exp': 1718667877, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666977, 'jti': '37c3e8f3-2c65-4de6-9752-c8c38cfba33b', 'type': 'access', 'sub': '6670c6e162698b5b90adce10', 'nbf': 1718666977, 'csrf': 'a3848fe8-8b23-476a-9cf5-8bf6a8540cc1', 'exp': 1718667877, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666977, 'jti': '37c3e8f3-2c65-4de6-9752-c8c38cfba33b', 'type': 'access', 'sub': '6670c6e162698b5b90adce10', 'nbf': 1718666977, 'csrf': 'a3848fe8-8b23-476a-9cf5-8bf6a8540cc1', 'exp': 1718667877, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670c6e162698b5b90adce10
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666977, 'jti': 'd5ecb9fa-1c8d-4476-876e-f962f23c25d9', 'type': 'access', 'sub': '6670c6e162698b5b90adce16', 'nbf': 1718666977, 'csrf': '79288d25-92d6-4965-8344-d4e33948a694', 'exp': 1718667877, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666977, 'jti': 'd5ecb9fa-1c8d-4476-876e-f962f23c25d9', 'type': 'access', 'sub': '6670c6e162698b5b90adce16', 'nbf': 1718666977, 'csrf': '79288d25-92d6-4965-8344-d4e33948a694', 'exp': 1718667877, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666977, 'jti': 'd5ecb9fa-1c8d-4476-876e-f962f23c25d9', 'type': 'access', 'sub': '6670c6e162698b5b90adce16', 'nbf': 1718666977, 'csrf': '79288d25-92d6-4965-8344-d4e33948a694', 'exp': 1718667877, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666977, 'jti': '4d4a357c-0133-4c95-bddf-afa95c3308e8', 'type': 'access', 'sub': '6670c6e162698b5b90adce1a', 'nbf': 1718666977, 'csrf': 'a310ddc1-4d89-4975-be9a-1b9b9061ca58', 'exp': 1718667877, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670c6e162698b5b90adce16
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718666977, 'jti': '26114aba-8975-447a-ae7e-d1ecbba0ddbf', 'type': 'access', 'sub': '6670c6e162698b5b90adce1c', 'nbf': 1718666977, 'csrf': '30ddebfd-3beb-42bd-9ea0-6e71fa519305', 'exp': 1718667877, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670be79761f0759941c494c
ERROR:app.extensions:User with ID 6670c6e162698b5b90adce1c does not have access to Generated Post for user ID 6670be79761f0759941c494c
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667118, 'jti': 'd41e3a8d-b809-4dbc-8e35-68f6080b51a5', 'type': 'access', 'sub': '6670c76ee0f2e68ac4cfb5ae', 'nbf': 1718667118, 'csrf': 'd304f340-7edb-4030-8766-d2014a1a16bd', 'exp': 1718668018, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667118, 'jti': 'd41e3a8d-b809-4dbc-8e35-68f6080b51a5', 'type': 'access', 'sub': '6670c76ee0f2e68ac4cfb5ae', 'nbf': 1718667118, 'csrf': 'd304f340-7edb-4030-8766-d2014a1a16bd', 'exp': 1718668018, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667118, 'jti': 'd41e3a8d-b809-4dbc-8e35-68f6080b51a5', 'type': 'access', 'sub': '6670c76ee0f2e68ac4cfb5ae', 'nbf': 1718667118, 'csrf': 'd304f340-7edb-4030-8766-d2014a1a16bd', 'exp': 1718668018, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667118, 'jti': 'd41e3a8d-b809-4dbc-8e35-68f6080b51a5', 'type': 'access', 'sub': '6670c76ee0f2e68ac4cfb5ae', 'nbf': 1718667118, 'csrf': 'd304f340-7edb-4030-8766-d2014a1a16bd', 'exp': 1718668018, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670c76ee0f2e68ac4cfb5ae
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667118, 'jti': 'da48342d-48b3-409e-9f11-dbb9efd31912', 'type': 'access', 'sub': '6670c76ee0f2e68ac4cfb5b4', 'nbf': 1718667118, 'csrf': '23133c24-ac2e-4691-8ca6-b816ff6263b2', 'exp': 1718668018, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667118, 'jti': 'da48342d-48b3-409e-9f11-dbb9efd31912', 'type': 'access', 'sub': '6670c76ee0f2e68ac4cfb5b4', 'nbf': 1718667118, 'csrf': '23133c24-ac2e-4691-8ca6-b816ff6263b2', 'exp': 1718668018, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667118, 'jti': 'da48342d-48b3-409e-9f11-dbb9efd31912', 'type': 'access', 'sub': '6670c76ee0f2e68ac4cfb5b4', 'nbf': 1718667118, 'csrf': '23133c24-ac2e-4691-8ca6-b816ff6263b2', 'exp': 1718668018, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667118, 'jti': 'd039b7f7-f6a5-42f8-a14c-f088f1864400', 'type': 'access', 'sub': '6670c76ee0f2e68ac4cfb5b8', 'nbf': 1718667118, 'csrf': 'a619ca8c-cebb-4377-a840-851ea4be3246', 'exp': 1718668018, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670c76ee0f2e68ac4cfb5b4
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667118, 'jti': 'f7fbc489-2586-4e7a-86e7-4aeacb527de2', 'type': 'access', 'sub': '6670c76ee0f2e68ac4cfb5ba', 'nbf': 1718667118, 'csrf': 'f307e63d-d372-4783-a00f-eb9089de1996', 'exp': 1718668018, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670c76ee0f2e68ac4cfb5ba
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667118, 'jti': 'c8673cef-19ff-4652-adb2-b0cc38064549', 'type': 'access', 'sub': '6670c76ee0f2e68ac4cfb5bc', 'nbf': 1718667118, 'csrf': '7c9ace05-c491-409e-a9e3-3b501eabbf01', 'exp': 1718668018, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670be79761f0759941c494c
ERROR:app.extensions:User with ID 6670c76ee0f2e68ac4cfb5bc does not have access to Generated Post for user ID 6670be79761f0759941c494c
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667408, 'jti': 'd52848eb-8c20-4009-8f93-8cc0606faf3a', 'type': 'access', 'sub': '6670c89018c60c41dd2ac20c', 'nbf': 1718667408, 'csrf': '0cc550c5-3b74-4e33-8644-57abeee21b55', 'exp': 1718668308, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('6670c89018c60c41dd2ac20c') email='test@test.com' password='__hash__scrypt:32768:8:1$QKchRk8LRrTu30Pa$bc71f572f82f99a8aba21dd9a4b82308a38fc17977bde720062cbe5286212748420b02002edaffdb2fc3145d20f1340dd421646032d47d48d2958dea8fb64ba3' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667408, 'jti': '0c4cda08-5c2d-4c05-acbd-9dddda617291', 'type': 'access', 'sub': '6670c89018c60c41dd2ac211', 'nbf': 1718667408, 'csrf': '3bc88fca-4b4e-4a58-b30a-3640987c7171', 'exp': 1718668308, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('6670c89018c60c41dd2ac211') email='test@test.com' password='__hash__scrypt:32768:8:1$al15vbS2N1IvJ6V1$52c7424c22a03981151ed867cf9106e1baf206f46f16ffa54d5da531226dfdb9e35f5217a765d12b45cfa7502679c30b40c2925e1911f08a875dc4d9496e49b8' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667408, 'jti': 'e054db9f-bd3c-4ec0-9f24-01bd156688e3', 'type': 'access', 'sub': '6670c89018c60c41dd2ac214', 'nbf': 1718667408, 'csrf': '60485f5d-2b90-4172-b647-ba47e88c41e6', 'exp': 1718668308, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('6670c89018c60c41dd2ac214') email='test@test.com' password='__hash__scrypt:32768:8:1$UGkbzt5j7qhDmyDE$275fbe3c5c2d11d945fcc8a630f6471033764a01c831a5f75b146f64747e027a095b7aec7694267b7115134abaa4cf3e0b7e6139b9a85a8e0ea5dd3bc194e677' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667409, 'jti': 'f99c006d-d805-4a01-85da-e8e57c123c5d', 'type': 'access', 'sub': '6670c89118c60c41dd2ac221', 'nbf': 1718667409, 'csrf': '84a6e787-7279-4d00-961c-232d86f4df6d', 'exp': 1718668309, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667409, 'jti': 'd7c980d2-0a4b-4cdb-b228-dd75c1f95b64', 'type': 'access', 'sub': '6670c89118c60c41dd2ac224', 'nbf': 1718667409, 'csrf': '8df3d296-6e17-49e8-89d5-77c53d505f7a', 'exp': 1718668309, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
ERROR:app.extensions:'Public Official with ID 666e3cdc77f6b009eab6d345 not found'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 20, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 19, in generate_post
    raise KeyError(f"Public Official with ID {po_id} not found")
KeyError: 'Public Official with ID 666e3cdc77f6b009eab6d345 not found'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667409, 'jti': '29c8723f-541a-408e-b34a-9684a9243387', 'type': 'access', 'sub': '6670c89118c60c41dd2ac227', 'nbf': 1718667409, 'csrf': '9417b33b-480b-49b9-a5df-283da15df782', 'exp': 1718668309, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
ERROR:app.extensions:1 validation error for GeneratedPost
prompt
  String should have at least 1 character [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 20, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 25, in generate_post
    generated_post = GeneratedPost(user_id=ObjectId(user_id),
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for GeneratedPost
prompt
  String should have at least 1 character [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667409, 'jti': 'e9cde656-024c-43e8-8a79-4d78e1c7d742', 'type': 'access', 'sub': '6670c89118c60c41dd2ac22a', 'nbf': 1718667409, 'csrf': 'be6e7fb4-e0eb-4759-a64b-a3bbb8b357a2', 'exp': 1718668309, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
ERROR:app.extensions:1 validation error for GeneratedPost
social_media
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='test', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 20, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 25, in generate_post
    generated_post = GeneratedPost(user_id=ObjectId(user_id),
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for GeneratedPost
social_media
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='test', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667409, 'jti': '14c42f2c-a879-44d3-80b0-d7074d0bff55', 'type': 'access', 'sub': '6670c89118c60c41dd2ac22d', 'nbf': 1718667409, 'csrf': 'e2a99060-eeb9-4ceb-8309-42284c47eb40', 'exp': 1718668309, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test2@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667409, 'jti': 'd085fdb8-a479-4b9a-b1bd-c730dde94642', 'type': 'access', 'sub': '6670c89118c60c41dd2ac22f', 'nbf': 1718667409, 'csrf': '8ee77b4f-e435-4482-9b72-29e618219073', 'exp': 1718668309, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test3@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667409, 'jti': 'd1cf2162-e230-4f7f-ac36-e4c8e0366e91', 'type': 'access', 'sub': '6670c89118c60c41dd2ac231', 'nbf': 1718667409, 'csrf': 'e4aabd6c-8e6c-404f-8ee2-20cb4a9b673b', 'exp': 1718668309, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667410, 'jti': 'cab29ed2-eeb1-46f8-8215-fdffa933509a', 'type': 'access', 'sub': '6670c89218c60c41dd2ac233', 'nbf': 1718667410, 'csrf': 'b0c09ff3-76cc-4a65-b384-c950ce3dfd00', 'exp': 1718668310, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all generated posts
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667410, 'jti': '7425a956-8252-461f-8072-f5d3a5843a0e', 'type': 'access', 'sub': '6670c89218c60c41dd2ac235', 'nbf': 1718667410, 'csrf': '9815680b-73fd-4101-a707-983a84c3f2f0', 'exp': 1718668310, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all generated posts
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667410, 'jti': '2dd8ac41-582c-4bd6-a362-4c7d24e81e2d', 'type': 'access', 'sub': '6670c89218c60c41dd2ac237', 'nbf': 1718667410, 'csrf': '3382355c-795c-4553-9d46-0a8923fa6c28', 'exp': 1718668310, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670be79761f0759941c494c
ERROR:app.extensions:User with ID 6670c89218c60c41dd2ac237 does not have access to Generated Post for user ID 6670be79761f0759941c494c
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667410, 'jti': 'f559d207-df78-4e5e-86be-4af59c9de564', 'type': 'access', 'sub': '6670c89218c60c41dd2ac23a', 'nbf': 1718667410, 'csrf': '2c481d67-4083-4b9f-8ec5-96e7da502882', 'exp': 1718668310, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667410, 'jti': 'f559d207-df78-4e5e-86be-4af59c9de564', 'type': 'access', 'sub': '6670c89218c60c41dd2ac23a', 'nbf': 1718667410, 'csrf': '2c481d67-4083-4b9f-8ec5-96e7da502882', 'exp': 1718668310, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670c89218c60c41dd2ac23b
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670c89218c60c41dd2ac23b'), user_id=ObjectId('6670c89218c60c41dd2ac23a'), public_official_id=ObjectId('6670c89218c60c41dd2ac239'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667410, 'jti': '0b65878b-f3f5-4f93-826f-050afa15f043', 'type': 'access', 'sub': '6670c89218c60c41dd2ac23e', 'nbf': 1718667410, 'csrf': '8430b8ee-02f7-41be-b0cc-d1af498f96bc', 'exp': 1718668310, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667410, 'jti': 'ad8f0ef8-5b64-4d04-8139-ce290a21f06d', 'type': 'access', 'sub': '6670c89218c60c41dd2ac240', 'nbf': 1718667410, 'csrf': 'dd6171d2-64c5-4cee-95fb-47f6868334a1', 'exp': 1718668310, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670c89218c60c41dd2ac23f
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670c89218c60c41dd2ac23f'), user_id=ObjectId('6670c89218c60c41dd2ac23e'), public_official_id=ObjectId('6670c89218c60c41dd2ac23d'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667411, 'jti': '9003d1d8-4415-4a96-90c8-298e9e08d4ec', 'type': 'access', 'sub': '6670c89318c60c41dd2ac242', 'nbf': 1718667411, 'csrf': '8b30c0b1-4709-4409-a92c-6b3662035590', 'exp': 1718668311, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670be79761f0759941c494c
INFO:app.extensions:generated_post=None
ERROR:app.extensions:Generated Post with ID 6670be79761f0759941c494c not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667411, 'jti': '40cd97bd-83f5-4b12-b3ec-c052f7f2b10d', 'type': 'access', 'sub': '6670c89318c60c41dd2ac245', 'nbf': 1718667411, 'csrf': '0f3d7ea8-c935-466a-8674-f7d78b5d2374', 'exp': 1718668311, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test2@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667411, 'jti': '7af88dec-e59d-4dfe-987c-c4723d337875', 'type': 'access', 'sub': '6670c89318c60c41dd2ac247', 'nbf': 1718667411, 'csrf': 'a25b4acb-9e6e-454e-b875-85964e8553cb', 'exp': 1718668311, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670c89318c60c41dd2ac246
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670c89318c60c41dd2ac246'), user_id=ObjectId('6670c89318c60c41dd2ac245'), public_official_id=ObjectId('6670c89318c60c41dd2ac244'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
ERROR:app.extensions:User with ID 6670c89318c60c41dd2ac247 does not have access to Generated Post with ID 6670c89318c60c41dd2ac246
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667411, 'jti': 'e0a9fd3f-a0c1-4919-b4b4-eebd8dd9fc96', 'type': 'access', 'sub': '6670c89318c60c41dd2ac24a', 'nbf': 1718667411, 'csrf': 'e445126c-5dfc-4d28-a71e-b84dbcf62897', 'exp': 1718668311, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667411, 'jti': 'e0a9fd3f-a0c1-4919-b4b4-eebd8dd9fc96', 'type': 'access', 'sub': '6670c89318c60c41dd2ac24a', 'nbf': 1718667411, 'csrf': 'e445126c-5dfc-4d28-a71e-b84dbcf62897', 'exp': 1718668311, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667411, 'jti': 'e0a9fd3f-a0c1-4919-b4b4-eebd8dd9fc96', 'type': 'access', 'sub': '6670c89318c60c41dd2ac24a', 'nbf': 1718667411, 'csrf': 'e445126c-5dfc-4d28-a71e-b84dbcf62897', 'exp': 1718668311, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667411, 'jti': 'e0a9fd3f-a0c1-4919-b4b4-eebd8dd9fc96', 'type': 'access', 'sub': '6670c89318c60c41dd2ac24a', 'nbf': 1718667411, 'csrf': 'e445126c-5dfc-4d28-a71e-b84dbcf62897', 'exp': 1718668311, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670c89318c60c41dd2ac24a
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667411, 'jti': '9b6adfbf-51a4-4efa-9337-97809d325653', 'type': 'access', 'sub': '6670c89318c60c41dd2ac250', 'nbf': 1718667411, 'csrf': '07284649-7f1f-4af5-8d67-af65a3e0b0c3', 'exp': 1718668311, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667411, 'jti': '9b6adfbf-51a4-4efa-9337-97809d325653', 'type': 'access', 'sub': '6670c89318c60c41dd2ac250', 'nbf': 1718667411, 'csrf': '07284649-7f1f-4af5-8d67-af65a3e0b0c3', 'exp': 1718668311, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667411, 'jti': '9b6adfbf-51a4-4efa-9337-97809d325653', 'type': 'access', 'sub': '6670c89318c60c41dd2ac250', 'nbf': 1718667411, 'csrf': '07284649-7f1f-4af5-8d67-af65a3e0b0c3', 'exp': 1718668311, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667411, 'jti': '8dfa1518-4c6a-4e6a-a28a-8216e1823ef3', 'type': 'access', 'sub': '6670c89318c60c41dd2ac254', 'nbf': 1718667411, 'csrf': '9d0266ac-6bb9-464a-9ac1-bed1258fa28a', 'exp': 1718668311, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670c89318c60c41dd2ac250
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667411, 'jti': '67ea3b8b-e230-4b2f-9ac0-308af931e5ad', 'type': 'access', 'sub': '6670c89318c60c41dd2ac256', 'nbf': 1718667411, 'csrf': 'b4df3552-28e9-4700-a374-69b81c283c1b', 'exp': 1718668311, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670c89318c60c41dd2ac256
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667411, 'jti': 'b49123a6-9773-4384-adb8-4fa870fbfaea', 'type': 'access', 'sub': '6670c89318c60c41dd2ac258', 'nbf': 1718667411, 'csrf': '62cc7a71-7850-4484-92ae-8b40ca818334', 'exp': 1718668311, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670be79761f0759941c494c
ERROR:app.extensions:User with ID 6670c89318c60c41dd2ac258 does not have access to Generated Post for user ID 6670be79761f0759941c494c
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667411, 'jti': '7c37cfd6-cc20-4f27-9f5c-37f35d0fbd13', 'type': 'access', 'sub': '6670c89318c60c41dd2ac25a', 'nbf': 1718667411, 'csrf': 'e6ce4ccc-a6b1-450d-bb07-f4bda68451d3', 'exp': 1718668311, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667412, 'jti': '5226065d-c7ed-4f0f-a5d1-1e7d97c7c009', 'type': 'access', 'sub': '6670c89418c60c41dd2ac25d', 'nbf': 1718667412, 'csrf': '2f4305a6-4646-460a-8d40-8533af3baeb6', 'exp': 1718668312, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667412, 'jti': '0f5f7298-b518-459e-bdcc-e5d985e0ba29', 'type': 'access', 'sub': '6670c89418c60c41dd2ac25f', 'nbf': 1718667412, 'csrf': '6c489f71-84ae-4c59-badf-9064536434c0', 'exp': 1718668312, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667412, 'jti': 'fd40dd7a-5853-4340-a73c-cdac5f2a88d1', 'type': 'access', 'sub': '6670c89418c60c41dd2ac261', 'nbf': 1718667412, 'csrf': '0e789474-15f4-413d-9d0c-fe21ff1466c1', 'exp': 1718668312, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667412, 'jti': 'c9eebdb4-6f51-4209-9e9e-01292e7bfc95', 'type': 'access', 'sub': '6670c89418c60c41dd2ac263', 'nbf': 1718667412, 'csrf': 'be7f130a-3a04-4d59-a808-4f42c0a76c4b', 'exp': 1718668312, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667412, 'jti': 'd48784ee-5be5-438b-a8ee-f67455eaafe1', 'type': 'access', 'sub': '6670c89418c60c41dd2ac265', 'nbf': 1718667412, 'csrf': 'f13edb1d-ae3c-4735-b4f3-2df2af620cfe', 'exp': 1718668312, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667413, 'jti': '6c159808-b3f8-43d2-9d9c-e09b82f16090', 'type': 'access', 'sub': '6670c89418c60c41dd2ac267', 'nbf': 1718667413, 'csrf': '807d7e28-2045-425d-99b9-d6f6e3c8397a', 'exp': 1718668313, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667413, 'jti': '6c159808-b3f8-43d2-9d9c-e09b82f16090', 'type': 'access', 'sub': '6670c89418c60c41dd2ac267', 'nbf': 1718667413, 'csrf': '807d7e28-2045-425d-99b9-d6f6e3c8397a', 'exp': 1718668313, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:Public Official already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 23, in create_public_official
    public_official = public_official_service.create_public_official(public_official)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\publicofficial_data_manager_mongodb.py", line 14, in create_public_official
    raise ObjectAlreadyExistsException("Public Official already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: Public Official already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667413, 'jti': 'cbaf1398-fdb4-4838-bf27-469056f599a0', 'type': 'access', 'sub': '6670c89518c60c41dd2ac26a', 'nbf': 1718667413, 'csrf': '319255d4-7a48-42cb-bbf8-be10efe15c00', 'exp': 1718668313, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667413, 'jti': 'cbaf1398-fdb4-4838-bf27-469056f599a0', 'type': 'access', 'sub': '6670c89518c60c41dd2ac26a', 'nbf': 1718667413, 'csrf': '319255d4-7a48-42cb-bbf8-be10efe15c00', 'exp': 1718668313, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667413, 'jti': 'cbaf1398-fdb4-4838-bf27-469056f599a0', 'type': 'access', 'sub': '6670c89518c60c41dd2ac26a', 'nbf': 1718667413, 'csrf': '319255d4-7a48-42cb-bbf8-be10efe15c00', 'exp': 1718668313, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667413, 'jti': 'cbaf1398-fdb4-4838-bf27-469056f599a0', 'type': 'access', 'sub': '6670c89518c60c41dd2ac26a', 'nbf': 1718667413, 'csrf': '319255d4-7a48-42cb-bbf8-be10efe15c00', 'exp': 1718668313, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667413, 'jti': '318c1b88-e944-422d-a522-08d703e27663', 'type': 'access', 'sub': '6670c89518c60c41dd2ac26f', 'nbf': 1718667413, 'csrf': '6a9096de-55b3-41a9-bd21-2782f6003c79', 'exp': 1718668313, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667413, 'jti': '318c1b88-e944-422d-a522-08d703e27663', 'type': 'access', 'sub': '6670c89518c60c41dd2ac26f', 'nbf': 1718667413, 'csrf': '6a9096de-55b3-41a9-bd21-2782f6003c79', 'exp': 1718668313, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667413, 'jti': '318c1b88-e944-422d-a522-08d703e27663', 'type': 'access', 'sub': '6670c89518c60c41dd2ac26f', 'nbf': 1718667413, 'csrf': '6a9096de-55b3-41a9-bd21-2782f6003c79', 'exp': 1718668313, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667413, 'jti': '7fbecbf4-00d8-4da6-b741-ec148b0e2c68', 'type': 'access', 'sub': '6670c89518c60c41dd2ac273', 'nbf': 1718667413, 'csrf': '248187a8-c3b4-46c4-8b85-73d3c3660ca2', 'exp': 1718668313, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667413, 'jti': 'd997698d-53de-4048-9cba-fd4141f3c928', 'type': 'access', 'sub': '6670c89518c60c41dd2ac275', 'nbf': 1718667413, 'csrf': '7add20eb-8fae-437e-8d0d-281ce8f59a05', 'exp': 1718668313, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667413, 'jti': 'd997698d-53de-4048-9cba-fd4141f3c928', 'type': 'access', 'sub': '6670c89518c60c41dd2ac275', 'nbf': 1718667413, 'csrf': '7add20eb-8fae-437e-8d0d-281ce8f59a05', 'exp': 1718668313, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667413, 'jti': 'd997698d-53de-4048-9cba-fd4141f3c928', 'type': 'access', 'sub': '6670c89518c60c41dd2ac275', 'nbf': 1718667413, 'csrf': '7add20eb-8fae-437e-8d0d-281ce8f59a05', 'exp': 1718668313, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667413, 'jti': '4b744345-2832-48ab-83ba-4c496892e58f', 'type': 'access', 'sub': '6670c89518c60c41dd2ac27b', 'nbf': 1718667413, 'csrf': '6d4461f6-7a63-4ee8-abd6-6667036e99e5', 'exp': 1718668313, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Getting public official by ID 6670c89518c60c41dd2ac27c
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667414, 'jti': '7def11ee-2360-4d09-8651-0a2f6c8a036f', 'type': 'access', 'sub': '6670c89618c60c41dd2ac280', 'nbf': 1718667414, 'csrf': '0892f2fb-7bdb-43e1-a82d-fc58240bf68e', 'exp': 1718668314, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667414, 'jti': '7def11ee-2360-4d09-8651-0a2f6c8a036f', 'type': 'access', 'sub': '6670c89618c60c41dd2ac280', 'nbf': 1718667414, 'csrf': '0892f2fb-7bdb-43e1-a82d-fc58240bf68e', 'exp': 1718668314, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='6670c89618c60c41dd2ac281')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667414, 'jti': '9634bd19-c988-40af-8f3f-74b5a298e932', 'type': 'access', 'sub': '6670c89618c60c41dd2ac283', 'nbf': 1718667414, 'csrf': '4e0d9b59-dad6-4790-b997-88277366eb8c', 'exp': 1718668314, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667414, 'jti': '9634bd19-c988-40af-8f3f-74b5a298e932', 'type': 'access', 'sub': '6670c89618c60c41dd2ac283', 'nbf': 1718667414, 'csrf': '4e0d9b59-dad6-4790-b997-88277366eb8c', 'exp': 1718668314, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='6670c89618c60c41dd2ac284')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667414, 'jti': '73468d88-a365-48c3-b366-1aba7000e699', 'type': 'access', 'sub': '6670c89618c60c41dd2ac286', 'nbf': 1718667414, 'csrf': 'c6d82c0b-4331-4afb-b1eb-c45795664c7a', 'exp': 1718668314, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667414, 'jti': '1aeee1a4-80c8-4c21-98ef-d8b19b291326', 'type': 'access', 'sub': '6670c89618c60c41dd2ac288', 'nbf': 1718667414, 'csrf': '657f34f2-3600-4d73-941b-b8d2e6264a69', 'exp': 1718668314, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667414, 'jti': '1aeee1a4-80c8-4c21-98ef-d8b19b291326', 'type': 'access', 'sub': '6670c89618c60c41dd2ac288', 'nbf': 1718667414, 'csrf': '657f34f2-3600-4d73-941b-b8d2e6264a69', 'exp': 1718668314, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='6670c89618c60c41dd2ac289')
INFO:app.extensions:po_data={'name_eng': 'newname123', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667415, 'jti': '2e886fcb-df39-4fc4-8e8b-d6c2772d1e37', 'type': 'access', 'sub': '6670c89718c60c41dd2ac28b', 'nbf': 1718667415, 'csrf': '4cf886ae-e864-43eb-b2e0-d70926136ed0', 'exp': 1718668315, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667415, 'jti': '2e886fcb-df39-4fc4-8e8b-d6c2772d1e37', 'type': 'access', 'sub': '6670c89718c60c41dd2ac28b', 'nbf': 1718667415, 'csrf': '4cf886ae-e864-43eb-b2e0-d70926136ed0', 'exp': 1718668315, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='6670c89718c60c41dd2ac28c')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטי134man', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667415, 'jti': 'df00a96d-b34d-4b6a-b596-9b85c077a8d4', 'type': 'access', 'sub': '6670c89718c60c41dd2ac28e', 'nbf': 1718667415, 'csrf': 'eaa85033-fd69-4aa9-bdfd-8c69dd62dce4', 'exp': 1718668315, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667415, 'jti': 'df00a96d-b34d-4b6a-b596-9b85c077a8d4', 'type': 'access', 'sub': '6670c89718c60c41dd2ac28e', 'nbf': 1718667415, 'csrf': 'eaa85033-fd69-4aa9-bdfd-8c69dd62dce4', 'exp': 1718668315, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='6670c89718c60c41dd2ac28f')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'myposition123', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667415, 'jti': '93b54efd-0816-490e-a793-bd8fb25ab7bc', 'type': 'access', 'sub': '6670c89718c60c41dd2ac291', 'nbf': 1718667415, 'csrf': 'c6a95fe8-512e-452f-96c4-c0bb2be073fd', 'exp': 1718668315, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667415, 'jti': '93b54efd-0816-490e-a793-bd8fb25ab7bc', 'type': 'access', 'sub': '6670c89718c60c41dd2ac291', 'nbf': 1718667415, 'csrf': 'c6a95fe8-512e-452f-96c4-c0bb2be073fd', 'exp': 1718668315, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='6670c89718c60c41dd2ac292')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'myspace': 'myhandle', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667415, 'jti': '0385c9f9-e502-4065-aacc-35b8cbdbe980', 'type': 'access', 'sub': '6670c89718c60c41dd2ac297', 'nbf': 1718667415, 'csrf': 'b8ed6778-1be5-4a3b-a610-54e0c17074c6', 'exp': 1718668315, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667416, 'jti': '56442d11-22cb-4125-818c-b702ac952cfe', 'type': 'access', 'sub': '6670c89818c60c41dd2ac29c', 'nbf': 1718667416, 'csrf': '3a2394cc-d630-4dda-8548-aa9fbaa30f24', 'exp': 1718668316, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667416, 'jti': '8715cdf5-4cd5-4f3a-9cf9-ab324a94dc69', 'type': 'access', 'sub': '6670c89818c60c41dd2ac2a1', 'nbf': 1718667416, 'csrf': '75954495-f601-4aa2-9e88-160a3bcf8520', 'exp': 1718668316, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667417, 'jti': '6e2b33a1-7be3-4d57-ae93-e5c792f8754b', 'type': 'access', 'sub': '6670c89918c60c41dd2ac2a6', 'nbf': 1718667417, 'csrf': '0dda9d88-c984-4666-8420-1eecaae97542', 'exp': 1718668317, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667417, 'jti': '7dbb181d-b11f-41db-b187-f69efbfa3f8b', 'type': 'access', 'sub': '6670c89918c60c41dd2ac2a8', 'nbf': 1718667417, 'csrf': 'c8c679cf-a78a-4f0a-aaed-1a762c7fd2ec', 'exp': 1718668317, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667417, 'jti': 'bbde1249-ca4e-4722-8035-f4aff72c14eb', 'type': 'access', 'sub': '6670c89918c60c41dd2ac2aa', 'nbf': 1718667417, 'csrf': 'f5d0b11f-4c30-4dcd-b6ab-b2288623dddf', 'exp': 1718668317, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667417, 'jti': 'a5d063b6-db88-4f85-afc3-8c3ea2f36389', 'type': 'access', 'sub': '6670c89918c60c41dd2ac2ac', 'nbf': 1718667417, 'csrf': 'be8f841f-0549-41f5-8eb0-d4b9296203a5', 'exp': 1718668317, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667417, 'jti': '3f385e00-134f-4375-8c80-e4c4e521ae9b', 'type': 'access', 'sub': '6670c89918c60c41dd2ac2ae', 'nbf': 1718667417, 'csrf': '932610cd-d1e0-4a92-8bc3-3adef3b6b305', 'exp': 1718668317, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667417, 'jti': '3f385e00-134f-4375-8c80-e4c4e521ae9b', 'type': 'access', 'sub': '6670c89918c60c41dd2ac2ae', 'nbf': 1718667417, 'csrf': '932610cd-d1e0-4a92-8bc3-3adef3b6b305', 'exp': 1718668317, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667417, 'jti': '3f385e00-134f-4375-8c80-e4c4e521ae9b', 'type': 'access', 'sub': '6670c89918c60c41dd2ac2ae', 'nbf': 1718667417, 'csrf': '932610cd-d1e0-4a92-8bc3-3adef3b6b305', 'exp': 1718668317, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667417, 'jti': '3f385e00-134f-4375-8c80-e4c4e521ae9b', 'type': 'access', 'sub': '6670c89918c60c41dd2ac2ae', 'nbf': 1718667417, 'csrf': '932610cd-d1e0-4a92-8bc3-3adef3b6b305', 'exp': 1718668317, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667417, 'jti': '3f385e00-134f-4375-8c80-e4c4e521ae9b', 'type': 'access', 'sub': '6670c89918c60c41dd2ac2ae', 'nbf': 1718667417, 'csrf': '932610cd-d1e0-4a92-8bc3-3adef3b6b305', 'exp': 1718668317, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667417, 'jti': '3f385e00-134f-4375-8c80-e4c4e521ae9b', 'type': 'access', 'sub': '6670c89918c60c41dd2ac2ae', 'nbf': 1718667417, 'csrf': '932610cd-d1e0-4a92-8bc3-3adef3b6b305', 'exp': 1718668317, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667418, 'jti': '2644b41f-38c3-47f0-b7ee-4398339e2c30', 'type': 'access', 'sub': '6670c89a18c60c41dd2ac2b0', 'nbf': 1718667418, 'csrf': '7eff797f-a760-486f-bea5-06e627311e11', 'exp': 1718668318, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667418, 'jti': '2644b41f-38c3-47f0-b7ee-4398339e2c30', 'type': 'access', 'sub': '6670c89a18c60c41dd2ac2b0', 'nbf': 1718667418, 'csrf': '7eff797f-a760-486f-bea5-06e627311e11', 'exp': 1718668318, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667418, 'jti': '2644b41f-38c3-47f0-b7ee-4398339e2c30', 'type': 'access', 'sub': '6670c89a18c60c41dd2ac2b0', 'nbf': 1718667418, 'csrf': '7eff797f-a760-486f-bea5-06e627311e11', 'exp': 1718668318, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667418, 'jti': '2644b41f-38c3-47f0-b7ee-4398339e2c30', 'type': 'access', 'sub': '6670c89a18c60c41dd2ac2b0', 'nbf': 1718667418, 'csrf': '7eff797f-a760-486f-bea5-06e627311e11', 'exp': 1718668318, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667418, 'jti': '2644b41f-38c3-47f0-b7ee-4398339e2c30', 'type': 'access', 'sub': '6670c89a18c60c41dd2ac2b0', 'nbf': 1718667418, 'csrf': '7eff797f-a760-486f-bea5-06e627311e11', 'exp': 1718668318, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667418, 'jti': '2644b41f-38c3-47f0-b7ee-4398339e2c30', 'type': 'access', 'sub': '6670c89a18c60c41dd2ac2b0', 'nbf': 1718667418, 'csrf': '7eff797f-a760-486f-bea5-06e627311e11', 'exp': 1718668318, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667418, 'jti': '4de3fd06-4c24-4653-9103-92553ec976ff', 'type': 'access', 'sub': '6670c89a18c60c41dd2ac2b2', 'nbf': 1718667418, 'csrf': '2db010ae-1c87-4582-b8ee-d1f199d0a010', 'exp': 1718668318, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667418, 'jti': 'e3d42f67-f66e-4cba-9c0a-8283b79221dc', 'type': 'access', 'sub': '6670c89a18c60c41dd2ac2b4', 'nbf': 1718667418, 'csrf': '7dcf39e6-5d0b-4bcd-b84c-4eae4553aa31', 'exp': 1718668318, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667497, 'jti': 'af0f4c9c-b043-40ff-b69f-7c8f5ecc0927', 'type': 'access', 'sub': '6670c8e9858380aa41938581', 'nbf': 1718667497, 'csrf': '45876e53-ff7a-4b5e-8cfe-81fd9111ce88', 'exp': 1718668397, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test2@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667497, 'jti': 'd3c3e2fe-6c13-440c-a425-8fcddec89791', 'type': 'access', 'sub': '6670c8e9858380aa41938583', 'nbf': 1718667497, 'csrf': '11f68f7c-37ce-48b7-82b4-d6b81fb3e031', 'exp': 1718668397, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test3@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667497, 'jti': '8c204642-448b-4372-8bce-acf4a1c9fa5f', 'type': 'access', 'sub': '6670c8e9858380aa41938585', 'nbf': 1718667497, 'csrf': '612c416d-94d5-45de-a897-fc3a6ef22b07', 'exp': 1718668397, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667497, 'jti': '0eefdab7-9142-4baa-9cb8-52062c4cab88', 'type': 'access', 'sub': '6670c8e9858380aa41938587', 'nbf': 1718667497, 'csrf': 'f734e033-4e4e-492c-9b5a-5645f26e568d', 'exp': 1718668397, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all generated posts
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667497, 'jti': 'c3ec0484-9819-4ad2-afe5-36fbcddb7c03', 'type': 'access', 'sub': '6670c8e9858380aa41938589', 'nbf': 1718667497, 'csrf': '3beef09b-ec02-44f6-821b-1878da54804f', 'exp': 1718668397, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all generated posts
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667498, 'jti': '2cd9593d-60ae-44b6-971d-32b89bfb1b45', 'type': 'access', 'sub': '6670c8ea858380aa4193858b', 'nbf': 1718667498, 'csrf': '37fb15f9-26b8-40ec-93e6-5afa8e3da78a', 'exp': 1718668398, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670be79761f0759941c494c
ERROR:app.extensions:User with ID 6670c8ea858380aa4193858b does not have access to Generated Post for user ID 6670be79761f0759941c494c
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667506, 'jti': '17fd711b-b06c-445f-b179-ab4f1bd84392', 'type': 'access', 'sub': '6670c8f281a5443d9cf98e58', 'nbf': 1718667506, 'csrf': 'f0bead0b-94e6-4544-a801-29b9dc6a46ea', 'exp': 1718668406, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test2@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667506, 'jti': 'd0dbaac9-3c77-4276-b002-4609568c3eb7', 'type': 'access', 'sub': '6670c8f281a5443d9cf98e5a', 'nbf': 1718667506, 'csrf': '01c3fc9a-10a8-4008-9ea2-121cde2ae4fb', 'exp': 1718668406, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test3@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667506, 'jti': 'f7ffc08d-6629-44e0-973b-945b4a463c6a', 'type': 'access', 'sub': '6670c8f281a5443d9cf98e5c', 'nbf': 1718667506, 'csrf': 'b3bca830-e8e5-4265-8828-34a4808128b6', 'exp': 1718668406, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667506, 'jti': '5108fc5a-52b3-459c-8369-fd22dadcb847', 'type': 'access', 'sub': '6670c8f281a5443d9cf98e5e', 'nbf': 1718667506, 'csrf': 'eab9469c-6472-45f0-a25d-b9b81826565c', 'exp': 1718668406, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all generated posts
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667506, 'jti': '2fd4f967-103a-40e5-8dca-cdcb9d227c7f', 'type': 'access', 'sub': '6670c8f281a5443d9cf98e60', 'nbf': 1718667506, 'csrf': '8efdd154-80f2-4eab-8dbb-4bf5f8abe543', 'exp': 1718668406, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all generated posts
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667507, 'jti': 'aa02f0d0-d376-48e9-8637-be9342bdd222', 'type': 'access', 'sub': '6670c8f381a5443d9cf98e62', 'nbf': 1718667507, 'csrf': '45ed5b9b-b848-4053-9922-945c699e7c98', 'exp': 1718668407, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670be79761f0759941c494c
ERROR:app.extensions:User with ID 6670c8f381a5443d9cf98e62 does not have access to Generated Post for user ID 6670be79761f0759941c494c
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667885, 'jti': '9cd27944-25d4-4e7b-a1a4-b289248be65b', 'type': 'access', 'sub': '6670ca6d471be407dc620e7b', 'nbf': 1718667885, 'csrf': '5f0937e3-bc82-4947-b5ac-3520bdd1c63c', 'exp': 1718668785, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667885, 'jti': '9cd27944-25d4-4e7b-a1a4-b289248be65b', 'type': 'access', 'sub': '6670ca6d471be407dc620e7b', 'nbf': 1718667885, 'csrf': '5f0937e3-bc82-4947-b5ac-3520bdd1c63c', 'exp': 1718668785, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667885, 'jti': '9cd27944-25d4-4e7b-a1a4-b289248be65b', 'type': 'access', 'sub': '6670ca6d471be407dc620e7b', 'nbf': 1718667885, 'csrf': '5f0937e3-bc82-4947-b5ac-3520bdd1c63c', 'exp': 1718668785, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667885, 'jti': 'f88a871f-880c-4126-98ef-7d437e042d00', 'type': 'access', 'sub': '6670ca6d471be407dc620e7f', 'nbf': 1718667885, 'csrf': 'bc446dff-24a0-4921-b82d-cae5298c536c', 'exp': 1718668785, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all generated posts
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667885, 'jti': '4564d544-385b-4ab8-b2e3-441c424f89a6', 'type': 'access', 'sub': '6670ca6d471be407dc620e81', 'nbf': 1718667885, 'csrf': 'fee34c48-8241-431d-ab4d-7dd4031ad597', 'exp': 1718668785, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all generated posts
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667885, 'jti': 'e399d19e-cb13-4532-b859-05c5798ce595', 'type': 'access', 'sub': '6670ca6d471be407dc620e84', 'nbf': 1718667885, 'csrf': '0dc0fba7-7629-4ce2-b311-8d5e3756ea51', 'exp': 1718668785, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667885, 'jti': 'e399d19e-cb13-4532-b859-05c5798ce595', 'type': 'access', 'sub': '6670ca6d471be407dc620e84', 'nbf': 1718667885, 'csrf': '0dc0fba7-7629-4ce2-b311-8d5e3756ea51', 'exp': 1718668785, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667908, 'jti': '16b5bf4f-9751-4b3e-b321-cbc1b839a1d9', 'type': 'access', 'sub': '6670ca847ebf3bdbc3bdd824', 'nbf': 1718667908, 'csrf': '6f1d8dc4-f854-4fe4-bc61-48029cae7ce6', 'exp': 1718668808, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667908, 'jti': '16b5bf4f-9751-4b3e-b321-cbc1b839a1d9', 'type': 'access', 'sub': '6670ca847ebf3bdbc3bdd824', 'nbf': 1718667908, 'csrf': '6f1d8dc4-f854-4fe4-bc61-48029cae7ce6', 'exp': 1718668808, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667908, 'jti': '16b5bf4f-9751-4b3e-b321-cbc1b839a1d9', 'type': 'access', 'sub': '6670ca847ebf3bdbc3bdd824', 'nbf': 1718667908, 'csrf': '6f1d8dc4-f854-4fe4-bc61-48029cae7ce6', 'exp': 1718668808, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667909, 'jti': 'c4361d6b-2dde-4429-b590-9f236efcb316', 'type': 'access', 'sub': '6670ca857ebf3bdbc3bdd828', 'nbf': 1718667909, 'csrf': 'a3d917cc-f87f-4c94-be60-eee0bcda5eca', 'exp': 1718668809, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all generated posts
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667909, 'jti': 'f0a3a8c0-fe9c-4f2e-88e6-7d064b4d3b04', 'type': 'access', 'sub': '6670ca857ebf3bdbc3bdd82a', 'nbf': 1718667909, 'csrf': '3688e3cb-3684-48e6-9d2a-67c07fdad6cf', 'exp': 1718668809, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all generated posts
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667909, 'jti': '0be407ff-0b52-4854-9738-3c904d8d5a87', 'type': 'access', 'sub': '6670ca857ebf3bdbc3bdd82d', 'nbf': 1718667909, 'csrf': '22c1d425-913f-4301-9fcf-64bc954b7b54', 'exp': 1718668809, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667909, 'jti': '0be407ff-0b52-4854-9738-3c904d8d5a87', 'type': 'access', 'sub': '6670ca857ebf3bdbc3bdd82d', 'nbf': 1718667909, 'csrf': '22c1d425-913f-4301-9fcf-64bc954b7b54', 'exp': 1718668809, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667934, 'jti': '0d5312a1-c8c4-4a4c-875b-a0064278fe46', 'type': 'access', 'sub': '6670ca9e6a0397e4a31bd1b5', 'nbf': 1718667934, 'csrf': '8a28d241-09e8-4829-9323-1dd22e3a8ca7', 'exp': 1718668834, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('6670ca9e6a0397e4a31bd1b5') email='test@test.com' password='__hash__scrypt:32768:8:1$F5zhNy35vnbXiMzY$ae5622bafa7b332beadf4daef776461c4490464a24a94d49729a7807fe17aa929b6092e961159765c72a0084ad88b22c509c2574caa46dbae3d34a1a80f25a6c' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667934, 'jti': 'ab70c6a3-2510-481b-9004-128a4c3e3a86', 'type': 'access', 'sub': '6670ca9e6a0397e4a31bd1ba', 'nbf': 1718667934, 'csrf': 'da95ea95-b007-44f7-99b0-d6d81259643b', 'exp': 1718668834, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('6670ca9e6a0397e4a31bd1ba') email='test@test.com' password='__hash__scrypt:32768:8:1$juyiVjQke7Lg9z0H$90231dacb9379f23eec75f9fb23a7655e55bdba0166248a2bfe9e0fdf317775cbb2e13fd1bc02eaf55eab57d9aa311813140db0427fa43e206f491a2a6f712d8' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667934, 'jti': 'fca189d0-c4d7-446f-8658-db857a0f1cd4', 'type': 'access', 'sub': '6670ca9e6a0397e4a31bd1bd', 'nbf': 1718667934, 'csrf': 'a53b9e19-0cad-470a-baac-c8075bedef5d', 'exp': 1718668834, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('6670ca9e6a0397e4a31bd1bd') email='test@test.com' password='__hash__scrypt:32768:8:1$VasgGmE1TgQQVXly$76993b6495dfff26e139e6144bf051c44ad499fc3cfdfc112dc7e3212873bf5bd38174cd99d3f22f9b1c14d3b98b31c7b78b69f1011318edc43dc8c67c6d843d' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667935, 'jti': '920fb17b-3d58-4f07-a8f7-0d1f7f1cafb3', 'type': 'access', 'sub': '6670ca9f6a0397e4a31bd1ca', 'nbf': 1718667935, 'csrf': '47168e29-b51f-4d6c-a58e-e5f3918b8c95', 'exp': 1718668835, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667935, 'jti': '920fb17b-3d58-4f07-a8f7-0d1f7f1cafb3', 'type': 'access', 'sub': '6670ca9f6a0397e4a31bd1ca', 'nbf': 1718667935, 'csrf': '47168e29-b51f-4d6c-a58e-e5f3918b8c95', 'exp': 1718668835, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667935, 'jti': '920fb17b-3d58-4f07-a8f7-0d1f7f1cafb3', 'type': 'access', 'sub': '6670ca9f6a0397e4a31bd1ca', 'nbf': 1718667935, 'csrf': '47168e29-b51f-4d6c-a58e-e5f3918b8c95', 'exp': 1718668835, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667935, 'jti': '6159709a-c41a-4300-bf59-45cf2a4e9b10', 'type': 'access', 'sub': '6670ca9f6a0397e4a31bd1ce', 'nbf': 1718667935, 'csrf': 'fc76aab6-3def-45ff-984a-ee6cc6654c0d', 'exp': 1718668835, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all generated posts
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667935, 'jti': '414d48ea-4737-4d3d-b18b-42f952526424', 'type': 'access', 'sub': '6670ca9f6a0397e4a31bd1d0', 'nbf': 1718667935, 'csrf': '0cfafcc5-287d-4462-abce-e437e9ec7c9f', 'exp': 1718668835, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all generated posts
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667935, 'jti': 'e58ba278-63f0-44b6-a745-ae4d49349227', 'type': 'access', 'sub': '6670ca9f6a0397e4a31bd1d3', 'nbf': 1718667935, 'csrf': '2c1c1021-44a9-455b-b368-8a1b792c2883', 'exp': 1718668835, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667935, 'jti': 'e58ba278-63f0-44b6-a745-ae4d49349227', 'type': 'access', 'sub': '6670ca9f6a0397e4a31bd1d3', 'nbf': 1718667935, 'csrf': '2c1c1021-44a9-455b-b368-8a1b792c2883', 'exp': 1718668835, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667935, 'jti': 'bc2bc093-6c55-468d-8a22-f819b5e69388', 'type': 'access', 'sub': '6670ca9f6a0397e4a31bd1d7', 'nbf': 1718667935, 'csrf': '0576c83d-1f7c-47f8-9aa0-8348a93608cc', 'exp': 1718668835, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667935, 'jti': '5d7e478c-35b7-44a4-ac8f-c99ca9dfc096', 'type': 'access', 'sub': '6670ca9f6a0397e4a31bd1da', 'nbf': 1718667935, 'csrf': '07917c36-503e-4007-8bf0-51800a07398c', 'exp': 1718668835, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
ERROR:app.extensions:'Public Official with ID 666e3cdc77f6b009eab6d345 not found'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 20, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 19, in generate_post
    raise KeyError(f"Public Official with ID {po_id} not found")
KeyError: 'Public Official with ID 666e3cdc77f6b009eab6d345 not found'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667935, 'jti': 'ddefb5b0-08ec-4b5b-bfde-afe250b7f4db', 'type': 'access', 'sub': '6670ca9f6a0397e4a31bd1dd', 'nbf': 1718667935, 'csrf': 'a30383d8-9929-4b9d-86bc-93267848739c', 'exp': 1718668835, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
ERROR:app.extensions:1 validation error for GeneratedPost
prompt
  String should have at least 1 character [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 20, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 25, in generate_post
    generated_post = GeneratedPost(user_id=ObjectId(user_id),
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for GeneratedPost
prompt
  String should have at least 1 character [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667936, 'jti': '871527fa-2bf6-4b75-b60f-49b2a798c5b9', 'type': 'access', 'sub': '6670caa06a0397e4a31bd1e0', 'nbf': 1718667936, 'csrf': '0d905206-b267-4034-8fc1-3a05094769fc', 'exp': 1718668836, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
ERROR:app.extensions:1 validation error for GeneratedPost
social_media
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='test', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 20, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 25, in generate_post
    generated_post = GeneratedPost(user_id=ObjectId(user_id),
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for GeneratedPost
social_media
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='test', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667936, 'jti': '0197ab9c-a915-45d2-9646-2d814ae2b63b', 'type': 'access', 'sub': '6670caa06a0397e4a31bd1e3', 'nbf': 1718667936, 'csrf': '56ca4144-3609-47f3-ab56-055946bd6c99', 'exp': 1718668836, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test2@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667936, 'jti': '0368c190-e99c-480d-a3e3-4fca2a2afece', 'type': 'access', 'sub': '6670caa06a0397e4a31bd1e5', 'nbf': 1718667936, 'csrf': '38382c9a-8709-45ce-82b0-8e3d259ae233', 'exp': 1718668836, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test3@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667936, 'jti': '8d27b363-3bdc-4427-9690-a69e57328894', 'type': 'access', 'sub': '6670caa06a0397e4a31bd1e7', 'nbf': 1718667936, 'csrf': '81102e70-b086-491b-9551-9e9251b89a54', 'exp': 1718668836, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667936, 'jti': 'f046d84d-eb00-4082-abdf-b45f2d978df5', 'type': 'access', 'sub': '6670caa06a0397e4a31bd1e9', 'nbf': 1718667936, 'csrf': 'a58e92de-caf6-4176-bc52-be3c421e43dc', 'exp': 1718668836, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all generated posts
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667936, 'jti': '181d254f-76ef-4a27-b248-7f84f4c4c24d', 'type': 'access', 'sub': '6670caa06a0397e4a31bd1eb', 'nbf': 1718667936, 'csrf': '4a85eb17-3f9d-4e6c-904c-90c3ac6e28f7', 'exp': 1718668836, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all generated posts
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667936, 'jti': '5e5d8eb1-55df-4635-aed3-61bec80aeab0', 'type': 'access', 'sub': '6670caa06a0397e4a31bd1ed', 'nbf': 1718667936, 'csrf': 'f40c34c7-fda8-4268-869d-4dea18f21183', 'exp': 1718668836, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667936, 'jti': '103dedd8-c558-4a53-a907-a9765db12158', 'type': 'access', 'sub': '6670caa06a0397e4a31bd1f0', 'nbf': 1718667936, 'csrf': '020299ea-d2e2-43c2-92c1-6de48c75d3e3', 'exp': 1718668836, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667936, 'jti': '103dedd8-c558-4a53-a907-a9765db12158', 'type': 'access', 'sub': '6670caa06a0397e4a31bd1f0', 'nbf': 1718667936, 'csrf': '020299ea-d2e2-43c2-92c1-6de48c75d3e3', 'exp': 1718668836, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670caa06a0397e4a31bd1f1
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670caa06a0397e4a31bd1f1'), user_id=ObjectId('6670caa06a0397e4a31bd1f0'), public_official_id=ObjectId('6670caa06a0397e4a31bd1ef'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667937, 'jti': '64584103-953b-4e6d-be62-7792fe0f1c4a', 'type': 'access', 'sub': '6670caa16a0397e4a31bd1f4', 'nbf': 1718667937, 'csrf': '47608458-393d-4316-ae04-96ea75afb7d4', 'exp': 1718668837, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667937, 'jti': '37b0bd79-4a21-45f8-ab8e-777adb157a1e', 'type': 'access', 'sub': '6670caa16a0397e4a31bd1f6', 'nbf': 1718667937, 'csrf': 'b2bc9e86-1934-4f6e-8dda-12f792c8b307', 'exp': 1718668837, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670caa16a0397e4a31bd1f5
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670caa16a0397e4a31bd1f5'), user_id=ObjectId('6670caa16a0397e4a31bd1f4'), public_official_id=ObjectId('6670caa06a0397e4a31bd1f3'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667937, 'jti': 'c4029836-6968-4102-b791-c4bc8aa1610f', 'type': 'access', 'sub': '6670caa16a0397e4a31bd1f8', 'nbf': 1718667937, 'csrf': 'a3462bf3-d146-4203-83e7-b84fc3c50f74', 'exp': 1718668837, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670be79761f0759941c494c
INFO:app.extensions:generated_post=None
ERROR:app.extensions:Generated Post with ID 6670be79761f0759941c494c not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667937, 'jti': 'a355bc44-e181-4e7d-89e1-d1699e483574', 'type': 'access', 'sub': '6670caa16a0397e4a31bd1fb', 'nbf': 1718667937, 'csrf': '850fad6e-8df4-4d78-81e0-fff44727f396', 'exp': 1718668837, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test2@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667937, 'jti': '11058418-da01-401b-8c35-b74fdbdec3e4', 'type': 'access', 'sub': '6670caa16a0397e4a31bd1fd', 'nbf': 1718667937, 'csrf': '9faae75c-f432-4b29-b155-478707fbe289', 'exp': 1718668837, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670caa16a0397e4a31bd1fc
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('6670caa16a0397e4a31bd1fc'), user_id=ObjectId('6670caa16a0397e4a31bd1fb'), public_official_id=ObjectId('6670caa16a0397e4a31bd1fa'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
ERROR:app.extensions:User with ID 6670caa16a0397e4a31bd1fd does not have access to Generated Post with ID 6670caa16a0397e4a31bd1fc
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667937, 'jti': '17b9f4ba-e8d1-4338-9419-64f6ec1cf595', 'type': 'access', 'sub': '6670caa16a0397e4a31bd200', 'nbf': 1718667937, 'csrf': '35cce68c-7619-4c18-84fc-ad2fb5515da1', 'exp': 1718668837, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667937, 'jti': '17b9f4ba-e8d1-4338-9419-64f6ec1cf595', 'type': 'access', 'sub': '6670caa16a0397e4a31bd200', 'nbf': 1718667937, 'csrf': '35cce68c-7619-4c18-84fc-ad2fb5515da1', 'exp': 1718668837, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667937, 'jti': '17b9f4ba-e8d1-4338-9419-64f6ec1cf595', 'type': 'access', 'sub': '6670caa16a0397e4a31bd200', 'nbf': 1718667937, 'csrf': '35cce68c-7619-4c18-84fc-ad2fb5515da1', 'exp': 1718668837, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667937, 'jti': '17b9f4ba-e8d1-4338-9419-64f6ec1cf595', 'type': 'access', 'sub': '6670caa16a0397e4a31bd200', 'nbf': 1718667937, 'csrf': '35cce68c-7619-4c18-84fc-ad2fb5515da1', 'exp': 1718668837, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670caa16a0397e4a31bd200
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667937, 'jti': '9afc2cb3-8947-48ce-8353-d976049f992a', 'type': 'access', 'sub': '6670caa16a0397e4a31bd206', 'nbf': 1718667937, 'csrf': '539d49cf-28f4-41ff-b2b5-fc90b5413740', 'exp': 1718668837, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667937, 'jti': '9afc2cb3-8947-48ce-8353-d976049f992a', 'type': 'access', 'sub': '6670caa16a0397e4a31bd206', 'nbf': 1718667937, 'csrf': '539d49cf-28f4-41ff-b2b5-fc90b5413740', 'exp': 1718668837, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667937, 'jti': '9afc2cb3-8947-48ce-8353-d976049f992a', 'type': 'access', 'sub': '6670caa16a0397e4a31bd206', 'nbf': 1718667937, 'csrf': '539d49cf-28f4-41ff-b2b5-fc90b5413740', 'exp': 1718668837, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667937, 'jti': 'c820dc46-855f-451d-bacf-7951bde65143', 'type': 'access', 'sub': '6670caa16a0397e4a31bd20a', 'nbf': 1718667937, 'csrf': 'ea2c1de6-63ec-4510-8f2c-27226be55473', 'exp': 1718668837, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670caa16a0397e4a31bd206
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667937, 'jti': 'f0fdb502-6d55-48f3-bbb1-62bd4aec7b1e', 'type': 'access', 'sub': '6670caa16a0397e4a31bd20c', 'nbf': 1718667937, 'csrf': '63c22731-ad46-4e75-b0fe-828da572c55d', 'exp': 1718668837, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670caa16a0397e4a31bd20c
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667938, 'jti': '4563a2f1-a243-4217-b9e3-461c10c5b4cf', 'type': 'access', 'sub': '6670caa26a0397e4a31bd20e', 'nbf': 1718667938, 'csrf': 'eb2f1ee2-29bc-40ae-a8f5-37fe442abe57', 'exp': 1718668838, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670be79761f0759941c494c
ERROR:app.extensions:User with ID 6670caa26a0397e4a31bd20e does not have access to Generated Post for user ID 6670be79761f0759941c494c
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667938, 'jti': 'd79016cb-74f3-4876-9d33-d8649e12d7a8', 'type': 'access', 'sub': '6670caa26a0397e4a31bd210', 'nbf': 1718667938, 'csrf': 'd027b166-9042-451b-b980-eab0ae9e3ccb', 'exp': 1718668838, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667938, 'jti': '90f40bac-6980-4355-b82f-874fb6017ec4', 'type': 'access', 'sub': '6670caa26a0397e4a31bd213', 'nbf': 1718667938, 'csrf': 'd308e300-8a44-461a-aa8d-304e8eba9b72', 'exp': 1718668838, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667938, 'jti': 'd7c05979-68a4-4eb0-a779-c7c5369ab259', 'type': 'access', 'sub': '6670caa26a0397e4a31bd215', 'nbf': 1718667938, 'csrf': '36552d83-4bd1-4924-b6b7-6b90fc541eef', 'exp': 1718668838, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667938, 'jti': '68e51ffe-ea21-4a9a-bc2f-4d6a5421c506', 'type': 'access', 'sub': '6670caa26a0397e4a31bd217', 'nbf': 1718667938, 'csrf': 'ee9f9eaf-7fa9-4f67-a09c-ac4f6a5f3eaf', 'exp': 1718668838, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667938, 'jti': '7ea705ec-6a54-4a0e-be50-1dca9272c580', 'type': 'access', 'sub': '6670caa26a0397e4a31bd219', 'nbf': 1718667938, 'csrf': '09c37611-21c5-4f9e-a61d-a999256b38de', 'exp': 1718668838, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667939, 'jti': 'b80f48cd-ab9a-425c-ad38-f99011a8f388', 'type': 'access', 'sub': '6670caa36a0397e4a31bd21b', 'nbf': 1718667939, 'csrf': '938a76d8-6601-47f7-bbcf-4813777ea8b4', 'exp': 1718668839, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667939, 'jti': '40818051-751d-4058-bbfd-95266266fae6', 'type': 'access', 'sub': '6670caa36a0397e4a31bd21d', 'nbf': 1718667939, 'csrf': 'b247d10d-3258-4040-b561-42146a8945cc', 'exp': 1718668839, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667939, 'jti': '40818051-751d-4058-bbfd-95266266fae6', 'type': 'access', 'sub': '6670caa36a0397e4a31bd21d', 'nbf': 1718667939, 'csrf': 'b247d10d-3258-4040-b561-42146a8945cc', 'exp': 1718668839, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:Public Official already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 23, in create_public_official
    public_official = public_official_service.create_public_official(public_official)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\publicofficial_data_manager_mongodb.py", line 14, in create_public_official
    raise ObjectAlreadyExistsException("Public Official already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: Public Official already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667939, 'jti': 'ed64225b-4b0f-4bd4-a9ed-de14364f53eb', 'type': 'access', 'sub': '6670caa36a0397e4a31bd220', 'nbf': 1718667939, 'csrf': '17da9912-3b3a-4e88-a043-07b63679c9c3', 'exp': 1718668839, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667939, 'jti': 'ed64225b-4b0f-4bd4-a9ed-de14364f53eb', 'type': 'access', 'sub': '6670caa36a0397e4a31bd220', 'nbf': 1718667939, 'csrf': '17da9912-3b3a-4e88-a043-07b63679c9c3', 'exp': 1718668839, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667939, 'jti': 'ed64225b-4b0f-4bd4-a9ed-de14364f53eb', 'type': 'access', 'sub': '6670caa36a0397e4a31bd220', 'nbf': 1718667939, 'csrf': '17da9912-3b3a-4e88-a043-07b63679c9c3', 'exp': 1718668839, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667939, 'jti': 'ed64225b-4b0f-4bd4-a9ed-de14364f53eb', 'type': 'access', 'sub': '6670caa36a0397e4a31bd220', 'nbf': 1718667939, 'csrf': '17da9912-3b3a-4e88-a043-07b63679c9c3', 'exp': 1718668839, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667939, 'jti': '3875f3cd-ed57-4c81-a49b-23a5cc7c67de', 'type': 'access', 'sub': '6670caa36a0397e4a31bd225', 'nbf': 1718667939, 'csrf': 'a25d22d4-3f73-44f4-9ec1-8704067ff6f1', 'exp': 1718668839, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667939, 'jti': '3875f3cd-ed57-4c81-a49b-23a5cc7c67de', 'type': 'access', 'sub': '6670caa36a0397e4a31bd225', 'nbf': 1718667939, 'csrf': 'a25d22d4-3f73-44f4-9ec1-8704067ff6f1', 'exp': 1718668839, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667939, 'jti': '3875f3cd-ed57-4c81-a49b-23a5cc7c67de', 'type': 'access', 'sub': '6670caa36a0397e4a31bd225', 'nbf': 1718667939, 'csrf': 'a25d22d4-3f73-44f4-9ec1-8704067ff6f1', 'exp': 1718668839, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667939, 'jti': 'ec3fd7e2-13d7-4a00-960c-0c07e93a4c3b', 'type': 'access', 'sub': '6670caa36a0397e4a31bd229', 'nbf': 1718667939, 'csrf': '5b66520f-3ca3-4db7-8710-df9754de5595', 'exp': 1718668839, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667940, 'jti': 'f7ecae12-84e9-4cf3-a08d-9ab399ebfc5e', 'type': 'access', 'sub': '6670caa36a0397e4a31bd22b', 'nbf': 1718667940, 'csrf': '18c0a04b-9964-4578-9622-2cc3979a6a84', 'exp': 1718668840, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667940, 'jti': 'f7ecae12-84e9-4cf3-a08d-9ab399ebfc5e', 'type': 'access', 'sub': '6670caa36a0397e4a31bd22b', 'nbf': 1718667940, 'csrf': '18c0a04b-9964-4578-9622-2cc3979a6a84', 'exp': 1718668840, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667940, 'jti': 'f7ecae12-84e9-4cf3-a08d-9ab399ebfc5e', 'type': 'access', 'sub': '6670caa36a0397e4a31bd22b', 'nbf': 1718667940, 'csrf': '18c0a04b-9964-4578-9622-2cc3979a6a84', 'exp': 1718668840, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667940, 'jti': 'e2c8bfe5-402f-4448-9090-5c6369e2efff', 'type': 'access', 'sub': '6670caa46a0397e4a31bd231', 'nbf': 1718667940, 'csrf': '4fbce47a-8e3c-4659-bba7-ae3a0bfc7252', 'exp': 1718668840, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Getting public official by ID 6670caa46a0397e4a31bd232
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667940, 'jti': '121e6bd5-3671-48b4-8ed9-73cd27955e6f', 'type': 'access', 'sub': '6670caa46a0397e4a31bd236', 'nbf': 1718667940, 'csrf': '5a359477-43bc-42dc-944f-dbb9c2c75bdf', 'exp': 1718668840, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667940, 'jti': '121e6bd5-3671-48b4-8ed9-73cd27955e6f', 'type': 'access', 'sub': '6670caa46a0397e4a31bd236', 'nbf': 1718667940, 'csrf': '5a359477-43bc-42dc-944f-dbb9c2c75bdf', 'exp': 1718668840, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='6670caa46a0397e4a31bd237')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667940, 'jti': 'b93d89dc-12eb-4fe7-90dd-af96768b6c1f', 'type': 'access', 'sub': '6670caa46a0397e4a31bd239', 'nbf': 1718667940, 'csrf': '7d9546b3-55ad-4b90-a68d-c077478ce332', 'exp': 1718668840, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667940, 'jti': 'b93d89dc-12eb-4fe7-90dd-af96768b6c1f', 'type': 'access', 'sub': '6670caa46a0397e4a31bd239', 'nbf': 1718667940, 'csrf': '7d9546b3-55ad-4b90-a68d-c077478ce332', 'exp': 1718668840, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='6670caa46a0397e4a31bd23a')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667940, 'jti': 'a33f306c-a6d8-46b1-b487-d8d1d36ac759', 'type': 'access', 'sub': '6670caa46a0397e4a31bd23c', 'nbf': 1718667940, 'csrf': '0b4333a0-4344-4b79-b7b2-8c5562c3aa5e', 'exp': 1718668840, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667941, 'jti': '88c684b5-ed6c-4d2d-81ac-0a184e06fba7', 'type': 'access', 'sub': '6670caa56a0397e4a31bd23e', 'nbf': 1718667941, 'csrf': '6b1f7f05-030f-46d6-bd08-ba321e02ae58', 'exp': 1718668841, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667941, 'jti': '88c684b5-ed6c-4d2d-81ac-0a184e06fba7', 'type': 'access', 'sub': '6670caa56a0397e4a31bd23e', 'nbf': 1718667941, 'csrf': '6b1f7f05-030f-46d6-bd08-ba321e02ae58', 'exp': 1718668841, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='6670caa56a0397e4a31bd23f')
INFO:app.extensions:po_data={'name_eng': 'newname123', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667941, 'jti': '757edf53-ac80-4976-b38d-bb2de54b69ef', 'type': 'access', 'sub': '6670caa56a0397e4a31bd241', 'nbf': 1718667941, 'csrf': 'a8f69451-1571-4e36-adfc-74ec1e6bd99d', 'exp': 1718668841, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667941, 'jti': '757edf53-ac80-4976-b38d-bb2de54b69ef', 'type': 'access', 'sub': '6670caa56a0397e4a31bd241', 'nbf': 1718667941, 'csrf': 'a8f69451-1571-4e36-adfc-74ec1e6bd99d', 'exp': 1718668841, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='6670caa56a0397e4a31bd242')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטי134man', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667941, 'jti': 'e024e467-7a32-40a4-a208-169c5bbbb69e', 'type': 'access', 'sub': '6670caa56a0397e4a31bd244', 'nbf': 1718667941, 'csrf': '74a51782-f17e-4b9c-b321-cdce0dff77e1', 'exp': 1718668841, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667941, 'jti': 'e024e467-7a32-40a4-a208-169c5bbbb69e', 'type': 'access', 'sub': '6670caa56a0397e4a31bd244', 'nbf': 1718667941, 'csrf': '74a51782-f17e-4b9c-b321-cdce0dff77e1', 'exp': 1718668841, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='6670caa56a0397e4a31bd245')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'myposition123', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667941, 'jti': '4fff547f-dfae-4fe7-bff5-30a4a9e4bacc', 'type': 'access', 'sub': '6670caa56a0397e4a31bd247', 'nbf': 1718667941, 'csrf': '9d97f79b-9a02-46cc-a21c-051535dd7c6b', 'exp': 1718668841, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667941, 'jti': '4fff547f-dfae-4fe7-bff5-30a4a9e4bacc', 'type': 'access', 'sub': '6670caa56a0397e4a31bd247', 'nbf': 1718667941, 'csrf': '9d97f79b-9a02-46cc-a21c-051535dd7c6b', 'exp': 1718668841, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='6670caa56a0397e4a31bd248')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'myspace': 'myhandle', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667942, 'jti': 'b7496859-ab84-4a2b-9964-a062e4b6709e', 'type': 'access', 'sub': '6670caa66a0397e4a31bd24d', 'nbf': 1718667942, 'csrf': 'aae11daa-6c96-4643-b1f3-7ab4ee3cd138', 'exp': 1718668842, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667942, 'jti': 'e3ebb426-eb34-4e75-8c13-bd8c57a97829', 'type': 'access', 'sub': '6670caa66a0397e4a31bd252', 'nbf': 1718667942, 'csrf': '0142252b-93aa-4048-9019-f2a387cb6532', 'exp': 1718668842, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667942, 'jti': '4163584c-2541-45bb-a72a-483bd625160a', 'type': 'access', 'sub': '6670caa66a0397e4a31bd257', 'nbf': 1718667942, 'csrf': 'a21c8fac-2993-4de5-b0c1-a6f55149c689', 'exp': 1718668842, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667943, 'jti': '4b9efc88-3574-49e0-8538-bc2455358c7a', 'type': 'access', 'sub': '6670caa76a0397e4a31bd25c', 'nbf': 1718667943, 'csrf': 'e188c8f9-f2ab-4c2e-b766-31882fa97d18', 'exp': 1718668843, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667943, 'jti': '6650398e-393f-43b3-b12d-cbd0d10c9823', 'type': 'access', 'sub': '6670caa76a0397e4a31bd25e', 'nbf': 1718667943, 'csrf': 'fbf14150-e133-48aa-8fbc-559d14522a26', 'exp': 1718668843, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667943, 'jti': '10264777-6927-4827-b9da-22143f5025a7', 'type': 'access', 'sub': '6670caa76a0397e4a31bd260', 'nbf': 1718667943, 'csrf': '0001d9af-a788-45ca-a717-a49ae0d69dca', 'exp': 1718668843, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667943, 'jti': 'd466893a-582a-4c15-a9fb-c8c9b66225b5', 'type': 'access', 'sub': '6670caa76a0397e4a31bd262', 'nbf': 1718667943, 'csrf': '9d209d22-cb5f-4d7a-b827-6478f8117545', 'exp': 1718668843, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.5/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667943, 'jti': 'f2d306c3-2df2-433d-b458-a5ae59480823', 'type': 'access', 'sub': '6670caa76a0397e4a31bd264', 'nbf': 1718667943, 'csrf': '47e44350-93f4-4d9a-a623-b3ec0b7fdfa9', 'exp': 1718668843, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667943, 'jti': 'f2d306c3-2df2-433d-b458-a5ae59480823', 'type': 'access', 'sub': '6670caa76a0397e4a31bd264', 'nbf': 1718667943, 'csrf': '47e44350-93f4-4d9a-a623-b3ec0b7fdfa9', 'exp': 1718668843, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667943, 'jti': 'f2d306c3-2df2-433d-b458-a5ae59480823', 'type': 'access', 'sub': '6670caa76a0397e4a31bd264', 'nbf': 1718667943, 'csrf': '47e44350-93f4-4d9a-a623-b3ec0b7fdfa9', 'exp': 1718668843, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667943, 'jti': 'f2d306c3-2df2-433d-b458-a5ae59480823', 'type': 'access', 'sub': '6670caa76a0397e4a31bd264', 'nbf': 1718667943, 'csrf': '47e44350-93f4-4d9a-a623-b3ec0b7fdfa9', 'exp': 1718668843, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667943, 'jti': 'f2d306c3-2df2-433d-b458-a5ae59480823', 'type': 'access', 'sub': '6670caa76a0397e4a31bd264', 'nbf': 1718667943, 'csrf': '47e44350-93f4-4d9a-a623-b3ec0b7fdfa9', 'exp': 1718668843, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667943, 'jti': 'f2d306c3-2df2-433d-b458-a5ae59480823', 'type': 'access', 'sub': '6670caa76a0397e4a31bd264', 'nbf': 1718667943, 'csrf': '47e44350-93f4-4d9a-a623-b3ec0b7fdfa9', 'exp': 1718668843, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667944, 'jti': '9e512a3a-3a67-428e-a0e0-59181d48aea2', 'type': 'access', 'sub': '6670caa86a0397e4a31bd266', 'nbf': 1718667944, 'csrf': '15e16a07-6f61-4320-9ca4-14a414ebc756', 'exp': 1718668844, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667944, 'jti': '9e512a3a-3a67-428e-a0e0-59181d48aea2', 'type': 'access', 'sub': '6670caa86a0397e4a31bd266', 'nbf': 1718667944, 'csrf': '15e16a07-6f61-4320-9ca4-14a414ebc756', 'exp': 1718668844, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667944, 'jti': '9e512a3a-3a67-428e-a0e0-59181d48aea2', 'type': 'access', 'sub': '6670caa86a0397e4a31bd266', 'nbf': 1718667944, 'csrf': '15e16a07-6f61-4320-9ca4-14a414ebc756', 'exp': 1718668844, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667944, 'jti': '9e512a3a-3a67-428e-a0e0-59181d48aea2', 'type': 'access', 'sub': '6670caa86a0397e4a31bd266', 'nbf': 1718667944, 'csrf': '15e16a07-6f61-4320-9ca4-14a414ebc756', 'exp': 1718668844, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667944, 'jti': '9e512a3a-3a67-428e-a0e0-59181d48aea2', 'type': 'access', 'sub': '6670caa86a0397e4a31bd266', 'nbf': 1718667944, 'csrf': '15e16a07-6f61-4320-9ca4-14a414ebc756', 'exp': 1718668844, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667944, 'jti': '9e512a3a-3a67-428e-a0e0-59181d48aea2', 'type': 'access', 'sub': '6670caa86a0397e4a31bd266', 'nbf': 1718667944, 'csrf': '15e16a07-6f61-4320-9ca4-14a414ebc756', 'exp': 1718668844, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\.venv\Lib\site-packages\pydantic\main.py", line 164, in __init__
    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.5/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667945, 'jti': 'fc33b330-bdf1-4d3c-914f-34b92b3fe785', 'type': 'access', 'sub': '6670caa96a0397e4a31bd268', 'nbf': 1718667945, 'csrf': '4a52c5c8-495e-450e-878d-6bd9d26b4e5e', 'exp': 1718668845, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718667945, 'jti': 'e8de6f5e-bc70-4131-a7d8-9cc37f0cb776', 'type': 'access', 'sub': '6670caa96a0397e4a31bd26a', 'nbf': 1718667945, 'csrf': '55805907-cad6-428a-a646-38dee0319e3d', 'exp': 1718668845, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702585, 'jti': '93544c73-6f77-4530-b786-264779e8505b', 'type': 'access', 'sub': '667151f9691d4df5d06e46e9', 'nbf': 1718702585, 'csrf': 'd0221443-ddac-4796-9549-44f6a24f16f8', 'exp': 1718703485, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('667151f9691d4df5d06e46e9') email='test@test.com' password='__hash__scrypt:32768:8:1$jEHSZlqmZfVmAgb8$e8746196f646f542d9a242c2d370d22577392eb2966c1f8d4898b9b0b5eaf1a68d71f5493a9c549d69306f4a047967c7943116cfba70a0382ba34d7f9486fee4' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702585, 'jti': '67718c14-14f9-42f8-a8d8-c3ce45fa6d5b', 'type': 'access', 'sub': '667151f9691d4df5d06e46ee', 'nbf': 1718702585, 'csrf': 'ad80d25b-7303-41e9-9a31-52ee2444d4c3', 'exp': 1718703485, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('667151f9691d4df5d06e46ee') email='test@test.com' password='__hash__scrypt:32768:8:1$SgVrJkDhfMVgrcJT$cbb61d9eebbc576ba3fc00150b66db1b742cb74e371b484247eaea5cbbc16cea94488f9949aa4555088946b95989f75465a214ee8290373c26abd9ff9e9cef2a' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702585, 'jti': 'ab3a9544-6498-483f-865d-8ebc6c5db4c0', 'type': 'access', 'sub': '667151f9691d4df5d06e46f1', 'nbf': 1718702585, 'csrf': '23b7b4ef-540d-48df-9b4b-4700d9db542f', 'exp': 1718703485, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('667151f9691d4df5d06e46f1') email='test@test.com' password='__hash__scrypt:32768:8:1$XhRkJQCbjGk0r01f$d8170e201238a3c7b85e8c6b59b7458c4b8dbc405a36f8cc0ccccde88d5ea24447a12228bea4a26e53a341daa82e0389a28ca0a5b3ff0e2a32ec69efe2a44f15' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.7/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.7/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.7/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.7/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702586, 'jti': 'b3e3a59c-7c1b-4054-84b6-098eb0f21f8c', 'type': 'access', 'sub': '667151fa691d4df5d06e46fe', 'nbf': 1718702586, 'csrf': 'ae98682f-b0b3-476c-a97a-c69bfd5a50d6', 'exp': 1718703486, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702586, 'jti': 'b3e3a59c-7c1b-4054-84b6-098eb0f21f8c', 'type': 'access', 'sub': '667151fa691d4df5d06e46fe', 'nbf': 1718702586, 'csrf': 'ae98682f-b0b3-476c-a97a-c69bfd5a50d6', 'exp': 1718703486, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702586, 'jti': 'b3e3a59c-7c1b-4054-84b6-098eb0f21f8c', 'type': 'access', 'sub': '667151fa691d4df5d06e46fe', 'nbf': 1718702586, 'csrf': 'ae98682f-b0b3-476c-a97a-c69bfd5a50d6', 'exp': 1718703486, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702586, 'jti': '650a3008-d21a-4882-b9ac-650f44c6a7cb', 'type': 'access', 'sub': '667151fa691d4df5d06e4702', 'nbf': 1718702586, 'csrf': '63eba4b4-a37a-4080-9565-2b36acdd50f1', 'exp': 1718703486, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all generated posts
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702587, 'jti': 'c5c7841a-eba0-4cbe-89a8-07dde490f92b', 'type': 'access', 'sub': '667151fa691d4df5d06e4704', 'nbf': 1718702587, 'csrf': '4fac0b5b-b64c-4eb1-a24b-5753649c191f', 'exp': 1718703487, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all generated posts
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702587, 'jti': 'af3e6842-042a-4250-9fb1-227db1aef3ad', 'type': 'access', 'sub': '667151fb691d4df5d06e4707', 'nbf': 1718702587, 'csrf': '2f29d5d3-376c-46ed-ad43-29ef227d55a8', 'exp': 1718703487, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702587, 'jti': 'af3e6842-042a-4250-9fb1-227db1aef3ad', 'type': 'access', 'sub': '667151fb691d4df5d06e4707', 'nbf': 1718702587, 'csrf': '2f29d5d3-376c-46ed-ad43-29ef227d55a8', 'exp': 1718703487, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702587, 'jti': '6c9fd539-369d-464a-b188-29702045483a', 'type': 'access', 'sub': '667151fb691d4df5d06e470b', 'nbf': 1718702587, 'csrf': 'f28ec069-860b-487e-afb5-c0d45ab8e0e9', 'exp': 1718703487, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702587, 'jti': 'a5d1f595-1a72-4933-a789-69805c1c6ddd', 'type': 'access', 'sub': '667151fb691d4df5d06e470e', 'nbf': 1718702587, 'csrf': 'b018dfcd-0d9a-4529-9812-8f6ada2103a7', 'exp': 1718703487, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
ERROR:app.extensions:'Public Official with ID 666e3cdc77f6b009eab6d345 not found'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 20, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 19, in generate_post
    raise KeyError(f"Public Official with ID {po_id} not found")
KeyError: 'Public Official with ID 666e3cdc77f6b009eab6d345 not found'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702587, 'jti': 'bbbb9019-609c-4623-baa4-c86cfeacd08a', 'type': 'access', 'sub': '667151fb691d4df5d06e4711', 'nbf': 1718702587, 'csrf': '251f66eb-85d5-481f-87b2-2f37704a4d56', 'exp': 1718703487, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
ERROR:app.extensions:1 validation error for GeneratedPost
prompt
  String should have at least 1 character [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 20, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 25, in generate_post
    generated_post = GeneratedPost(user_id=ObjectId(user_id),
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for GeneratedPost
prompt
  String should have at least 1 character [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702587, 'jti': 'c313d9e5-5265-494b-9a1a-6c8247efc937', 'type': 'access', 'sub': '667151fb691d4df5d06e4714', 'nbf': 1718702587, 'csrf': 'e7e5b0fb-1198-40ee-b899-e464ebaf2185', 'exp': 1718703487, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
ERROR:app.extensions:1 validation error for GeneratedPost
social_media
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/enum
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 20, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 25, in generate_post
    generated_post = GeneratedPost(user_id=ObjectId(user_id),
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for GeneratedPost
social_media
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/enum
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702587, 'jti': 'e30caf62-865a-4b16-a70e-03b720185e1f', 'type': 'access', 'sub': '667151fb691d4df5d06e4717', 'nbf': 1718702587, 'csrf': '66ff8641-d385-41f3-a539-00ad5c51b3c7', 'exp': 1718703487, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test2@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702587, 'jti': '96cbb1e4-c078-4416-8387-dbc26c8d11f3', 'type': 'access', 'sub': '667151fb691d4df5d06e4719', 'nbf': 1718702587, 'csrf': 'd3cd83ef-c778-4b45-ad21-8e59ff930f1c', 'exp': 1718703487, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test3@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702587, 'jti': 'd4f2574b-c663-4ff3-b6ec-ecc8f4cd53fe', 'type': 'access', 'sub': '667151fb691d4df5d06e471b', 'nbf': 1718702587, 'csrf': 'a71b784f-d9b7-437d-9509-002675e0e06f', 'exp': 1718703487, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702588, 'jti': '5f1f821b-81a5-491f-b92d-ffdff041cfc1', 'type': 'access', 'sub': '667151fb691d4df5d06e471d', 'nbf': 1718702588, 'csrf': '8d534b2a-072c-4e71-a895-c86b8689fb10', 'exp': 1718703488, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all generated posts
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702588, 'jti': 'a8c1f86e-6946-4c4b-99e0-ea1415b36cb6', 'type': 'access', 'sub': '667151fc691d4df5d06e471f', 'nbf': 1718702588, 'csrf': '0daebd8a-2edb-4039-9811-0b2bd6a5a2cc', 'exp': 1718703488, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all generated posts
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702588, 'jti': 'd8c648e0-5b3c-4892-a479-92c6ee5e2df6', 'type': 'access', 'sub': '667151fc691d4df5d06e4721', 'nbf': 1718702588, 'csrf': '4f66db01-7b81-4297-8865-fa0b6631b87d', 'exp': 1718703488, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702588, 'jti': '59e7ab79-3886-4b9f-b3a9-c1192aa4eb97', 'type': 'access', 'sub': '667151fc691d4df5d06e4724', 'nbf': 1718702588, 'csrf': '97f1c590-7ad9-400b-b839-e0d317467ed8', 'exp': 1718703488, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702588, 'jti': '59e7ab79-3886-4b9f-b3a9-c1192aa4eb97', 'type': 'access', 'sub': '667151fc691d4df5d06e4724', 'nbf': 1718702588, 'csrf': '97f1c590-7ad9-400b-b839-e0d317467ed8', 'exp': 1718703488, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 667151fc691d4df5d06e4725
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('667151fc691d4df5d06e4725'), user_id=ObjectId('667151fc691d4df5d06e4724'), public_official_id=ObjectId('667151fc691d4df5d06e4723'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702588, 'jti': 'cc496f09-f1c0-4641-b1a8-c69df4d25b48', 'type': 'access', 'sub': '667151fc691d4df5d06e4728', 'nbf': 1718702588, 'csrf': '605c4e34-3ca7-4847-974e-0537473399d1', 'exp': 1718703488, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702588, 'jti': 'd6c13cfd-0945-40e6-9114-e7574502eba2', 'type': 'access', 'sub': '667151fc691d4df5d06e472a', 'nbf': 1718702588, 'csrf': '98756a2b-3cca-438c-926a-725d7e3b4448', 'exp': 1718703488, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 667151fc691d4df5d06e4729
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('667151fc691d4df5d06e4729'), user_id=ObjectId('667151fc691d4df5d06e4728'), public_official_id=ObjectId('667151fc691d4df5d06e4727'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702588, 'jti': '4c7c5ed9-2a76-4520-9cae-9f17ca701f0c', 'type': 'access', 'sub': '667151fc691d4df5d06e472c', 'nbf': 1718702588, 'csrf': '23f7fb8d-aa8e-4ec7-8b6c-7f1446747500', 'exp': 1718703488, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670be79761f0759941c494c
INFO:app.extensions:generated_post=None
ERROR:app.extensions:Generated Post with ID 6670be79761f0759941c494c not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702588, 'jti': 'b76b92fd-439c-4d58-b60d-ad1e1975e7bc', 'type': 'access', 'sub': '667151fc691d4df5d06e472f', 'nbf': 1718702588, 'csrf': '62c02f5a-02a6-4b0d-b069-f8e1295b8976', 'exp': 1718703488, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test2@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702589, 'jti': 'bde81c2b-7164-498f-a8f3-5f693d7074ff', 'type': 'access', 'sub': '667151fd691d4df5d06e4731', 'nbf': 1718702589, 'csrf': '3e9793fb-a420-49ba-a2b8-6982f58f1c31', 'exp': 1718703489, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 667151fc691d4df5d06e4730
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('667151fc691d4df5d06e4730'), user_id=ObjectId('667151fc691d4df5d06e472f'), public_official_id=ObjectId('667151fc691d4df5d06e472e'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
ERROR:app.extensions:User with ID 667151fd691d4df5d06e4731 does not have access to Generated Post with ID 667151fc691d4df5d06e4730
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702589, 'jti': '0cfb0b9b-6cee-400b-8fab-19823e2ee350', 'type': 'access', 'sub': '667151fd691d4df5d06e4734', 'nbf': 1718702589, 'csrf': 'ec13be0b-7845-4b3e-b6f7-d2b38aeb9898', 'exp': 1718703489, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702589, 'jti': '0cfb0b9b-6cee-400b-8fab-19823e2ee350', 'type': 'access', 'sub': '667151fd691d4df5d06e4734', 'nbf': 1718702589, 'csrf': 'ec13be0b-7845-4b3e-b6f7-d2b38aeb9898', 'exp': 1718703489, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702589, 'jti': '0cfb0b9b-6cee-400b-8fab-19823e2ee350', 'type': 'access', 'sub': '667151fd691d4df5d06e4734', 'nbf': 1718702589, 'csrf': 'ec13be0b-7845-4b3e-b6f7-d2b38aeb9898', 'exp': 1718703489, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702589, 'jti': '0cfb0b9b-6cee-400b-8fab-19823e2ee350', 'type': 'access', 'sub': '667151fd691d4df5d06e4734', 'nbf': 1718702589, 'csrf': 'ec13be0b-7845-4b3e-b6f7-d2b38aeb9898', 'exp': 1718703489, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 667151fd691d4df5d06e4734
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702589, 'jti': '5c15efd4-9f65-49b8-9edc-3709dd94a576', 'type': 'access', 'sub': '667151fd691d4df5d06e473a', 'nbf': 1718702589, 'csrf': '685c7572-c208-48b8-a45f-0d4abe5f7950', 'exp': 1718703489, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702589, 'jti': '5c15efd4-9f65-49b8-9edc-3709dd94a576', 'type': 'access', 'sub': '667151fd691d4df5d06e473a', 'nbf': 1718702589, 'csrf': '685c7572-c208-48b8-a45f-0d4abe5f7950', 'exp': 1718703489, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702589, 'jti': '5c15efd4-9f65-49b8-9edc-3709dd94a576', 'type': 'access', 'sub': '667151fd691d4df5d06e473a', 'nbf': 1718702589, 'csrf': '685c7572-c208-48b8-a45f-0d4abe5f7950', 'exp': 1718703489, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702589, 'jti': '7552f9d1-e295-4fa8-8057-8b7313b29df2', 'type': 'access', 'sub': '667151fd691d4df5d06e473e', 'nbf': 1718702589, 'csrf': '422cea61-6983-4096-a12b-4a1059501754', 'exp': 1718703489, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 667151fd691d4df5d06e473a
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702589, 'jti': '77247bcf-3ba6-4605-8f80-bc75aa4062b4', 'type': 'access', 'sub': '667151fd691d4df5d06e4740', 'nbf': 1718702589, 'csrf': 'f02d378b-db79-4890-aea6-0b7e80577599', 'exp': 1718703489, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 667151fd691d4df5d06e4740
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702589, 'jti': 'fc6142c5-bae0-4e84-a8f3-733c75cb3021', 'type': 'access', 'sub': '667151fd691d4df5d06e4742', 'nbf': 1718702589, 'csrf': 'c06b527d-945c-47a1-bdac-7cf9d858bf85', 'exp': 1718703489, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670be79761f0759941c494c
ERROR:app.extensions:User with ID 667151fd691d4df5d06e4742 does not have access to Generated Post for user ID 6670be79761f0759941c494c
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702589, 'jti': '1feee6d6-a608-4a98-a4bd-699e0cc9fa90', 'type': 'access', 'sub': '667151fd691d4df5d06e4744', 'nbf': 1718702589, 'csrf': '5f3d93e4-837f-4f11-996e-594e62ab682d', 'exp': 1718703489, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702589, 'jti': '3e3e4915-52ce-4174-a409-92b6c1d66319', 'type': 'access', 'sub': '667151fd691d4df5d06e4747', 'nbf': 1718702589, 'csrf': '82e71c79-79cc-438f-a5c8-2db793a2337c', 'exp': 1718703489, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.7/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.7/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702590, 'jti': '29d2de1f-aa18-4db8-ae0a-316cf589cec2', 'type': 'access', 'sub': '667151fe691d4df5d06e4749', 'nbf': 1718702590, 'csrf': '01839d3d-49d6-48aa-8bc5-8f09f5259fb2', 'exp': 1718703490, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702590, 'jti': 'ce142f4a-8955-4934-a35a-ae6ea29c7e9c', 'type': 'access', 'sub': '667151fe691d4df5d06e474b', 'nbf': 1718702590, 'csrf': 'f17961ab-b715-4078-a94c-5c5dcbcfe6c1', 'exp': 1718703490, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702590, 'jti': '238eefe4-57d1-48df-b833-69127f03886d', 'type': 'access', 'sub': '667151fe691d4df5d06e474d', 'nbf': 1718702590, 'csrf': 'f0a34b5a-018e-49c9-9e43-d9462fdfc9d7', 'exp': 1718703490, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702590, 'jti': '5ce45757-33ae-4c09-a98e-26d34653cb00', 'type': 'access', 'sub': '667151fe691d4df5d06e474f', 'nbf': 1718702590, 'csrf': '06d1514c-5852-4129-a5d8-0896b3f8a561', 'exp': 1718703490, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/enum
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/enum
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702590, 'jti': '9b5399f1-32c0-43d8-bff4-9e35e647b5fc', 'type': 'access', 'sub': '667151fe691d4df5d06e4751', 'nbf': 1718702590, 'csrf': '4905b5c4-4136-4ddd-bce0-594e2f8db14e', 'exp': 1718703490, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702590, 'jti': '9b5399f1-32c0-43d8-bff4-9e35e647b5fc', 'type': 'access', 'sub': '667151fe691d4df5d06e4751', 'nbf': 1718702590, 'csrf': '4905b5c4-4136-4ddd-bce0-594e2f8db14e', 'exp': 1718703490, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:Public Official already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 23, in create_public_official
    public_official = public_official_service.create_public_official(public_official)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\publicofficial_data_manager_mongodb.py", line 14, in create_public_official
    raise ObjectAlreadyExistsException("Public Official already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: Public Official already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702591, 'jti': '36e9108f-911b-483a-b3b0-8d0f58607002', 'type': 'access', 'sub': '667151fe691d4df5d06e4754', 'nbf': 1718702591, 'csrf': '2dfb1b65-78ae-4519-ba92-b6d93323fbbb', 'exp': 1718703491, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702591, 'jti': '36e9108f-911b-483a-b3b0-8d0f58607002', 'type': 'access', 'sub': '667151fe691d4df5d06e4754', 'nbf': 1718702591, 'csrf': '2dfb1b65-78ae-4519-ba92-b6d93323fbbb', 'exp': 1718703491, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702591, 'jti': '36e9108f-911b-483a-b3b0-8d0f58607002', 'type': 'access', 'sub': '667151fe691d4df5d06e4754', 'nbf': 1718702591, 'csrf': '2dfb1b65-78ae-4519-ba92-b6d93323fbbb', 'exp': 1718703491, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702591, 'jti': '36e9108f-911b-483a-b3b0-8d0f58607002', 'type': 'access', 'sub': '667151fe691d4df5d06e4754', 'nbf': 1718702591, 'csrf': '2dfb1b65-78ae-4519-ba92-b6d93323fbbb', 'exp': 1718703491, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702591, 'jti': '5f1a92d2-f7c4-4d0f-9d72-224426a625bf', 'type': 'access', 'sub': '667151ff691d4df5d06e4759', 'nbf': 1718702591, 'csrf': '472c3c62-ac9f-4e5d-ad15-e212c8558d45', 'exp': 1718703491, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702591, 'jti': '5f1a92d2-f7c4-4d0f-9d72-224426a625bf', 'type': 'access', 'sub': '667151ff691d4df5d06e4759', 'nbf': 1718702591, 'csrf': '472c3c62-ac9f-4e5d-ad15-e212c8558d45', 'exp': 1718703491, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702591, 'jti': '5f1a92d2-f7c4-4d0f-9d72-224426a625bf', 'type': 'access', 'sub': '667151ff691d4df5d06e4759', 'nbf': 1718702591, 'csrf': '472c3c62-ac9f-4e5d-ad15-e212c8558d45', 'exp': 1718703491, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702591, 'jti': '67b5b025-8fdf-4ee9-9c1c-caedd5bd7008', 'type': 'access', 'sub': '667151ff691d4df5d06e475d', 'nbf': 1718702591, 'csrf': '3b7111a3-914f-4e41-9c95-bc655c3666d6', 'exp': 1718703491, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702591, 'jti': '7ce0f232-6a49-42f0-b464-27aee95992b1', 'type': 'access', 'sub': '667151ff691d4df5d06e475f', 'nbf': 1718702591, 'csrf': 'a0964e33-5876-473e-82b2-d0d7eb973fc4', 'exp': 1718703491, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702591, 'jti': '7ce0f232-6a49-42f0-b464-27aee95992b1', 'type': 'access', 'sub': '667151ff691d4df5d06e475f', 'nbf': 1718702591, 'csrf': 'a0964e33-5876-473e-82b2-d0d7eb973fc4', 'exp': 1718703491, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702591, 'jti': '7ce0f232-6a49-42f0-b464-27aee95992b1', 'type': 'access', 'sub': '667151ff691d4df5d06e475f', 'nbf': 1718702591, 'csrf': 'a0964e33-5876-473e-82b2-d0d7eb973fc4', 'exp': 1718703491, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702591, 'jti': '6b364cd0-5850-4fac-a464-525fab56f8a1', 'type': 'access', 'sub': '667151ff691d4df5d06e4765', 'nbf': 1718702591, 'csrf': 'f0f1b6df-621e-4e96-bf53-d369e1b4fdd7', 'exp': 1718703491, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Getting public official by ID 667151ff691d4df5d06e4766
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702592, 'jti': 'bf5dbae6-776d-46a0-8228-425d823af949', 'type': 'access', 'sub': '66715200691d4df5d06e476a', 'nbf': 1718702592, 'csrf': 'b28dd081-6157-44c3-a0df-9e4d5894eba5', 'exp': 1718703492, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702592, 'jti': 'bf5dbae6-776d-46a0-8228-425d823af949', 'type': 'access', 'sub': '66715200691d4df5d06e476a', 'nbf': 1718702592, 'csrf': 'b28dd081-6157-44c3-a0df-9e4d5894eba5', 'exp': 1718703492, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='66715200691d4df5d06e476b')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702592, 'jti': 'ec60fd46-eebc-47a4-a885-94e8c78d61f7', 'type': 'access', 'sub': '66715200691d4df5d06e476d', 'nbf': 1718702592, 'csrf': '6b171584-1d0d-4d2d-bdcc-f904a5af7061', 'exp': 1718703492, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702592, 'jti': 'ec60fd46-eebc-47a4-a885-94e8c78d61f7', 'type': 'access', 'sub': '66715200691d4df5d06e476d', 'nbf': 1718702592, 'csrf': '6b171584-1d0d-4d2d-bdcc-f904a5af7061', 'exp': 1718703492, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='66715200691d4df5d06e476e')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.7/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.7/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702592, 'jti': '44628aa3-2efc-4ad6-a0d1-b74af9bfb81e', 'type': 'access', 'sub': '66715200691d4df5d06e4770', 'nbf': 1718702592, 'csrf': '12b17380-b4c4-4006-935d-b8c5e5647c39', 'exp': 1718703492, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702592, 'jti': '48602f40-31c0-4658-9bd5-1f0ec848cdcc', 'type': 'access', 'sub': '66715200691d4df5d06e4772', 'nbf': 1718702592, 'csrf': '56e1da49-a3e0-41de-94f5-c7086109bba1', 'exp': 1718703492, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702592, 'jti': '48602f40-31c0-4658-9bd5-1f0ec848cdcc', 'type': 'access', 'sub': '66715200691d4df5d06e4772', 'nbf': 1718702592, 'csrf': '56e1da49-a3e0-41de-94f5-c7086109bba1', 'exp': 1718703492, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='66715200691d4df5d06e4773')
INFO:app.extensions:po_data={'name_eng': 'newname123', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702592, 'jti': '779721e4-fc25-40cd-8458-bb53201bceb8', 'type': 'access', 'sub': '66715200691d4df5d06e4775', 'nbf': 1718702592, 'csrf': 'caaf9ba1-6566-4e25-a88a-2fec03551f4f', 'exp': 1718703492, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702592, 'jti': '779721e4-fc25-40cd-8458-bb53201bceb8', 'type': 'access', 'sub': '66715200691d4df5d06e4775', 'nbf': 1718702592, 'csrf': 'caaf9ba1-6566-4e25-a88a-2fec03551f4f', 'exp': 1718703492, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='66715200691d4df5d06e4776')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטי134man', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702593, 'jti': 'a9c391e3-a115-4241-9b41-2dbecf7d2dc1', 'type': 'access', 'sub': '66715200691d4df5d06e4778', 'nbf': 1718702593, 'csrf': '04bdeccb-ee6d-4bbf-84da-aba96fd89552', 'exp': 1718703493, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702593, 'jti': 'a9c391e3-a115-4241-9b41-2dbecf7d2dc1', 'type': 'access', 'sub': '66715200691d4df5d06e4778', 'nbf': 1718702593, 'csrf': '04bdeccb-ee6d-4bbf-84da-aba96fd89552', 'exp': 1718703493, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='66715201691d4df5d06e4779')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'myposition123', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702593, 'jti': 'ad96026d-d1f5-4218-a882-9a25913433b9', 'type': 'access', 'sub': '66715201691d4df5d06e477b', 'nbf': 1718702593, 'csrf': '9fcd5858-bcc4-4900-ae87-778b381c03a4', 'exp': 1718703493, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702593, 'jti': 'ad96026d-d1f5-4218-a882-9a25913433b9', 'type': 'access', 'sub': '66715201691d4df5d06e477b', 'nbf': 1718702593, 'csrf': '9fcd5858-bcc4-4900-ae87-778b381c03a4', 'exp': 1718703493, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='66715201691d4df5d06e477c')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'myspace': 'myhandle', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/enum
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/enum
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702593, 'jti': '63f42e16-2f81-47c6-85f8-15ef2a7c111d', 'type': 'access', 'sub': '66715201691d4df5d06e4781', 'nbf': 1718702593, 'csrf': '5398f058-ed4a-4e26-bbbf-f138cb7903b5', 'exp': 1718703493, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702593, 'jti': 'd3da57dd-e7c8-43e5-ae7e-538d002d4813', 'type': 'access', 'sub': '66715201691d4df5d06e4786', 'nbf': 1718702593, 'csrf': 'b9fa912a-0607-4356-9c0c-e01cc5ac6fbb', 'exp': 1718703493, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702594, 'jti': '21acb152-ed50-4fdd-9ed8-27a54813f2b6', 'type': 'access', 'sub': '66715202691d4df5d06e478b', 'nbf': 1718702594, 'csrf': '4088d98a-aa9f-4f13-a70b-f6a11e8ebebb', 'exp': 1718703494, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702594, 'jti': '23531e62-8321-4d80-a74d-ca10ff97b102', 'type': 'access', 'sub': '66715202691d4df5d06e4790', 'nbf': 1718702594, 'csrf': '1cc9bef7-5a73-4978-90a5-b6c4c69b7e36', 'exp': 1718703494, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702594, 'jti': '789a4bc3-85d3-4c0f-b59d-8fd2d973992b', 'type': 'access', 'sub': '66715202691d4df5d06e4792', 'nbf': 1718702594, 'csrf': 'c3bd1fe5-f975-4620-ae1b-37d0604932ff', 'exp': 1718703494, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702595, 'jti': 'ae5de9d8-d821-450e-9127-7486a463c30d', 'type': 'access', 'sub': '66715203691d4df5d06e4794', 'nbf': 1718702595, 'csrf': '21a2505c-1381-4c82-ada6-9b6f7e3b7869', 'exp': 1718703495, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702595, 'jti': '2f652ebd-1a38-441c-9c05-145d4704c3b6', 'type': 'access', 'sub': '66715203691d4df5d06e4796', 'nbf': 1718702595, 'csrf': '01e6c582-11e8-4538-8abf-feef6126d4d2', 'exp': 1718703495, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.7/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.7/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702595, 'jti': '14eaae2b-2e5e-495d-a480-00389d69cc95', 'type': 'access', 'sub': '66715203691d4df5d06e4798', 'nbf': 1718702595, 'csrf': '36b6118e-9e02-470f-bdd0-f2d268ed6483', 'exp': 1718703495, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702595, 'jti': '14eaae2b-2e5e-495d-a480-00389d69cc95', 'type': 'access', 'sub': '66715203691d4df5d06e4798', 'nbf': 1718702595, 'csrf': '36b6118e-9e02-470f-bdd0-f2d268ed6483', 'exp': 1718703495, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702595, 'jti': '14eaae2b-2e5e-495d-a480-00389d69cc95', 'type': 'access', 'sub': '66715203691d4df5d06e4798', 'nbf': 1718702595, 'csrf': '36b6118e-9e02-470f-bdd0-f2d268ed6483', 'exp': 1718703495, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702595, 'jti': '14eaae2b-2e5e-495d-a480-00389d69cc95', 'type': 'access', 'sub': '66715203691d4df5d06e4798', 'nbf': 1718702595, 'csrf': '36b6118e-9e02-470f-bdd0-f2d268ed6483', 'exp': 1718703495, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702595, 'jti': '14eaae2b-2e5e-495d-a480-00389d69cc95', 'type': 'access', 'sub': '66715203691d4df5d06e4798', 'nbf': 1718702595, 'csrf': '36b6118e-9e02-470f-bdd0-f2d268ed6483', 'exp': 1718703495, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702595, 'jti': '14eaae2b-2e5e-495d-a480-00389d69cc95', 'type': 'access', 'sub': '66715203691d4df5d06e4798', 'nbf': 1718702595, 'csrf': '36b6118e-9e02-470f-bdd0-f2d268ed6483', 'exp': 1718703495, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702596, 'jti': 'b4ea4118-4a75-4697-b2fd-cdb1d118356d', 'type': 'access', 'sub': '66715204691d4df5d06e479a', 'nbf': 1718702596, 'csrf': '9ecd6974-efb9-4ade-b818-fc40279af1eb', 'exp': 1718703496, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702596, 'jti': 'b4ea4118-4a75-4697-b2fd-cdb1d118356d', 'type': 'access', 'sub': '66715204691d4df5d06e479a', 'nbf': 1718702596, 'csrf': '9ecd6974-efb9-4ade-b818-fc40279af1eb', 'exp': 1718703496, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702596, 'jti': 'b4ea4118-4a75-4697-b2fd-cdb1d118356d', 'type': 'access', 'sub': '66715204691d4df5d06e479a', 'nbf': 1718702596, 'csrf': '9ecd6974-efb9-4ade-b818-fc40279af1eb', 'exp': 1718703496, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702596, 'jti': 'b4ea4118-4a75-4697-b2fd-cdb1d118356d', 'type': 'access', 'sub': '66715204691d4df5d06e479a', 'nbf': 1718702596, 'csrf': '9ecd6974-efb9-4ade-b818-fc40279af1eb', 'exp': 1718703496, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702596, 'jti': 'b4ea4118-4a75-4697-b2fd-cdb1d118356d', 'type': 'access', 'sub': '66715204691d4df5d06e479a', 'nbf': 1718702596, 'csrf': '9ecd6974-efb9-4ade-b818-fc40279af1eb', 'exp': 1718703496, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702596, 'jti': 'b4ea4118-4a75-4697-b2fd-cdb1d118356d', 'type': 'access', 'sub': '66715204691d4df5d06e479a', 'nbf': 1718702596, 'csrf': '9ecd6974-efb9-4ade-b818-fc40279af1eb', 'exp': 1718703496, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702596, 'jti': 'e53703fb-a903-4197-bcc2-fcd9334bee45', 'type': 'access', 'sub': '66715204691d4df5d06e479c', 'nbf': 1718702596, 'csrf': '6a415960-8ee5-481d-a143-aaf0e52e8c55', 'exp': 1718703496, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702596, 'jti': '3ff05601-3df5-416c-9784-d2eb0e875d87', 'type': 'access', 'sub': '66715204691d4df5d06e479e', 'nbf': 1718702596, 'csrf': 'f8266816-1d79-40ba-bbff-06380911380c', 'exp': 1718703496, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:werkzeug: * Restarting with stat
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'invalidemailaddress', 'password': 'testtest'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'invalidemailaddress', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'wrongpassword'}
ERROR:app.extensions:Invalid Username or Password for {'email': 'test@test.com', 'password': 'wrongpassword'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702808, 'jti': 'cd861f59-5753-4828-86ea-7d3badd9bc95', 'type': 'access', 'sub': '667152d8d2df3cbaf59595ba', 'nbf': 1718702808, 'csrf': '5f72a23d-5257-4a43-82c4-4bdd7c393678', 'exp': 1718703708, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('667152d8d2df3cbaf59595ba') email='test@test.com' password='__hash__scrypt:32768:8:1$qtP2Czc0gyqFNQkF$6558cdbb88909d59c455ef97f2a4306fa1759ebe3ed2454fa7e25112c2d94623bc42911e7e8253a071c2d961290325da7fad14b4f625f0c3a06c9d5a2effaa48' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702808, 'jti': '72ba6564-2486-482e-ae37-203a0d41996f', 'type': 'access', 'sub': '667152d8d2df3cbaf59595bf', 'nbf': 1718702808, 'csrf': '17f4d78e-9eec-4908-a9c4-5d09cd0818f3', 'exp': 1718703708, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('667152d8d2df3cbaf59595bf') email='test@test.com' password='__hash__scrypt:32768:8:1$nVlE4XMv37QjctNk$5aef903baed3c5dbb497ef61d3dc8f4c836588cc579e174afa62878fdca85099c4d0213b1b8e541e27da5c38ebf66c2add73c779b6d2a14dbc2f59ed0e269ae6' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702808, 'jti': 'c89d636c-3ce7-42dc-8a67-ca563dcc9121', 'type': 'access', 'sub': '667152d8d2df3cbaf59595c2', 'nbf': 1718702808, 'csrf': '5299119d-785a-4aeb-b9b1-4edb33e52275', 'exp': 1718703708, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Logging out user
INFO:app.extensions:User id=ObjectId('667152d8d2df3cbaf59595c2') email='test@test.com' password='__hash__scrypt:32768:8:1$sqQ229G6QnjKGFTj$dc8b7737a9a4bbb6eed02b8d0272b75724664e4288a34015273b740f064c9945128efcdea584737cfccb5f83b085e25a10c0284f96697281c1b7e561dc67e3ae' username='testman' position='tester' role=<UserRole.BASIC_USER: 'basic_user'> logged out.
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'test@test.com', 'password': 'testtest'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='invalidemailaddress', input_type=str]
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'invalidemailaddress', 'password': 'testtest', 'position': 'test master', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Unauthorized role, cannot register as admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'password': 'testtest', 'position': 'test master', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.7/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
email
  Field required [type=missing, input_value={'password': 'testtest', ..., 'username': 'testman'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.7/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'existing@test.com', 'password': 'newpassword', 'position': 'test position', 'username': 'newuser'}
ERROR:app.extensions:User already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 53, in register
    user = user_service.create_user(user)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\user_data_manager_mongodb.py", line 14, in create_user
    raise ObjectAlreadyExistsException("User already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: User already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'test master'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.7/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...osition': 'test master'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.7/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': '', 'password': '', 'position': '', 'username': ''}
ERROR:app.extensions:4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\auth\routes.py", line 52, in register
    user = User(**user_data)
           ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for User
email
  value is not a valid email address: The email address is not valid. It must have exactly one @-sign. [type=value_error, input_value='', input_type=str]
password
  String should have at least 8 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702809, 'jti': '4934dec4-6747-43c4-b9e6-c91b87516b00', 'type': 'access', 'sub': '667152d9d2df3cbaf59595cf', 'nbf': 1718702809, 'csrf': 'c304a3d2-9fe3-4261-a571-7a2602392321', 'exp': 1718703709, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702809, 'jti': '4934dec4-6747-43c4-b9e6-c91b87516b00', 'type': 'access', 'sub': '667152d9d2df3cbaf59595cf', 'nbf': 1718702809, 'csrf': 'c304a3d2-9fe3-4261-a571-7a2602392321', 'exp': 1718703709, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702809, 'jti': '4934dec4-6747-43c4-b9e6-c91b87516b00', 'type': 'access', 'sub': '667152d9d2df3cbaf59595cf', 'nbf': 1718702809, 'csrf': 'c304a3d2-9fe3-4261-a571-7a2602392321', 'exp': 1718703709, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702809, 'jti': 'dd90c25f-90a0-4b30-9c04-c2f6fe36c046', 'type': 'access', 'sub': '667152d9d2df3cbaf59595d3', 'nbf': 1718702809, 'csrf': '3bd4f69f-06a3-49b3-830a-e3e64baf8c74', 'exp': 1718703709, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all generated posts
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702809, 'jti': '39681862-9c15-4beb-a81d-187265580cbd', 'type': 'access', 'sub': '667152d9d2df3cbaf59595d5', 'nbf': 1718702809, 'csrf': 'f20c3637-4722-4eb0-89b8-f853e7793ddd', 'exp': 1718703709, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all generated posts
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702809, 'jti': 'e9e73c29-7bcc-4860-af3f-5c4b707f84fb', 'type': 'access', 'sub': '667152d9d2df3cbaf59595d8', 'nbf': 1718702809, 'csrf': '6830a698-02c2-46b6-9d9b-cfa46b2b84a0', 'exp': 1718703709, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702809, 'jti': 'e9e73c29-7bcc-4860-af3f-5c4b707f84fb', 'type': 'access', 'sub': '667152d9d2df3cbaf59595d8', 'nbf': 1718702809, 'csrf': '6830a698-02c2-46b6-9d9b-cfa46b2b84a0', 'exp': 1718703709, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702809, 'jti': '5b90db28-1336-4a8f-b328-2c0509f22e9e', 'type': 'access', 'sub': '667152d9d2df3cbaf59595dc', 'nbf': 1718702809, 'csrf': 'fb18b97e-f80b-4c77-baba-38c3eba1adc3', 'exp': 1718703709, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702809, 'jti': '2f4d2513-2c75-4156-b60e-9204a309baa7', 'type': 'access', 'sub': '667152d9d2df3cbaf59595df', 'nbf': 1718702809, 'csrf': 'b8eb42be-dddf-4512-8e9d-09f556ccc19a', 'exp': 1718703709, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
ERROR:app.extensions:'Public Official with ID 666e3cdc77f6b009eab6d345 not found'
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 20, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 19, in generate_post
    raise KeyError(f"Public Official with ID {po_id} not found")
KeyError: 'Public Official with ID 666e3cdc77f6b009eab6d345 not found'
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702810, 'jti': 'a14b9039-027e-4101-9156-95ea9776d769', 'type': 'access', 'sub': '667152dad2df3cbaf59595e2', 'nbf': 1718702810, 'csrf': '23a30865-c694-47ca-9dc6-a8502a2613a8', 'exp': 1718703710, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
ERROR:app.extensions:1 validation error for GeneratedPost
prompt
  String should have at least 1 character [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 20, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 25, in generate_post
    generated_post = GeneratedPost(user_id=ObjectId(user_id),
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for GeneratedPost
prompt
  String should have at least 1 character [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702810, 'jti': 'dbcc1e77-910e-4f58-adad-ac2312570b20', 'type': 'access', 'sub': '667152dad2df3cbaf59595e5', 'nbf': 1718702810, 'csrf': '0ed4629a-7f31-4ccb-9903-8a641e3307b0', 'exp': 1718703710, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
ERROR:app.extensions:1 validation error for GeneratedPost
social_media
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/enum
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\generatedposts\routes.py", line 20, in generate_post
    generated_post = generated_post_service.generate_post(**prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\generatedpost_data_manager_mongodb.py", line 25, in generate_post
    generated_post = GeneratedPost(user_id=ObjectId(user_id),
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for GeneratedPost
social_media
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='test', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/enum
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702810, 'jti': '773eb375-3a8c-4e76-87c2-f88a73a41a38', 'type': 'access', 'sub': '667152dad2df3cbaf59595e8', 'nbf': 1718702810, 'csrf': 'a2b29e10-c4cc-43cb-8461-e559c35f7e5b', 'exp': 1718703710, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test2@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702810, 'jti': '5a5a3528-46f8-464d-91e7-cda299ab8267', 'type': 'access', 'sub': '667152dad2df3cbaf59595ea', 'nbf': 1718702810, 'csrf': '2b1146e0-053b-4ff7-94b0-cb1c5072c5a8', 'exp': 1718703710, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test3@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702810, 'jti': '6d272e71-1575-456e-a54b-10d6c65b127e', 'type': 'access', 'sub': '667152dad2df3cbaf59595ec', 'nbf': 1718702810, 'csrf': '24e913a3-eb56-46ce-8a23-00dee8178b49', 'exp': 1718703710, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702810, 'jti': '8c24a5b3-5b76-44d2-8a85-8f7738bbfa0b', 'type': 'access', 'sub': '667152dad2df3cbaf59595ee', 'nbf': 1718702810, 'csrf': 'aa85534b-b7df-485e-a9fd-5cc3009dac63', 'exp': 1718703710, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all generated posts
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702810, 'jti': '0a899311-7f37-4422-b966-a4bde0f7fe6f', 'type': 'access', 'sub': '667152dad2df3cbaf59595f0', 'nbf': 1718702810, 'csrf': '0ed5721a-60e4-462f-8123-1a08a6a10834', 'exp': 1718703710, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all generated posts
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702810, 'jti': '32d1f4fa-4fd8-4b5d-a559-c609cd30da92', 'type': 'access', 'sub': '667152dad2df3cbaf59595f2', 'nbf': 1718702810, 'csrf': 'fcc0ae43-35b2-4190-b8ca-7453546c3aba', 'exp': 1718703710, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702810, 'jti': '4c81d79a-1c9b-4fe6-b347-3355d862a5b4', 'type': 'access', 'sub': '667152dad2df3cbaf59595f5', 'nbf': 1718702810, 'csrf': '2b6ee461-0ba5-4f0b-a86d-c76b9ee52563', 'exp': 1718703710, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702810, 'jti': '4c81d79a-1c9b-4fe6-b347-3355d862a5b4', 'type': 'access', 'sub': '667152dad2df3cbaf59595f5', 'nbf': 1718702810, 'csrf': '2b6ee461-0ba5-4f0b-a86d-c76b9ee52563', 'exp': 1718703710, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 667152dad2df3cbaf59595f6
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('667152dad2df3cbaf59595f6'), user_id=ObjectId('667152dad2df3cbaf59595f5'), public_official_id=ObjectId('667152dad2df3cbaf59595f4'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702811, 'jti': '060fa798-7eb4-45a3-95c4-0ef8450810bf', 'type': 'access', 'sub': '667152dbd2df3cbaf59595f9', 'nbf': 1718702811, 'csrf': 'dd7b2a1f-388e-43a8-b95a-252d74e2a7ca', 'exp': 1718703711, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702811, 'jti': 'a16a7ddf-59bb-4723-9c9b-ba8f2a036911', 'type': 'access', 'sub': '667152dbd2df3cbaf59595fb', 'nbf': 1718702811, 'csrf': '53c38d35-9b7d-4f0c-88ca-3587928a7a65', 'exp': 1718703711, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 667152dbd2df3cbaf59595fa
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('667152dbd2df3cbaf59595fa'), user_id=ObjectId('667152dbd2df3cbaf59595f9'), public_official_id=ObjectId('667152dad2df3cbaf59595f8'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702811, 'jti': 'f8cac4a5-8064-49f3-8cd8-70b65cd5203c', 'type': 'access', 'sub': '667152dbd2df3cbaf59595fd', 'nbf': 1718702811, 'csrf': '0dda6dea-ef4a-4bb5-8cdd-133028187fce', 'exp': 1718703711, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 6670be79761f0759941c494c
INFO:app.extensions:generated_post=None
ERROR:app.extensions:Generated Post with ID 6670be79761f0759941c494c not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702811, 'jti': '154e3629-6c90-4642-a3d9-d0a8fe86e222', 'type': 'access', 'sub': '667152dbd2df3cbaf5959600', 'nbf': 1718702811, 'csrf': '0329c95f-97a2-4eec-a6b7-486183932c0b', 'exp': 1718703711, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test2@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702811, 'jti': '0f624982-8ea2-4b0d-934c-07040e316f08', 'type': 'access', 'sub': '667152dbd2df3cbaf5959602', 'nbf': 1718702811, 'csrf': 'd33c8924-9f9a-452f-8c8a-5164e26563e4', 'exp': 1718703711, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated post by post id 667152dbd2df3cbaf5959601
INFO:app.extensions:generated_post=GeneratedPost(id=ObjectId('667152dbd2df3cbaf5959601'), user_id=ObjectId('667152dbd2df3cbaf5959600'), public_official_id=ObjectId('667152dbd2df3cbaf59595ff'), title='Jeff: the Post', text='my name jeff', prompt='Make a post about Jeff.', social_media=<SocialMedia.FACEBOOK: 'facebook'>)
ERROR:app.extensions:User with ID 667152dbd2df3cbaf5959602 does not have access to Generated Post with ID 667152dbd2df3cbaf5959601
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702811, 'jti': 'ac8e5bf8-0bdf-41e1-8cb0-52241f6076ef', 'type': 'access', 'sub': '667152dbd2df3cbaf5959605', 'nbf': 1718702811, 'csrf': '1bff87b7-4c72-4280-8b56-9f0e47badb58', 'exp': 1718703711, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702811, 'jti': 'ac8e5bf8-0bdf-41e1-8cb0-52241f6076ef', 'type': 'access', 'sub': '667152dbd2df3cbaf5959605', 'nbf': 1718702811, 'csrf': '1bff87b7-4c72-4280-8b56-9f0e47badb58', 'exp': 1718703711, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702811, 'jti': 'ac8e5bf8-0bdf-41e1-8cb0-52241f6076ef', 'type': 'access', 'sub': '667152dbd2df3cbaf5959605', 'nbf': 1718702811, 'csrf': '1bff87b7-4c72-4280-8b56-9f0e47badb58', 'exp': 1718703711, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702811, 'jti': 'ac8e5bf8-0bdf-41e1-8cb0-52241f6076ef', 'type': 'access', 'sub': '667152dbd2df3cbaf5959605', 'nbf': 1718702811, 'csrf': '1bff87b7-4c72-4280-8b56-9f0e47badb58', 'exp': 1718703711, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 667152dbd2df3cbaf5959605
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702811, 'jti': '9cfb4ff4-408b-4940-8908-cdb00083ff9b', 'type': 'access', 'sub': '667152dbd2df3cbaf595960b', 'nbf': 1718702811, 'csrf': 'c1978212-b1af-4439-9abf-606f72b257bb', 'exp': 1718703711, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702811, 'jti': '9cfb4ff4-408b-4940-8908-cdb00083ff9b', 'type': 'access', 'sub': '667152dbd2df3cbaf595960b', 'nbf': 1718702811, 'csrf': 'c1978212-b1af-4439-9abf-606f72b257bb', 'exp': 1718703711, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702811, 'jti': '9cfb4ff4-408b-4940-8908-cdb00083ff9b', 'type': 'access', 'sub': '667152dbd2df3cbaf595960b', 'nbf': 1718702811, 'csrf': 'c1978212-b1af-4439-9abf-606f72b257bb', 'exp': 1718703711, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Generating post
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702811, 'jti': '06958a4e-ed73-4dda-a8e1-243ee4ad934f', 'type': 'access', 'sub': '667152dbd2df3cbaf595960f', 'nbf': 1718702811, 'csrf': 'b31c2817-329f-4af9-9e9f-0412a33d02a6', 'exp': 1718703711, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 667152dbd2df3cbaf595960b
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702812, 'jti': 'd3c9ed34-68bf-4dcf-9e70-89f96b1bdeeb', 'type': 'access', 'sub': '667152dcd2df3cbaf5959611', 'nbf': 1718702812, 'csrf': '21542c94-3749-40c9-853d-62e76883081f', 'exp': 1718703712, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 667152dcd2df3cbaf5959611
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702812, 'jti': '9a62eda4-f23a-40f0-8a89-18d9d211a945', 'type': 'access', 'sub': '667152dcd2df3cbaf5959613', 'nbf': 1718702812, 'csrf': '5b9166ef-5161-4674-8b60-17a31b5acc74', 'exp': 1718703712, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting generated posts by user id 6670be79761f0759941c494c
ERROR:app.extensions:User with ID 667152dcd2df3cbaf5959613 does not have access to Generated Post for user ID 6670be79761f0759941c494c
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702812, 'jti': 'de990ce6-1a46-45d8-8717-707f38af487d', 'type': 'access', 'sub': '667152dcd2df3cbaf5959615', 'nbf': 1718702812, 'csrf': '6041cd1b-be5d-4d98-b1ee-b7251fbb821b', 'exp': 1718703712, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702812, 'jti': 'd24acc25-6532-4b84-8f63-40d363558e77', 'type': 'access', 'sub': '667152dcd2df3cbaf5959618', 'nbf': 1718702812, 'csrf': 'c71b24db-fb29-4edf-a5ad-5161df1facfc', 'exp': 1718703712, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.7/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.7/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702812, 'jti': 'a24117ae-5a1a-4a4a-bed2-96631f7e668d', 'type': 'access', 'sub': '667152dcd2df3cbaf595961a', 'nbf': 1718702812, 'csrf': '619e4941-e31e-4af6-bd13-a533e55b56f0', 'exp': 1718703712, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='test123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702812, 'jti': '2a93276a-8c28-41d5-8c04-83d585354c2a', 'type': 'access', 'sub': '667152dcd2df3cbaf595961c', 'nbf': 1718702812, 'csrf': '245b8a82-8ce3-4444-87d0-01447bd30aa1', 'exp': 1718703712, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסט234manמן', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702813, 'jti': '0f0cfa1d-a8fa-492e-979e-511dc82201ff', 'type': 'access', 'sub': '667152dcd2df3cbaf595961e', 'nbf': 1718702813, 'csrf': 'd3c22a0d-98d5-4782-818e-177629508aff', 'exp': 1718703713, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='badposition', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702813, 'jti': '8e2f67f0-df00-4686-ae8c-8d3a328e6d3f', 'type': 'access', 'sub': '667152ddd2df3cbaf5959620', 'nbf': 1718702813, 'csrf': '63c09b59-26a0-4dbd-a83c-4e594924c972', 'exp': 1718703713, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/enum
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 22, in create_public_official
    public_official = PublicOfficial(**po_data)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/enum
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702813, 'jti': '3d5b5501-f9a7-4c01-a63f-5753112e8912', 'type': 'access', 'sub': '667152ddd2df3cbaf5959622', 'nbf': 1718702813, 'csrf': '2598d168-2560-4fd4-b13e-5707c86e6855', 'exp': 1718703713, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702813, 'jti': '3d5b5501-f9a7-4c01-a63f-5753112e8912', 'type': 'access', 'sub': '667152ddd2df3cbaf5959622', 'nbf': 1718702813, 'csrf': '2598d168-2560-4fd4-b13e-5707c86e6855', 'exp': 1718703713, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
ERROR:app.extensions:Public Official already exists
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 23, in create_public_official
    public_official = public_official_service.create_public_official(public_official)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\logic\mongo\publicofficial_data_manager_mongodb.py", line 14, in create_public_official
    raise ObjectAlreadyExistsException("Public Official already exists")
app.models.exceptions.object_already_exists_exception.ObjectAlreadyExistsException: Public Official already exists
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702813, 'jti': 'ec319b3e-c2a4-4d2d-995f-d4281b3c0b55', 'type': 'access', 'sub': '667152ddd2df3cbaf5959625', 'nbf': 1718702813, 'csrf': '0d32271c-6494-4315-aa97-e6e68d343c5a', 'exp': 1718703713, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702813, 'jti': 'ec319b3e-c2a4-4d2d-995f-d4281b3c0b55', 'type': 'access', 'sub': '667152ddd2df3cbaf5959625', 'nbf': 1718702813, 'csrf': '0d32271c-6494-4315-aa97-e6e68d343c5a', 'exp': 1718703713, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702813, 'jti': 'ec319b3e-c2a4-4d2d-995f-d4281b3c0b55', 'type': 'access', 'sub': '667152ddd2df3cbaf5959625', 'nbf': 1718702813, 'csrf': '0d32271c-6494-4315-aa97-e6e68d343c5a', 'exp': 1718703713, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702813, 'jti': 'ec319b3e-c2a4-4d2d-995f-d4281b3c0b55', 'type': 'access', 'sub': '667152ddd2df3cbaf5959625', 'nbf': 1718702813, 'csrf': '0d32271c-6494-4315-aa97-e6e68d343c5a', 'exp': 1718703713, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702813, 'jti': '4f80961f-3b8d-401e-8d63-613ab2c0151a', 'type': 'access', 'sub': '667152ddd2df3cbaf595962a', 'nbf': 1718702813, 'csrf': '97bd3d45-9ffc-4f19-990c-729e0aaeb98e', 'exp': 1718703713, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702813, 'jti': '4f80961f-3b8d-401e-8d63-613ab2c0151a', 'type': 'access', 'sub': '667152ddd2df3cbaf595962a', 'nbf': 1718702813, 'csrf': '97bd3d45-9ffc-4f19-990c-729e0aaeb98e', 'exp': 1718703713, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702813, 'jti': '4f80961f-3b8d-401e-8d63-613ab2c0151a', 'type': 'access', 'sub': '667152ddd2df3cbaf595962a', 'nbf': 1718702813, 'csrf': '97bd3d45-9ffc-4f19-990c-729e0aaeb98e', 'exp': 1718703713, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702813, 'jti': 'e77716f5-78a4-4e59-b2a6-3fbd8a08ffd8', 'type': 'access', 'sub': '667152ddd2df3cbaf595962e', 'nbf': 1718702813, 'csrf': '9e518038-2872-47f5-81b8-545ef2d46560', 'exp': 1718703713, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702814, 'jti': '37edb190-f189-4aac-9731-4dc01209d224', 'type': 'access', 'sub': '667152ddd2df3cbaf5959630', 'nbf': 1718702814, 'csrf': '6c4abec2-1d0c-4810-83a9-226159b1cdc9', 'exp': 1718703714, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702814, 'jti': '37edb190-f189-4aac-9731-4dc01209d224', 'type': 'access', 'sub': '667152ddd2df3cbaf5959630', 'nbf': 1718702814, 'csrf': '6c4abec2-1d0c-4810-83a9-226159b1cdc9', 'exp': 1718703714, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702814, 'jti': '37edb190-f189-4aac-9731-4dc01209d224', 'type': 'access', 'sub': '667152ddd2df3cbaf5959630', 'nbf': 1718702814, 'csrf': '6c4abec2-1d0c-4810-83a9-226159b1cdc9', 'exp': 1718703714, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Getting all public officials
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702814, 'jti': '18b2d293-5d6b-48a2-aefa-5a20594d6d99', 'type': 'access', 'sub': '667152ded2df3cbaf5959636', 'nbf': 1718702814, 'csrf': '27d7e152-bf7d-4ad3-a189-1412740fca66', 'exp': 1718703714, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:Getting public official by ID 667152ded2df3cbaf5959637
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:Getting public official by ID 666d7c070477c0def6d136c9
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702814, 'jti': 'a7f4e057-564c-494f-ade4-d65dd5263d14', 'type': 'access', 'sub': '667152ded2df3cbaf595963b', 'nbf': 1718702814, 'csrf': '836efe7c-183d-4a5f-b81a-c701c2e9ecf9', 'exp': 1718703714, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702814, 'jti': 'a7f4e057-564c-494f-ade4-d65dd5263d14', 'type': 'access', 'sub': '667152ded2df3cbaf595963b', 'nbf': 1718702814, 'csrf': '836efe7c-183d-4a5f-b81a-c701c2e9ecf9', 'exp': 1718703714, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='667152ded2df3cbaf595963c')
INFO:app.extensions:po_data={'name_eng': 'newname', 'name_heb': 'שםחדש', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702814, 'jti': '4ef7867b-5c8d-41e2-954a-6b85c5ea4769', 'type': 'access', 'sub': '667152ded2df3cbaf595963e', 'nbf': 1718702814, 'csrf': '959182c2-4f1a-4bc4-9e52-c7514030b84e', 'exp': 1718703714, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702814, 'jti': '4ef7867b-5c8d-41e2-954a-6b85c5ea4769', 'type': 'access', 'sub': '667152ded2df3cbaf595963e', 'nbf': 1718702814, 'csrf': '959182c2-4f1a-4bc4-9e52-c7514030b84e', 'exp': 1718703714, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='667152ded2df3cbaf595963f')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.7/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Field required [type=missing, input_value={'name_eng': 'testman', '..., 'twitter': 'testman'}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.7/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702814, 'jti': 'a3d155de-6a64-4471-9094-7a6194299f70', 'type': 'access', 'sub': '667152ded2df3cbaf5959641', 'nbf': 1718702814, 'csrf': '07751352-b7a2-4701-b6d9-05bf4ebc23e7', 'exp': 1718703714, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='666d7c070477c0def6d136c9')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:Public Official with ID 666d7c070477c0def6d136c9 not found
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702815, 'jti': '9460a694-6e66-497e-a3a5-c8b548f1fcc5', 'type': 'access', 'sub': '667152dfd2df3cbaf5959643', 'nbf': 1718702815, 'csrf': '37bcb0ba-7d1f-4904-a1b2-003e44d9b9d1', 'exp': 1718703715, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702815, 'jti': '9460a694-6e66-497e-a3a5-c8b548f1fcc5', 'type': 'access', 'sub': '667152dfd2df3cbaf5959643', 'nbf': 1718702815, 'csrf': '37bcb0ba-7d1f-4904-a1b2-003e44d9b9d1', 'exp': 1718703715, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='667152dfd2df3cbaf5959644')
INFO:app.extensions:po_data={'name_eng': 'newname123', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_eng
  Assertion failed, Name must contain only English letters and spaces [type=assertion_error, input_value='newname123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702815, 'jti': 'e98e7aa1-d607-43a6-9bb3-d3c86de07ebd', 'type': 'access', 'sub': '667152dfd2df3cbaf5959646', 'nbf': 1718702815, 'csrf': '643c6046-2447-4266-a4ca-f60ed871b3f5', 'exp': 1718703715, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702815, 'jti': 'e98e7aa1-d607-43a6-9bb3-d3c86de07ebd', 'type': 'access', 'sub': '667152dfd2df3cbaf5959646', 'nbf': 1718702815, 'csrf': '643c6046-2447-4266-a4ca-f60ed871b3f5', 'exp': 1718703715, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='667152dfd2df3cbaf5959647')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטי134man', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
name_heb
  Assertion failed, Name must be in Hebrew (hebrew characters, spaces and quotes only) [type=assertion_error, input_value='טסטי134man', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702815, 'jti': 'd597970e-cdf4-4887-880d-f37da7a7c923', 'type': 'access', 'sub': '667152dfd2df3cbaf5959649', 'nbf': 1718702815, 'csrf': 'bae96887-3288-455c-ad01-da526afc838f', 'exp': 1718703715, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702815, 'jti': 'd597970e-cdf4-4887-880d-f37da7a7c923', 'type': 'access', 'sub': '667152dfd2df3cbaf5959649', 'nbf': 1718702815, 'csrf': 'bae96887-3288-455c-ad01-da526afc838f', 'exp': 1718703715, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='667152dfd2df3cbaf595964a')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'myposition123', 'social_media_handles': {'facebook': 'testman', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
position
  Assertion failed, Position must be in Hebrew (hebrew characters, spaces, quotes and numbers only) [type=assertion_error, input_value='myposition123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/assertion_error
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702815, 'jti': '1beeb8d5-ee59-40c1-9fe9-b6caa1e3f03d', 'type': 'access', 'sub': '667152dfd2df3cbaf595964c', 'nbf': 1718702815, 'csrf': 'bc69682b-ab6a-4417-8704-3dd0cd3c8028', 'exp': 1718703715, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Creating public official
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702815, 'jti': '1beeb8d5-ee59-40c1-9fe9-b6caa1e3f03d', 'type': 'access', 'sub': '667152dfd2df3cbaf595964c', 'nbf': 1718702815, 'csrf': 'bc69682b-ab6a-4417-8704-3dd0cd3c8028', 'exp': 1718703715, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating public official (po_id='667152dfd2df3cbaf595964d')
INFO:app.extensions:po_data={'name_eng': 'testman', 'name_heb': 'טסטמן', 'political_party': 'טסט פארטי', 'position': 'ראש הטסטים', 'social_media_handles': {'facebook': 'testman', 'myspace': 'myhandle', 'twitter': 'testman'}}
ERROR:app.extensions:1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/enum
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\publicofficials\routes.py", line 71, in update_public_official
    po = public_official_service.update_public_official(po_id, PublicOfficial(**po_data))
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for PublicOfficial
social_media_handles.myspace.[key]
  Input should be 'twitter', 'facebook', 'instagram' or 'linkedin' [type=enum, input_value='myspace', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/enum
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702816, 'jti': '2730c7ca-a290-476e-84b2-89a7b6abfa7e', 'type': 'access', 'sub': '667152e0d2df3cbaf5959652', 'nbf': 1718702816, 'csrf': '2d786f85-f8d2-4baf-8c27-e1a65584053c', 'exp': 1718703716, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Deleting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702816, 'jti': '288720e8-7b28-4a1b-a2da-6edf49204c1f', 'type': 'access', 'sub': '667152e0d2df3cbaf5959657', 'nbf': 1718702816, 'csrf': '840cabe6-f3d9-43b0-87b9-e305aa29b19a', 'exp': 1718703716, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Logging in user
INFO:app.extensions:login_data={'email': 'admin@test.com', 'password': 'admin123'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702816, 'jti': '89d0ab91-ff6c-4122-b3da-f7614e6ab897', 'type': 'access', 'sub': '667152e0d2df3cbaf595965c', 'nbf': 1718702816, 'csrf': 'beace908-11d9-4b51-b233-a9836f13b8d2', 'exp': 1718703716, 'is_admin': True}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Getting all users
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'one@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'two@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'three@mail.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702817, 'jti': 'dc619640-2a52-41eb-9f53-02f554c2ab27', 'type': 'access', 'sub': '667152e1d2df3cbaf5959661', 'nbf': 1718702817, 'csrf': '7b03e5b1-5456-4a1b-954c-398924f0180a', 'exp': 1718703717, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
ERROR:app.extensions:Unauthorized request: Must be Admin
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702817, 'jti': 'e6406cdf-51bb-4bb4-9952-96b26f6bb681', 'type': 'access', 'sub': '667152e1d2df3cbaf5959663', 'nbf': 1718702817, 'csrf': 'b8a5fed6-f458-49c3-884a-710887a375d1', 'exp': 1718703717, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'newname'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702817, 'jti': 'c038a3d0-da67-44fe-9961-7b4dad043317', 'type': 'access', 'sub': '667152e1d2df3cbaf5959665', 'nbf': 1718702817, 'csrf': '79f9f6d4-77ea-433c-96e7-1ca991c6ede4', 'exp': 1718703717, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'new position', 'username': 'testman'}
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702817, 'jti': 'a28d0716-2fd1-4415-9a3c-0f5a92ad66f1', 'type': 'access', 'sub': '667152e1d2df3cbaf5959667', 'nbf': 1718702817, 'csrf': '570fe3f8-25a2-4766-bb5a-c92519b0a1dd', 'exp': 1718703717, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester'}
ERROR:app.extensions:1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.7/v/missing
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  Field required [type=missing, input_value={'email': 'test@test.com'...', 'position': 'tester'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.7/v/missing
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702817, 'jti': '08442344-a25d-40c3-9c50-c8b43da06bcd', 'type': 'access', 'sub': '667152e1d2df3cbaf5959669', 'nbf': 1718702817, 'csrf': 'e953e3ac-69e2-44b6-aba5-b01e62686cf8', 'exp': 1718703717, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ''}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702817, 'jti': '08442344-a25d-40c3-9c50-c8b43da06bcd', 'type': 'access', 'sub': '667152e1d2df3cbaf5959669', 'nbf': 1718702817, 'csrf': 'e953e3ac-69e2-44b6-aba5-b01e62686cf8', 'exp': 1718703717, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'a'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702817, 'jti': '08442344-a25d-40c3-9c50-c8b43da06bcd', 'type': 'access', 'sub': '667152e1d2df3cbaf5959669', 'nbf': 1718702817, 'csrf': 'e953e3ac-69e2-44b6-aba5-b01e62686cf8', 'exp': 1718703717, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'ab'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702817, 'jti': '08442344-a25d-40c3-9c50-c8b43da06bcd', 'type': 'access', 'sub': '667152e1d2df3cbaf5959669', 'nbf': 1718702817, 'csrf': 'e953e3ac-69e2-44b6-aba5-b01e62686cf8', 'exp': 1718703717, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'abc'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702817, 'jti': '08442344-a25d-40c3-9c50-c8b43da06bcd', 'type': 'access', 'sub': '667152e1d2df3cbaf5959669', 'nbf': 1718702817, 'csrf': 'e953e3ac-69e2-44b6-aba5-b01e62686cf8', 'exp': 1718703717, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'אבגד'}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702817, 'jti': '08442344-a25d-40c3-9c50-c8b43da06bcd', 'type': 'access', 'sub': '667152e1d2df3cbaf5959669', 'nbf': 1718702817, 'csrf': 'e953e3ac-69e2-44b6-aba5-b01e62686cf8', 'exp': 1718703717, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': ' '}
ERROR:app.extensions:1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
username
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702818, 'jti': '7155cb0d-4d5e-40bd-8a40-63de5bd87841', 'type': 'access', 'sub': '667152e2d2df3cbaf595966b', 'nbf': 1718702818, 'csrf': 'e2208ccf-f656-479c-a78a-24963d8f2b8a', 'exp': 1718703718, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': '', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702818, 'jti': '7155cb0d-4d5e-40bd-8a40-63de5bd87841', 'type': 'access', 'sub': '667152e2d2df3cbaf595966b', 'nbf': 1718702818, 'csrf': 'e2208ccf-f656-479c-a78a-24963d8f2b8a', 'exp': 1718703718, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'a', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='a', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702818, 'jti': '7155cb0d-4d5e-40bd-8a40-63de5bd87841', 'type': 'access', 'sub': '667152e2d2df3cbaf595966b', 'nbf': 1718702818, 'csrf': 'e2208ccf-f656-479c-a78a-24963d8f2b8a', 'exp': 1718703718, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'ab', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='ab', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702818, 'jti': '7155cb0d-4d5e-40bd-8a40-63de5bd87841', 'type': 'access', 'sub': '667152e2d2df3cbaf595966b', 'nbf': 1718702818, 'csrf': 'e2208ccf-f656-479c-a78a-24963d8f2b8a', 'exp': 1718703718, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'abc', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='abc', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702818, 'jti': '7155cb0d-4d5e-40bd-8a40-63de5bd87841', 'type': 'access', 'sub': '667152e2d2df3cbaf595966b', 'nbf': 1718702818, 'csrf': 'e2208ccf-f656-479c-a78a-24963d8f2b8a', 'exp': 1718703718, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'אבגד', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value='אבגד', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702818, 'jti': '7155cb0d-4d5e-40bd-8a40-63de5bd87841', 'type': 'access', 'sub': '667152e2d2df3cbaf595966b', 'nbf': 1718702818, 'csrf': 'e2208ccf-f656-479c-a78a-24963d8f2b8a', 'exp': 1718703718, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': ' ', 'username': 'testman'}
ERROR:app.extensions:1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
Traceback (most recent call last):
  File "C:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\app\blueprints\users\routes.py", line 33, in update_user
    user = user_service.update_user(user.get_id(), User(**user_data))
                                                   ^^^^^^^^^^^^^^^^^
  File "c:\Users\dnoy1\OneDrive\Documents\Afeka College\Final Project\Code\flask_backend\.venv\Lib\site-packages\pydantic\main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for User
position
  String should have at least 5 characters [type=string_too_short, input_value=' ', input_type=str]
    For further information visit https://errors.pydantic.dev/2.7/v/string_too_short
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702819, 'jti': '7c604919-73a7-46cf-807b-2e1d8d2e13ad', 'type': 'access', 'sub': '667152e3d2df3cbaf595966d', 'nbf': 1718702819, 'csrf': 'bd9eb32d-ef74-4233-a09e-8dd07faea2e6', 'exp': 1718703719, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'new@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
ERROR:app.extensions:Cannot set email for user update
INFO:app.extensions:Starting app...
INFO:app.extensions:App started
INFO:app.extensions:Initializing Database...
INFO:app.extensions:Database Initialized
INFO:app.extensions:Initializing JWTManager...
INFO:app.extensions:JWTManager Initialized
INFO:app.extensions:Registering Blueprints...
INFO:app.extensions:Blueprints Registered
INFO:app.extensions:Registering user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'username': 'testman'}
INFO:app.extensions:jwt_data={'fresh': False, 'iat': 1718702819, 'jti': '7fc6e641-83eb-4021-b873-e333806c9268', 'type': 'access', 'sub': '667152e3d2df3cbaf595966f', 'nbf': 1718702819, 'csrf': 'f8ff210a-9670-476a-aad2-59f2f9093614', 'exp': 1718703719, 'is_admin': False}_jwt_header={'alg': 'HS256', 'typ': 'JWT'}
INFO:app.extensions:Updating user
INFO:app.extensions:user_data={'email': 'test@test.com', 'password': 'testtest', 'position': 'tester', 'role': 'admin', 'username': 'testman'}
ERROR:app.extensions:Cannot set role for user update
